{"version":3,"sources":["Styles/typed-components.ts","Components/Spinner/Spinner.tsx","Components/Spinner/index.tsx","Routes/Home/HomeQueries.ts","Routes/Home/HomeProvider.tsx","Components/CheckboxDetails/CheckboxDetails.tsx","Components/CheckboxDetails/index.tsx","Components/InputDetails/InputDetails.tsx","Components/JobList/JobList.tsx","Components/JobList/index.tsx","Components/EditButton/EditButton.tsx","Components/EditButton/index.tsx","Components/CheckedDetailsText/CheckedDetailsText.tsx","Components/CheckedDetailsText/index.tsx","Components/InputIcon/InputIcon.tsx","Components/InputIcon/index.tsx","Components/DetailPage/DetailsPage.tsx","Components/DetailPage/index.tsx","Components/GroupCard/GroupCard.tsx","Components/GroupCard/index.tsx","Components/Menubar/Menubar.tsx","Components/Menubar/index.tsx","Components/Main/Main.tsx","Components/Main/index.tsx","Routes/Home/HomePresenter.tsx","Components/GroupCheckbox/GroupCheckbox.tsx","Components/Progressbar/Progressbar.tsx","Components/Progressbar/index.tsx","Components/ButtonIcon/ButtonIcon.tsx","Components/ButtonIcon/index.tsx","Components/FormCard/FormCard.tsx","Components/FormCard/index.tsx","Components/CheckboxText/CheckboxText.tsx","Components/CheckboxText/index.tsx","Components/ConfirmText/ConfirmText.tsx","Components/ConfirmText/index.tsx","Components/CheckboxResult/CheckboxResult.tsx","Components/CheckboxResult/index.tsx","Components/CheckboxResultText/CheckboxResultText.tsx","Components/CheckboxResultText/index.tsx","Components/CheckboxAgree/CheckboxAgree.tsx","Components/CheckboxAgree/index.tsx","Components/CreateGroupModal/CreateGroupModalPresenter.tsx","Components/CreateGroupModal/index.tsx","Components/CreateGroupModal/CreateGroupModalContainer.tsx","Utils/nullGrouping.ts","Routes/Home/HomeContainer.tsx","Routes/Home/index.tsx","Styles/theme.ts","Components/Intro/Intro.tsx","Components/Intro/index.tsx","Components/FileItem/FileItem.tsx","Components/FileItem/index.tsx","Routes/Main/MainQueries.ts","Routes/Main/MainProvider.tsx","Utils/getTime.ts","Components/AutoCheckbox/AutoCheckbox.tsx","Components/AutoCheckbox/index.tsx","Components/SpinnerPolling/SpinnerPolling.tsx","Components/SpinnerPolling/index.tsx","Components/ListBox/ListBox.tsx","Components/ListBox/index.tsx","Components/ToggleBtn/ToggleBtn.tsx","Components/ToggleBtn/index.tsx","Components/RecordTable/RecordTable.tsx","Components/RecordTable/index.tsx","Components/RecordBox/RecordBox.tsx","Components/RecordBox/index.tsx","Routes/Main/MainPresenter.tsx","Routes/Main/MainContainer.tsx","Routes/Main/index.tsx","Routes/LoadingProgressbar/index.tsx","App.tsx","apollo.ts","Styles/global-styles.ts","index.tsx"],"names":["styled","default","keyframes","createGlobalStyle","ThemeProvider","Container","div","LoadEffect","Spinner","className","GET_ALL_GROUPING","gql","CREATE_GROUPING","DELETE_GROUPING","UPDATE_GROUPING","START_FOR_GROUPING","CREATE_RESULT","HomeContext","React","createContext","useHomeContext","useContext","InitGroupData","groupName","pdf","isChecked","fileName","filePath","restful","isLogging","isSendFile","data","sendEmail","email","password","destinationEmails","mailTitle","mailContent","redirect","ipAddress","port","useHomeFetch","formGroupReducer","useCallback","state","action","formGrouping","object","name","type","Error","checked","value","tmpValue","useState","isDetails","setIsDetails","exeLoading","setExeLoading","isCreateGroup","setIsCreateGroup","isAgree","setIsAgree","isUpdate","setIsUpdate","useReducer","formCreateGrouping","dispatchCreateGrouping","selectedGrouping","setSelectedGrouping","tmpGrouping","dispatchTmpGrouping","currentStep","setCurrentStep","errorLoading","setErrorLoading","selectedCardIndex","setSelectedCardIndex","isRestfulFunc","setValue","onInit","onChange","event","target","useInput","onErrorLoading","setTimeout","toggleCreateModal","toggleConfirm","toggleIsUpdate","currentUpdated","undefined","handleChangeFormGrouping","handleTextChangeFormGrouping","handleChangeRestfulCheckbox","resetFormCreateGrouping","onNextStep","notChecked","toast","error","onPreviousStep","handleClickCardIndex","index","toggleDetails","onCancelCardIndex","handleSelectedGrouping","grouping","handleTmpGrouping","handleChangeTmpGrouping","handleTextChangeTmpGrouping","handleChangeTmpRestfulCheckbox","onExeLoading","ProvideHome","children","Provider","InputCheckbox","input","Label","label","Text","span","getPath","CheckboxDetails","text","readOnly","id","htmlFor","xmlns","width","height","viewBox","d","Input","InputDetails","title","autoComplete","Wrapper","JobIcon","Title","h1","JobList","button","EditButton","onClick","Fragment","Icon","InputChecked","CheckedDetailsText","FormInput","FormText","textarea","props","theme","blueColor","FuctionStart","FunctionEnd","InputIcon","svgPath","placeholder","isFunction","indexOf","Header","HeaderWrapper","HeaderTitle","SubTitle","Box","CheckboxCell","InputDetailsExtended","JobListExtended","JobListWrapper","ExitButton","ButtonBox","DetailsPage","handleUpdateGroup","e","Checkbox","CheckedIcon","NameBox","GroupName","GroupIcon","EffectIcon","EffectIcon2","EffectIcon3","GroupCard","defaultChecked","Item","StartItem","InfoItem","DeleteItem","CancelItem","Menubar","handleDeleteGroup","handleStartForGrouping","CardList","TopTitle","h2","MiddleTitle","h5","BottomTitle","h3","EffectBefore","EffectAfter","BottomTitleWrapper","MainTitle","GroupCardExtended","AddGroupButton","FileBox","FileIcon","FileTitle","Main","groups","currentFile","getGroupList","groupList","to","length","map","group","key","preventDefault","Effect","EffectExtendedTop","EffectExtendedMiddle","EffectExtendedBottom","ScrollScreen","MainExtended","DetailsPageExtended","SpinnerExtended","HomePresenter","loading","Name","GroupCheckbox","labelName","getLabelName","Progressbar","num","ButtonIcon","step","EffectWrapper","LeftEffect","RightEffect","Logo","FormCard","LabelIcon","CheckboxText","p","Data","Job","ConfirmText","job","CheckboxResult","greenColor","CheckboxResultText","IconBox","CheckboxAgree","WrapperTitle","Screen","WrapperStandard","WrapperChoiceJob","WrapperDetailsJob","WrapperConfirm","GroupList","CloseBtn","ProgressCell","ProgressBarExtended","ButtonCell","GroupNameCell","DetailsInputCell","FormCardExtended","InputIconExtended","CheckboxTextExtended","CheckBoxResultCell","CheckboxResultCellWrapper","ConfirmTextCell","ConfirmTextExtended","CheckboxResultExtended","CreateGroupModalPresenter","handleCreateGroup","CreateGroupModal","InitGroupList","nullGrouping","Home","location","history","accepted","push","cache","result","readQuery","query","console","log","useGetAllGrouping","useApolloClient","setLoading","setGroupList","useEffect","useFetch","useMutation","onCompleted","onError","mutationCreateGrouping","useCreateGrouping","mutationUpdateGrouping","UpdateGrouping","info","useUpdateGrouping","mutationDeleteGrouping","DeleteGrouping","success","useDeleteGrouping","mutationCreateResult","StartForGrouping","ok","message","variables","isPdf","isSendEmail","isRedirect","isRestful","date","Date","getTime","mutationStartForGrouping","startForGroupingData","client","useStartGrouping","replace","useCreateResult","updatedGroup","pdfChecked","sendEmailChecked","redirectChecked","restfulChecked","warn","nullUpdatedGroup","alert","groupId","parseInt","newGrouping","isVerifyFormStep","VerifyCreateGroup","isAvailableGroupName","newGroupName","find","AvailableGroupName","nullNewGrouping","Bg","Content","Intro","ImgBox","TextBox","Img","imgPath","No","SelectedButton","Link","FileItem","no","pathname","GET_ALL_RESULT","DELETE_RESULT","GET_DOCS","MainContext","onStep","onToggleDetails","mutationDeleteResult","dataGetDocs","GetDocs","docs","loadingGetDocs","autoSearch","useMainContext","useMainFetch","setStep","initData","setChecked","useQuery","partialRefetch","fetchPolicy","pollInterval","MainLoading","newStep","MainProvider","current","post","second","minute","hour","day","CheckInput","AutoCheckbox","Ripple","SpinnerPolling","FileBoxScroll","FileItemExtended","Empty","EmptyText","TextBar","SearchText","ListBox","doc","preview_path","ToggleInput","Bar","Circle","ToggleBtn","TableBox","TableScroll","Table","table","Thead","thead","Tbody","tbody","Tr","tr","Th","th","Td","td","DeleteBtn","Options","Option","OptionText","TableIcon","bgColor","ExtendedToggleBtn","Msg","RecordTable","resultList","GetAllResult","fill","style","color","disabled","colSpan","RecordBox","LightContainer","SlideScreen","GoBtn","GoRecordBtn","GoListBtn","MainPresenter","MainContainer","memo","LoadingProgressbar","AppPresenter","path","exact","component","from","App","httpLink","HttpLink","uri","middlewareLink","ApolloLink","operation","forward","token","localStorage","getItem","setContext","headers","InMemoryCache","link","concat","writeData","__typename","JSON","parse","getCacheData","getCacheResultData","ApolloClient","defaultOptions","watchQuery","resolvers","Query","GetGrouping","_","Mutation","CreateGrouping","x_grouping","definedData","setItem","stringify","newGroups","filter","CreateResult","newResult","strResults","strGroupList","newResults","DeleteResult","GlobalStyles","Shake","ReactDOM","render","position","autoClose","document","getElementById"],"mappings":"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","file":"static/js/main.74d784ed.chunk.js","sourcesContent":["import  * as StyleThings from \"styled-components\";\r\nimport { ThemedStyledComponentsModule } from \"styled-components\";\r\nimport { ITheme } from \"../Types/types\";\r\n\r\nconst {\r\n    default: styled,\r\n    keyframes,\r\n    createGlobalStyle,\r\n    ThemeProvider\r\n} = StyleThings as ThemedStyledComponentsModule<ITheme>;\r\n\r\nexport default styled;\r\nexport { keyframes, createGlobalStyle, ThemeProvider };","import React from \"react\";\r\nimport styled, { keyframes } from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    &,\r\n    &::after,\r\n    &::before {\r\n        width: 1em;\r\n        height: 4em;\r\n        background: #ffffff;\r\n        animation: ${keyframes => LoadEffect} 1s infinite ease-in-out;\r\n    }\r\n    &::after,\r\n    &::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n    }\r\n    &::before {\r\n        left: -1.5em;\r\n        animation-delay: -0.32s;\r\n    }\r\n    &::after {\r\n        left: 1.5em;\r\n        animation-delay: 0.32s;\r\n    }\r\n    color: #ffffff;\r\n    text-indent: -9999em;\r\n    margin: 0 auto;\r\n    font-size: 11px;\r\n    transform: translateZ(0);\r\n    animation-delay: -0.16s;\r\n`;\r\nconst LoadEffect = keyframes`\r\n    0%,\r\n    80%,\r\n    100% {\r\n        box-shadow: 0 0;\r\n        height: 4em;\r\n    }\r\n    40% {\r\n        box-shadow: 0 -2em;\r\n        height: 5em;\r\n    }\r\n`;\r\ninterface IProps {\r\n    className?: string;\r\n}\r\nconst Spinner: React.FC<IProps> = ({className}) => <Container className={className} />;\r\nexport default Spinner;","import Spinner from \"./Spinner\";\r\nexport default Spinner;","import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_ALL_GROUPING = gql`\r\n    {\r\n        groups @client {\r\n            groupList {\r\n                groupName\r\n                pdf {\r\n                    isChecked\r\n                    fileName\r\n                    filePath\r\n                }\r\n                sendEmail {\r\n                    isChecked\r\n                    email\r\n                    password\r\n                    destinationEmails\r\n                    mailTitle\r\n                    mailContent\r\n                }\r\n                redirect {\r\n                    isChecked\r\n                    port\r\n                    ipAddress\r\n                }\r\n                restful {\r\n                    isChecked\r\n                    isLogging\r\n                    isSendFile\r\n                    data\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport const GET_GROUPING = gql`\r\n    query getGrouping($index: number) {\r\n        GetGrouping(index: $index) @client {\r\n            groupName\r\n            pdf {\r\n                isChecked\r\n                fileName\r\n                filePath\r\n            }\r\n            sendEmail {\r\n                isChecked\r\n                email\r\n                destinationEmails\r\n                password\r\n                mailTitle\r\n                mailContent\r\n            }\r\n            redirect {\r\n                isChecked\r\n                port\r\n                ipAddress\r\n            }\r\n            restful {\r\n                isChecked\r\n                isLogging\r\n                isSendFile\r\n                data\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_GROUPING = gql`\r\n    mutation createGrouping (\r\n        $groupName: String!\r\n        $pdf: String!\r\n        $sendEmail: String!\r\n        $restful: String!\r\n        $redirect: String! \r\n    ) {\r\n        CreateGrouping(\r\n            groupName: $groupName\r\n            pdf:$pdf \r\n            sendEmail: $sendEmail\r\n            restful: $restful\r\n            redirect: $redirect\r\n        ) @client \r\n    }\r\n`;\r\nexport const DELETE_GROUPING = gql`\r\n    mutation delete_grouping(\r\n        $groupName: String!\r\n    ) {\r\n        DeleteGrouping(\r\n            groupName: $groupName\r\n        ) @client {\r\n            groupName\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_GROUPING = gql`\r\n    mutation updateGrouping(\r\n       $updatedGroup: String!\r\n    ) {\r\n        UpdateGrouping (\r\n            updatedGroup: $updatedGroup\r\n        ) @client {\r\n            groupName\r\n        } \r\n    }\r\n`;\r\n\r\nexport const START_FOR_GROUPING = gql`\r\n    mutation startForGrouping(\r\n        $groupId: Int!\r\n        $accepted: Float!\r\n    ) {\r\n        StartForGrouping(\r\n            groupId: $groupId\r\n            accepted: $accepted    \r\n        ) {\r\n            ok\r\n            error\r\n            grouping {\r\n                groupName\r\n                pdf {\r\n                    isChecked\r\n                    filePath\r\n                    fileName\r\n                }\r\n                sendEmail {\r\n                    isChecked\r\n                    email\r\n                    password\r\n                    destinationEmails\r\n                    mailTitle\r\n                    mailContent\r\n                }\r\n                restful {\r\n                    isChecked\r\n                    isLogging\r\n                    isSendFile\r\n                    data\r\n                }\r\n                redirect {\r\n                    isChecked\r\n                    ipAddress\r\n                    port\r\n                }\r\n            }\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_RESULT = gql`\r\n    mutation createResult(\r\n        $ok: Boolean!\r\n        $isPdf: Boolean!\r\n        $idSendEmail: Boolean!\r\n        $isRedirect: Boolean!\r\n        $isRestful: Boolean!\r\n        $message: String!\r\n        $date: String!\r\n    ) {\r\n        CreateResult(\r\n            ok: $ok\r\n            isPdf: $isPdf\r\n            isSendEmail: $isSendEmail\r\n            isRedirect: $isRedirect\r\n            isRestful: $isRestful\r\n            message: $message\r\n            date: $date\r\n        ) @client {\r\n            ok\r\n            message\r\n        }\r\n    }\r\n`;\r\n","import React, { useContext, useState, useReducer, useCallback } from \"react\";\r\nimport { useMutation, useQuery } from \"react-apollo\";\r\nimport { CREATE_GROUPING, GET_ALL_GROUPING, GET_GROUPING, UPDATE_GROUPING, DELETE_GROUPING, START_FOR_GROUPING, CREATE_RESULT } from \"./HomeQueries\";\r\nimport { Grouping } from \"../../Types/types\";\r\nimport { RouteProps, RouteComponentProps } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ApolloCache } from \"apollo-cache\";\r\nimport { GetAllGrouping, GetGroupingResponse, GetGroupingQueryVariables, UpdateGroupingResponse, UpdateGroupingVariables, DeleteGroupingResponse, DeleteGroupingMutationVariables, StartForGroupingMutationResponse, StartForGroupingMutationVariables } from \"../../Types/resolvers\";\r\n\r\nconst HomeContext = React.createContext<any>({});\r\n\r\nconst useHomeContext = () => useContext(HomeContext);\r\n\r\nconst useGetAllGrouping = (cache: ApolloCache<any>) => {\r\n    let result: GetAllGrouping | null;\r\n    try {\r\n        result = cache.readQuery({query: GET_ALL_GROUPING});\r\n    } catch(error) {\r\n        console.log(\"useGetAllGrouping Error: \", error);\r\n        throw new error(error);\r\n    }\r\n    return result;\r\n}\r\nconst useGetGrouping = (index: number) => {\r\n    let { data: { GetGrouping = {} } = {} } = useQuery<GetGroupingResponse, GetGroupingQueryVariables>(GET_GROUPING,{\r\n        variables: {\r\n            index\r\n        },\r\n        onError:data => {\r\n            console.log(\"useGetGrouping Error: \", data);\r\n        }\r\n    });\r\n    return GetGrouping;\r\n}\r\nconst useCreateGrouping = () => {\r\n    const [ mutationCreateGrouping, { data }] = useMutation<any, Grouping>(CREATE_GROUPING, {\r\n        onCompleted: data => {\r\n            console.log(\"DATA: \", data);\r\n        },\r\n        onError: data => {\r\n            console.log(\"useCreateGrouping Error: \", data);\r\n        }\r\n    });\r\n    return {\r\n        data,\r\n        mutationCreateGrouping\r\n    };\r\n}\r\nconst useUpdateGrouping = () => {\r\n    const [ mutationUpdateGrouping ] = useMutation<UpdateGroupingResponse, UpdateGroupingVariables>(UPDATE_GROUPING, {\r\n        onCompleted:data => {\r\n            const { UpdateGrouping: { groupName }} = data;\r\n            toast.info(`Updated Success: '${ groupName }'.`);\r\n        },\r\n        onError:data => {\r\n            console.log(\"useUpdateGrouping Error: \", data);\r\n        }\r\n    });\r\n    return {\r\n        mutationUpdateGrouping\r\n    };\r\n}\r\nconst useDeleteGrouping = () => {\r\n    const [ mutationDeleteGrouping ] = useMutation<DeleteGroupingResponse, DeleteGroupingMutationVariables>(DELETE_GROUPING, {\r\n        onCompleted: data => {\r\n            const { groupName } = data.DeleteGrouping;\r\n            toast.success(`Deleted Success: '${groupName}'.`);\r\n        },\r\n        onError: data => {\r\n            console.log(\"useDeleteGrouping Error: \", data);\r\n        }\r\n    })\r\n    return {\r\n        mutationDeleteGrouping\r\n    };\r\n}\r\nconst InitGroupData: Grouping = {\r\n    groupName: \"\",\r\n    pdf: {\r\n        isChecked: false,\r\n        fileName: \"\",\r\n        filePath: \"\"\r\n    },\r\n    restful: {\r\n        isChecked: false,\r\n        isLogging: false,\r\n        isSendFile: false,\r\n        data: \"\"\r\n    },\r\n    sendEmail: {\r\n        isChecked: false,\r\n        email: \"\",\r\n        password: \"\",\r\n        destinationEmails: \"\",\r\n        mailTitle: \"\",\r\n        mailContent: \"\"\r\n    },\r\n    redirect: {\r\n        isChecked: false,\r\n        ipAddress: \"\",\r\n        port: \"\"\r\n    }\r\n}\r\nconst useCreateResult = (history) => {\r\n    const [ mutationCreateResult ] = useMutation(CREATE_RESULT, {\r\n        onCompleted: data => {\r\n            history.replace(\"/\");\r\n            // history.replace(\"/\", {state: {ok: true, error: null}});\r\n        },\r\n        onError: data => {\r\n            // console.log(\"DATA: \", data);\r\n            // console.log(\"useCreateResult Error: \", data);\r\n            history.replace(\"/\");\r\n            // history.replace(\"/\", {state: {ok: false, error: data}});\r\n        }\r\n    });\r\n    return {\r\n        mutationCreateResult\r\n    };\r\n};\r\n\r\nconst useStartGrouping = (mutationCreateResult: any, selectedGrouping: Grouping) => {\r\n    const handleCompleted = (data: StartForGroupingMutationResponse) => {\r\n        const { StartForGrouping: {error, grouping, ok, message} } = data;\r\n        \r\n        if(ok && grouping) {\r\n            // Completed!\r\n            // console.log(\"useStatrGrouping - handleCompleted: \", grouping , message);\r\n            const { pdf, sendEmail, restful, redirect } = grouping;\r\n            toast.success(`Success: ${error}`);\r\n            mutationCreateResult({\r\n                variables: {\r\n                    ok: true,\r\n                    isPdf: pdf.isChecked,\r\n                    isSendEmail: sendEmail.isChecked,\r\n                    isRedirect: redirect.isChecked,\r\n                    isRestful: restful.isChecked,\r\n                    message,\r\n                    date: new Date().getTime() + \"\"\r\n                }\r\n            });\r\n        } else {\r\n            // Error!\r\n            toast.error(`Fail: ${error}`);\r\n            mutationCreateResult({\r\n                variables: {\r\n                    ok: false,\r\n                    isPdf: selectedGrouping.pdf.isChecked,\r\n                    isSendEmail: selectedGrouping.sendEmail.isChecked,\r\n                    isRedirect: selectedGrouping.redirect.isChecked,\r\n                    isRestful: selectedGrouping.restful.isChecked,\r\n                    message,\r\n                    date: new Date().getTime() + \"\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const [ mutationStartForGrouping, { loading,data: startForGroupingData, client } ] = useMutation<StartForGroupingMutationResponse, StartForGroupingMutationVariables>(START_FOR_GROUPING,\r\n        {\r\n            onCompleted: handleCompleted,\r\n            onError:data => {\r\n                console.log(\"Start For Grouping Error! \", data);\r\n            },\r\n        }\r\n    );\r\n    return {\r\n        mutationStartForGrouping,\r\n        startForGroupingData\r\n    }\r\n}\r\nconst useInput = () => {\r\n    const [value, setValue] = useState<boolean>(false);\r\n    const onInit = () => {\r\n        setValue(false);\r\n    }\r\n    const onChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        const { target: { checked }} = event;\r\n        setValue(checked);\r\n    }\r\n    return {\r\n        value,\r\n        onInit,\r\n        onChange\r\n    };\r\n}\r\n\r\nconst useHomeFetch = () => {\r\n    const formGroupReducer: React.Reducer<Grouping, {name: string, type?: string, checked?: boolean, value?: string, tmpValue?: Grouping}> = useCallback(((state, action) => {\r\n        const formGrouping = state;\r\n        const { groupName, pdf, sendEmail, redirect, restful } = formGrouping;\r\n        var object = {};\r\n        if(action.name === \"checkbox\") {\r\n            switch(action.type) {\r\n                case \"pdf\":\r\n                    object = pdf;\r\n                    break;\r\n                case \"sendEmail\":\r\n                    object = sendEmail\r\n                    break;\r\n                case \"restful\":\r\n                    object = restful;\r\n                    break;\r\n                case \"redirect\":\r\n                    object = redirect;\r\n                    break;\r\n                default: throw new Error(`unexpected action.type: ${action.type}`);\r\n            }\r\n            return {\r\n                groupName,\r\n                pdf,\r\n                restful,\r\n                redirect,\r\n                sendEmail,\r\n                [action.type as any]: {\r\n                    ...object,\r\n                    isChecked: action.checked\r\n                } \r\n            };\r\n        } else if (action.name === \"reset\"){\r\n            return InitGroupData;\r\n        } else if(action.name === \"text\"){\r\n            const { value } = action;\r\n            switch(action.type) {\r\n                case \"groupName\": \r\n                    object = { [action.type]: value };\r\n                    break;\r\n                case \"fileName\":\r\n                case \"filePath\":\r\n                    object = { pdf: { ...pdf, [action.type]: value }};\r\n                    break;\r\n                case \"email\":\r\n                case \"password\":\r\n                case \"mailTitle\":\r\n                case \"mailContent\":\r\n                case \"destinationEmails\":\r\n                    object = { sendEmail: { ...sendEmail, [action.type]: value}};\r\n                    break;\r\n                case \"data\":\r\n                    object = { restful: {...restful, [action.type]: value }};\r\n                    break;\r\n                case \"port\":\r\n                case \"ipAddress\":\r\n                    object = { redirect: { ...redirect, [action.type]: value }};\r\n                    break;\r\n                default: throw new Error(`unexpected action.type: ${action.type}`);\r\n            }\r\n            return {\r\n                groupName,\r\n                pdf,\r\n                sendEmail,\r\n                restful,\r\n                redirect,\r\n                ...object\r\n            };\r\n        } else if(action.name === \"resetTmp\") {\r\n            const { tmpValue } = action;\r\n            if(tmpValue) {\r\n                return tmpValue;\r\n            } else {\r\n                throw Error(\"Not Found resetTmp Data\");\r\n            }\r\n            \r\n        } else { // Restful checkbox\r\n            const { restful } = formGrouping;\r\n            const { type, checked } = action;\r\n            return {\r\n                ...formGrouping,\r\n                restful: {\r\n                    ...restful,\r\n                    [type as any]: checked\r\n                }\r\n            }\r\n        }\r\n    }), []);\r\n\r\n    const [ isDetails, setIsDetails ] = useState<boolean>(false);\r\n    const [ exeLoading, setExeLoading ] = useState<boolean>(false);\r\n    const [ isCreateGroup, setIsCreateGroup ] = useState<boolean>(false);\r\n    const [ isAgree, setIsAgree ] = useState<boolean>(false);\r\n    const [ isUpdate, setIsUpdate ] = useState<boolean>(false);\r\n    const [ formCreateGrouping, dispatchCreateGrouping ] = useReducer(formGroupReducer, InitGroupData);\r\n    const [ selectedGrouping, setSelectedGrouping ] = useState<Grouping>(InitGroupData);\r\n    const [ tmpGrouping, dispatchTmpGrouping ] = useReducer(formGroupReducer, InitGroupData);\r\n    const [ currentStep, setCurrentStep ] = useState<number>(0);\r\n    const [ errorLoading, setErrorLoading] = useState<boolean>(false);\r\n    const [ selectedCardIndex, setSelectedCardIndex ] = useState(-1);\r\n    const isRestfulFunc = useInput();\r\n\r\n    let timer;\r\n\r\n    const onErrorLoading = () => {\r\n        // setErrorLoading(true);\r\n        if(!errorLoading) {\r\n            setErrorLoading(true);\r\n            setTimeout(() => {\r\n                setErrorLoading(false);\r\n            }, 1500);\r\n        } else { // errror Loading이 이미 실행중인경우.\r\n            // console.log(\"TImer: \", timer);\r\n            // clearTimeout(timer);\r\n            // setErrorLoading(false);\r\n            // setErrorLoadi ng(true);\r\n            // timer = setTimeout(() => {\r\n            //     setErrorLoading(false);\r\n            // }, 1500);\r\n        }\r\n    }\r\n    const onExeLoading = () => {\r\n        if(!exeLoading) {\r\n            setExeLoading(true);\r\n            setTimeout(() => {\r\n                setExeLoading(false);\r\n            }, 1500);\r\n        }\r\n    }\r\n    const toggleCreateModal = () => {\r\n        setIsCreateGroup(!isCreateGroup);\r\n    }\r\n    const toggleConfirm = () => {\r\n        setIsAgree(!isAgree);\r\n    }\r\n    const toggleDetails = () => {\r\n        setIsDetails(!isDetails);\r\n    }\r\n    const toggleIsUpdate = (currentUpdated?: boolean) => {\r\n        if(currentUpdated && currentUpdated) {\r\n            setIsUpdate(currentUpdated);\r\n        } else if(currentUpdated === undefined) {\r\n            setIsUpdate(!isUpdate);\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    const onNextStep = () => {\r\n        const { pdf, restful, groupName, redirect, sendEmail } = formCreateGrouping;\r\n        const notChecked: boolean = !pdf.isChecked && !redirect.isChecked && !sendEmail.isChecked && !restful.isChecked;\r\n        if(currentStep === 0 && notChecked) {\r\n            toast.error(\"Please select at least one task\")\r\n            onErrorLoading();\r\n            return;\r\n        } else if(currentStep === 1 && (notChecked || groupName === \"\")) {\r\n            toast.error(\"Please enter a group name\")\r\n            onErrorLoading();\r\n            return;\r\n        } else {\r\n            setCurrentStep(currentStep + 1);\r\n        }\r\n    }\r\n    const onPreviousStep = () => {\r\n        setCurrentStep(currentStep - 1);\r\n        if(isAgree) {\r\n            setIsAgree(false);\r\n        }\r\n    }\r\n    const onCancelCardIndex = () => {\r\n        setSelectedCardIndex(-1);\r\n    }\r\n    const handleTmpGrouping = (grouping: Grouping) => {\r\n        dispatchTmpGrouping({name: \"resetTmp\",tmpValue: grouping});\r\n    }\r\n    const handleClickCardIndex = (index: number) => {\r\n        setSelectedCardIndex(index);\r\n    }\r\n    const handleSelectedGrouping = (grouping: Grouping) => {\r\n        setSelectedGrouping(grouping);\r\n    }\r\n    \r\n    const handleChangeFormGrouping: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        // checked Change일 경우,\r\n        const { target: { checked, name }} = event;\r\n        dispatchCreateGrouping({ name:\"checkbox\", type: name, checked });\r\n    }\r\n    const handleTextChangeFormGrouping: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (event) => {\r\n        const { target: { name, value }} = event;\r\n        dispatchCreateGrouping({ name: \"text\", type: name, value });\r\n    }\r\n    const handleChangeRestfulCheckbox: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        const { target: { name, checked }} = event;\r\n        dispatchCreateGrouping({ name: \"restful\", type: name, checked })\r\n    }\r\n    // TMP_INPUT CHANGE START\r\n    const handleChangeTmpGrouping: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        const { target: { checked, name }} = event;\r\n        dispatchTmpGrouping({ name:\"checkbox\", type: name, checked });\r\n    }\r\n    const handleTextChangeTmpGrouping: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (event) => {\r\n        const { target: { name, value }} = event;\r\n        dispatchTmpGrouping({ name: \"text\", type: name, value });\r\n    }\r\n    const handleChangeTmpRestfulCheckbox: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        const { target: { name, checked }} = event;\r\n        dispatchTmpGrouping({ name: \"restful\", type: name, checked })\r\n    }\r\n\r\n    // TMP_INPUT CHANGE END\r\n    const resetFormCreateGrouping = () => {\r\n        dispatchCreateGrouping({ name:\"reset\" });\r\n        setIsAgree(false);\r\n        setCurrentStep(0);\r\n    }\r\n    \r\n    return {\r\n        isDetails,\r\n        isAgree,\r\n        isUpdate,\r\n        exeLoading,\r\n        errorLoading,\r\n        isCreateGroup,\r\n        toggleCreateModal,\r\n        toggleConfirm,\r\n        toggleIsUpdate,\r\n        formCreateGrouping,\r\n        tmpGrouping,\r\n        handleChangeFormGrouping,\r\n        handleTextChangeFormGrouping,\r\n        handleChangeRestfulCheckbox,\r\n        resetFormCreateGrouping,\r\n        onNextStep,\r\n        onPreviousStep,\r\n        currentStep,\r\n        onErrorLoading,\r\n        handleClickCardIndex,\r\n        selectedCardIndex,\r\n        toggleDetails,\r\n        onCancelCardIndex,\r\n        handleSelectedGrouping,\r\n        selectedGrouping,\r\n        handleTmpGrouping,\r\n        handleChangeTmpGrouping,\r\n        handleTextChangeTmpGrouping,\r\n        handleChangeTmpRestfulCheckbox,\r\n        onExeLoading,\r\n        isRestfulFunc\r\n    };\r\n}\r\ninterface IProps {\r\n    \r\n}\r\nconst ProvideHome: React.FC<IProps> = ({\r\n    children\r\n}) => {\r\n    const value = useHomeFetch();\r\n    return (\r\n        <HomeContext.Provider value={{...value}}>\r\n            {\r\n                children\r\n            }\r\n        </HomeContext.Provider>\r\n    )\r\n}\r\nexport { useHomeContext, useCreateGrouping, ProvideHome, useHomeFetch, useGetAllGrouping, useGetGrouping, useUpdateGrouping, useDeleteGrouping, useStartGrouping, useCreateResult };","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 110px;\r\n    height: 110px;\r\n    border-radius: 50%;\r\n    margin-bottom: 25px;\r\n    margin-right: 15px;\r\n    &.active {\r\n        & input {\r\n            & ~ label {\r\n                cursor: pointer;\r\n                background-color: white;\r\n            }\r\n            &:checked {\r\n                & ~ label {\r\n                    border: 2px solid #2ebfb2;\r\n                    & svg {\r\n                        fill: #2ebfb2;\r\n                    }\r\n                }\r\n                & ~ .details-text {\r\n                    color: #2ebfb2;\r\n                }\r\n            }\r\n        }\r\n        & .details-text {\r\n            color: black;\r\n        }\r\n    }\r\n`;\r\nconst InputCheckbox = styled.input`\r\n    position: absolute;\r\n    z-index: -1;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &:checked {\r\n        & ~ label {\r\n            border: 2px solid #0764ff;\r\n            box-shadow: 0 2px 4px rgba(0,0,0,.24), 0 4px 6px rgba(0,0,0,.42);\r\n            background-color: inherit;\r\n            & svg {\r\n                fill: #0764ff;\r\n            }\r\n        }\r\n        & ~ .details-text {\r\n            color: #00214a;\r\n        }\r\n    }\r\n`;\r\nconst Label = styled.label`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    border: 2px solid #dfdfdf;    \r\n    transition: .3s;\r\n    background-color: #ececec;\r\n    & svg {\r\n        fill: #dfdfdf;\r\n        transition: .3s;\r\n    }\r\n`;\r\nconst Text = styled.span`\r\n    position: absolute;\r\n    bottom: -27px;\r\n    left: 50%;\r\n    white-space: nowrap;\r\n    transform: translateX(-50%);\r\n    color: #dfdfdf;\r\n    transition: .3s;\r\n`;\r\ninterface IProps {\r\n    className: string;\r\n    name: string;\r\n    text: string;\r\n    type: \"pdf\" | \"sendEmail\" | \"restful\" | \"redirect\";\r\n    checked: boolean;\r\n    readOnly: boolean;\r\n    onChange: React.ChangeEvent<HTMLInputElement> | any;\r\n}\r\nconst getPath = (name: \"pdf\" | \"sendEmail\" | \"restful\" | \"redirect\"): string => {\r\n    const svgPdfPath: string = \"M11.363 2c4.155 0 2.637 6 2.637 6s6-1.65 6 2.457v11.543h-16v-20h7.363zm.826-2h-10.189v24h20v-14.386c0-2.391-6.648-9.614-9.811-9.614zm4.811 13h-2.628v3.686h.907v-1.472h1.49v-.732h-1.49v-.698h1.721v-.784zm-4.9 0h-1.599v3.686h1.599c.537 0 .961-.181 1.262-.535.555-.658.587-2.034-.062-2.692-.298-.3-.712-.459-1.2-.459zm-.692.783h.496c.473 0 .802.173.915.644.064.267.077.679-.021.948-.128.351-.381.528-.754.528h-.637v-2.12zm-2.74-.783h-1.668v3.686h.907v-1.277h.761c.619 0 1.064-.277 1.224-.763.095-.291.095-.597 0-.885-.16-.484-.606-.761-1.224-.761zm-.761.732h.546c.235 0 .467.028.576.228.067.123.067.366 0 .489-.109.199-.341.227-.576.227h-.546v-.944z\";\r\n    const svgSendEmailPath: string = \"M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z\";\r\n    const svgRESTFulPath: string = \"M24 21v-6h-18v6h18zm-3-4c.553 0 1 .448 1 1s-.447 1-1 1c-.552 0-1-.448-1-1s.448-1 1-1zm-7.806 0h1.275l-.864 2h-1.274l.863-2zm-2.141 0h1.275l-.863 2h-1.275l.863-2zm-2.19 0h1.275l-.863 2h-1.275l.863-2zm-4.863.941c-2.253-.29-4-2.194-4-4.524 0-2.252 1.626-4.121 3.767-4.506.177-3.294 2.895-5.911 6.233-5.911s6.056 2.617 6.233 5.911c2.005.361 3.541 2.029 3.729 4.089h-1.991c-.279-2.105-2.674-2.333-3.65-2.401.117-1.958-.555-5.599-4.321-5.599-4.438 0-4.359 4.75-4.321 5.599-.945-.037-3.679.341-3.679 2.818 0 1.223.856 2.245 2 2.511v2.013z\";\r\n    const svgRedirectPath: string = \"M20 3c0-1.657-1.344-3-3-3s-3 1.343-3 3c0 .312.061.606.149.889l-4.21 3.157c.473.471.878 1.01 1.201 1.599l4.197-3.148c.477.316 1.048.503 1.663.503 1.656 0 3-1.343 3-3zm-2 0c0 .551-.448 1-1 1s-1-.449-1-1 .448-1 1-1 1 .449 1 1zm3 12.062c1.656 0 3-1.343 3-3s-1.344-3-3-3c-1.281 0-2.367.807-2.797 1.938h-6.283c.047.328.08.66.08 1s-.033.672-.08 1h6.244c.396 1.195 1.509 2.062 2.836 2.062zm-1-3c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.448-1-1zm-20-.062c0 2.761 2.238 5 5 5s5-2.239 5-5-2.238-5-5-5-5 2.239-5 5zm2 0c0-1.654 1.346-3 3-3s3 1.346 3 3-1.346 3-3 3-3-1.346-3-3zm7.939 4.955l4.21 3.157c-.088.282-.149.576-.149.888 0 1.657 1.344 3 3 3s3-1.343 3-3-1.344-3-3-3c-.615 0-1.186.187-1.662.504l-4.197-3.148c-.324.589-.729 1.127-1.202 1.599zm6.061 4.045c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\";\r\n    switch(name) {\r\n        case \"pdf\": return svgPdfPath;\r\n        case \"sendEmail\": return svgSendEmailPath;\r\n        case \"restful\": return svgRESTFulPath;\r\n        case \"redirect\": return svgRedirectPath;\r\n        default: return \"No-Data\";\r\n    }\r\n}\r\nconst CheckboxDetails: React.FC<IProps> = ({\r\n    className,\r\n    name,\r\n    text,\r\n    type,\r\n    checked,\r\n    readOnly,\r\n    onChange,\r\n}) => (\r\n    <Container className={className}>\r\n        <InputCheckbox name={name} id={`checkbox_details_${type}`} type={\"checkbox\"} checked={checked} readOnly={readOnly} onChange={onChange}/>\r\n        <Label htmlFor={`checkbox_details_${type}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"45\" height=\"45\" viewBox=\"0 0 24 24\">\r\n                <path d={getPath(type)}/>\r\n            </svg>\r\n        </Label>\r\n        <Text className={\"details-text\"}> { text } </Text>\r\n    </Container>\r\n);\r\n\r\nexport default CheckboxDetails;","import CheckboxDetails from \"./CheckboxDetails\";\r\nexport default CheckboxDetails;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    &.active {\r\n        & input {\r\n            padding-left: 10px;\r\n            padding-top: 21px;\r\n            padding-bottom: 5px;\r\n            font-size: 11px;\r\n        }\r\n        & label {\r\n            font-size: 9px;\r\n            top: 30%;\r\n            color: #a2a2a2;\r\n        }\r\n    }\r\n`;\r\nconst Label = styled.label`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 10px;\r\n    transform: translateY(-50%);\r\n    font-size: 10px;\r\n    margin-bottom: 3px;\r\n    color: #bdbdbd;\r\n    transition: .3s;\r\n    pointer-events: none;\r\n`;\r\nconst Input = styled.input`\r\n    border: 1px solid #dfdfdf;\r\n    padding: 12px 7px;\r\n    font-size: 13px;\r\n    width: 100%;\r\n    border-radius: 3px;\r\n    transition: background-color .2s;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &:not(:read-only) {\r\n        &:focus {\r\n            border: 1px solid darkgray;\r\n            & ~ label {  \r\n                color: black;\r\n            }\r\n        }\r\n    }\r\n    &:read-only {\r\n        background-color: #f0f0f0;\r\n    }\r\n`\r\ninterface IProps {\r\n    className: string;\r\n    title: string;\r\n    value: string;\r\n    name: string;\r\n    type?: string;\r\n    readOnly: boolean;\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst InputDetails: React.FC<IProps> = ({\r\n    className,\r\n    title,\r\n    name,\r\n    value,\r\n    type=\"text\",\r\n    readOnly,\r\n    onChange\r\n}) => (\r\n    <Container className={value === \"\" ? className : `${className} active`}>\r\n        <Input \r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        readOnly={readOnly}\r\n        autoComplete={\"off\"}\r\n        />\r\n        <Label>\r\n            { title }\r\n        </Label>\r\n    </Container>\r\n);\r\n\r\nexport default InputDetails;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    margin-bottom: 35px;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.24), 0 4px 6px rgba(0,0,0,.32);\r\n    \r\n    &:not(:nth-last-of-type(1)) {\r\n        &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            width: 2px;\r\n            height: 35px;\r\n            top: 100%;\r\n            left: 30px;\r\n            transform: translateX(-50%);\r\n            background-color: #0764ff;\r\n            transition: .2s;\r\n        }\r\n        &.active {\r\n            &::after {\r\n                background-color: #2ebfb2;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    padding: 10px 20px;\r\n    background-color: white;\r\n`;\r\nconst JobIcon = styled.div`\r\n    position: absolute;\r\n    left: 30px;\r\n    top: 0;\r\n    width: 37px;\r\n    height: 37px;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #0764ff;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    transition: .2s;\r\n    & svg {\r\n        fill: white;\r\n    }\r\n    &.active {  \r\n        background-color: #2ebfb2;\r\n    }\r\n`\r\nconst Title = styled.h1`\r\n    padding-left: 10px;\r\n    padding-top: 10px;\r\n    font-size: 15px;\r\n    color: #0764ff;\r\n    margin: 0;\r\n    margin-bottom: 10px;\r\n    transition: .2s;\r\n    &.active {\r\n        color: #2ebfb2;\r\n    }\r\n`;\r\ninterface IProps extends React.PropsWithChildren<any>{\r\n    className: string;\r\n    title: string;\r\n    type: \"pdf\" | \"sendEmail\" | \"restful\" | \"redirect\";\r\n}\r\nconst getPath = (name: \"pdf\" | \"sendEmail\" | \"restful\" | \"redirect\"): string => {\r\n    const svgPdfPath: string = \"M11.363 2c4.155 0 2.637 6 2.637 6s6-1.65 6 2.457v11.543h-16v-20h7.363zm.826-2h-10.189v24h20v-14.386c0-2.391-6.648-9.614-9.811-9.614zm4.811 13h-2.628v3.686h.907v-1.472h1.49v-.732h-1.49v-.698h1.721v-.784zm-4.9 0h-1.599v3.686h1.599c.537 0 .961-.181 1.262-.535.555-.658.587-2.034-.062-2.692-.298-.3-.712-.459-1.2-.459zm-.692.783h.496c.473 0 .802.173.915.644.064.267.077.679-.021.948-.128.351-.381.528-.754.528h-.637v-2.12zm-2.74-.783h-1.668v3.686h.907v-1.277h.761c.619 0 1.064-.277 1.224-.763.095-.291.095-.597 0-.885-.16-.484-.606-.761-1.224-.761zm-.761.732h.546c.235 0 .467.028.576.228.067.123.067.366 0 .489-.109.199-.341.227-.576.227h-.546v-.944z\";\r\n    const svgSendEmailPath: string = \"M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z\";\r\n    const svgRESTFulPath: string = \"M24 21v-6h-18v6h18zm-3-4c.553 0 1 .448 1 1s-.447 1-1 1c-.552 0-1-.448-1-1s.448-1 1-1zm-7.806 0h1.275l-.864 2h-1.274l.863-2zm-2.141 0h1.275l-.863 2h-1.275l.863-2zm-2.19 0h1.275l-.863 2h-1.275l.863-2zm-4.863.941c-2.253-.29-4-2.194-4-4.524 0-2.252 1.626-4.121 3.767-4.506.177-3.294 2.895-5.911 6.233-5.911s6.056 2.617 6.233 5.911c2.005.361 3.541 2.029 3.729 4.089h-1.991c-.279-2.105-2.674-2.333-3.65-2.401.117-1.958-.555-5.599-4.321-5.599-4.438 0-4.359 4.75-4.321 5.599-.945-.037-3.679.341-3.679 2.818 0 1.223.856 2.245 2 2.511v2.013z\";\r\n    const svgRedirectPath: string = \"M20 3c0-1.657-1.344-3-3-3s-3 1.343-3 3c0 .312.061.606.149.889l-4.21 3.157c.473.471.878 1.01 1.201 1.599l4.197-3.148c.477.316 1.048.503 1.663.503 1.656 0 3-1.343 3-3zm-2 0c0 .551-.448 1-1 1s-1-.449-1-1 .448-1 1-1 1 .449 1 1zm3 12.062c1.656 0 3-1.343 3-3s-1.344-3-3-3c-1.281 0-2.367.807-2.797 1.938h-6.283c.047.328.08.66.08 1s-.033.672-.08 1h6.244c.396 1.195 1.509 2.062 2.836 2.062zm-1-3c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.448-1-1zm-20-.062c0 2.761 2.238 5 5 5s5-2.239 5-5-2.238-5-5-5-5 2.239-5 5zm2 0c0-1.654 1.346-3 3-3s3 1.346 3 3-1.346 3-3 3-3-1.346-3-3zm7.939 4.955l4.21 3.157c-.088.282-.149.576-.149.888 0 1.657 1.344 3 3 3s3-1.343 3-3-1.344-3-3-3c-.615 0-1.186.187-1.662.504l-4.197-3.148c-.324.589-.729 1.127-1.202 1.599zm6.061 4.045c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\";\r\n    switch(name) {\r\n        case \"pdf\": return svgPdfPath;\r\n        case \"sendEmail\": return svgSendEmailPath;\r\n        case \"restful\": return svgRESTFulPath;\r\n        case \"redirect\": return svgRedirectPath;\r\n        default: return \"No-Data\";\r\n    }\r\n}\r\nconst JobList: React.FC<IProps> = ({\r\n    children,\r\n    title,\r\n    className,\r\n    type\r\n}) => (\r\n    <Container className={className}>\r\n        <Wrapper>\r\n            <JobIcon className={className}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\r\n                    <path d={getPath(type)}/>\r\n                </svg>\r\n            </JobIcon>\r\n            <Title className={className}>{title}</Title>\r\n            {\r\n                children\r\n            }\r\n            \r\n        </Wrapper>\r\n    </Container>\r\n);\r\n\r\nexport default JobList;","import JobList from \"./JobList\";\r\nexport default JobList;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.button`\r\n    position: relative;\r\n    border: 2px solid #dfdfdf;\r\n    padding: 12px 10px\r\n    width: 110px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-left: 35px;\r\n    font-size: 13px;\r\n    color: white;\r\n    cursor: pointer;\r\n    \r\n    &:focus,\r\n    &:active { \r\n        outline: none;\r\n    }\r\n    transition: .3s;\r\n    & svg {\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        left: 14px;\r\n        fill: white;\r\n        transition: .3s;\r\n    }\r\n    &.no-cancel {\r\n        display: none;\r\n    }\r\n    &.cancel {\r\n        display: flex;\r\n        border: 2px solid #ff9149;\r\n        background-color: #ff9149;\r\n    }\r\n    &.update {\r\n        background-color: #2ebfb2;\r\n        border: 2px solid #2ebfb2;\r\n    }\r\n    &.edit {\r\n        background-color: #34afff;\r\n        border: 2px solid #34afff;\r\n    }\r\n    &:hover {\r\n        background-color: inherit;\r\n        &.cancel {\r\n            color: #ff9149;\r\n            & svg {\r\n                fill: #ff9149;\r\n            }\r\n        }\r\n        &.update {\r\n            color: #2ebfb2;\r\n            & svg {\r\n                fill: #2ebfb2;\r\n            }\r\n        }\r\n        &.edit {\r\n            color: #34afff;\r\n            & svg {\r\n                fill: #34afff\r\n            }\r\n        }\r\n    }\r\n`;\r\ninterface IProps {\r\n    type: \"update\" | \"edit\" | \"cancel\" | \"no-cancel\";\r\n    onClick: any;\r\n}\r\n\r\nconst EditButton: React.FC<IProps> = ({\r\n    type,\r\n    onClick\r\n}) => (\r\n    <Container className={type} onClick={onClick}>\r\n        {\r\n            type === \"update\" ? (\r\n                <React.Fragment>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M22 2v22h-20v-22h3c1.23 0 2.181-1.084 3-2h8c.82.916 1.771 2 3 2h3zm-11 1c0 .552.448 1 1 1 .553 0 1-.448 1-1s-.447-1-1-1c-.552 0-1 .448-1 1zm9 1h-4l-2 2h-3.897l-2.103-2h-4v18h16v-18zm-13 9.729l.855-.791c1 .484 1.635.852 2.76 1.654 2.113-2.399 3.511-3.616 6.106-5.231l.279.64c-2.141 1.869-3.709 3.949-5.967 7.999-1.393-1.64-2.322-2.686-4.033-4.271z\"/></svg>\r\n                    Update\r\n                </React.Fragment>\r\n            ) : type === \"edit\" ? (\r\n                <React.Fragment>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M18.363 8.464l1.433 1.431-12.67 12.669-7.125 1.436 1.439-7.127 12.665-12.668 1.431 1.431-12.255 12.224-.726 3.584 3.584-.723 12.224-12.257zm-.056-8.464l-2.815 2.817 5.691 5.692 2.817-2.821-5.693-5.688zm-12.318 18.718l11.313-11.316-.705-.707-11.313 11.314.705.709z\"/></svg>\r\n                    Edit\r\n                </React.Fragment>\r\n                ) : (\r\n                    <React.Fragment>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-3.31 0-6.291 1.353-8.459 3.522l-2.48-2.48-1.061 7.341 7.437-.966-2.489-2.488c1.808-1.808 4.299-2.929 7.052-2.929 5.514 0 10 4.486 10 10s-4.486 10-10 10c-3.872 0-7.229-2.216-8.89-5.443l-1.717 1.046c2.012 3.803 6.005 6.397 10.607 6.397 6.627 0 12-5.373 12-12s-5.373-12-12-12z\"/></svg>\r\n                        Cancel\r\n                    </React.Fragment>\r\n                )\r\n        }\r\n    </Container>\r\n);\r\n\r\nexport default EditButton;","import EditButton from \"./EditButton\";\r\nexport default EditButton","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    padding-left: 30px;\r\n    padding-bottom: 2px;\r\n`;\r\nconst Icon = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: 10px;\r\n    border: 1.5px solid #dfdfdf;\r\n    border-radius: 6px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 14px;\r\n    height: 14px;\r\n    & svg {\r\n        transition: .25s;\r\n        opacity: 0;\r\n        fill: #dfdfdf;\r\n    }\r\n`;\r\nconst InputChecked = styled.input`\r\n    position: absolute;\r\n    z-index: -1;\r\n    width: 0;\r\n    pointer-events: none;\r\n    opacity: 0;\r\n    &:foucs {\r\n        outline: none;\r\n    }\r\n    &:checked {\r\n        & ~ label {\r\n            color: #868686;\r\n        }\r\n        & ~ div {\r\n            border: 1px solid #868686;\r\n            & svg {\r\n                transform: translateY(0);\r\n                fill: #868686;\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n    &.active {\r\n        & ~ label {\r\n            cursor: pointer;\r\n            color: black;\r\n        }\r\n        & ~ div {\r\n            border: 1px solid black;\r\n            \r\n        }\r\n        &:checked {\r\n            & ~ label {\r\n                color: #16aea0;\r\n            }\r\n            & ~ div {\r\n                border: 1px solid #16aea0;\r\n                & svg {\r\n                    fill: #16aea0;\r\n                    opacity: 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst Label = styled.label`\r\n    position: relative;\r\n    font-size: 13.5px;\r\n    color: #dfdfdf;\r\n`;\r\ninterface IProps {\r\n    className,\r\n    name: string;\r\n    text: string;\r\n    checked: boolean;\r\n    onChange: any;\r\n    readOnly: boolean;\r\n}\r\nconst CheckedDetailsText: React.FC<IProps> = ({\r\n    className,\r\n    name,\r\n    text,\r\n    checked,\r\n    onChange,\r\n    readOnly\r\n}) => (\r\n    <Container className={className + \"_cell\"}>\r\n        <InputChecked className={className} name={name} id={`${name}_input_details`} type={\"checkbox\"} checked={checked} onChange={onChange} readOnly={readOnly}/>\r\n        <Icon>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" viewBox=\"0 0 24 24\"><path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\"/></svg>\r\n        </Icon>\r\n        <Label htmlFor={`${name}_input_details`}>\r\n            { text }\r\n        </Label>\r\n    </Container>\r\n);\r\n\r\nexport default CheckedDetailsText;","import CheckedDetailsText from \"./CheckedDetailsText\";\r\nexport default CheckedDetailsText;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 210px;\r\n    &.textarea {\r\n        padding: 20px 0;\r\n        border: 1px solid #dfdfdf;\r\n        border-radius: 2px;\r\n        font-family: 'Source Code Pro', monospace;\r\n        &.active {\r\n            transition: .2s;\r\n            border: 1px solid #00bcd4;\r\n            &.edit {\r\n                border: 1px solid #dfdfdf;\r\n            }\r\n        }\r\n    }\r\n    &.edit {\r\n        width: 70%;\r\n        transition: .3s;\r\n        & > textarea {\r\n            font-size: 12px;\r\n            color: #232323;\r\n        }\r\n        &.no-update {\r\n            & > textarea {\r\n                color: #c3c3c3;\r\n                background-color: #f0f0f0;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n    width: 100%;\r\n    border: 1px solid #dfdfdf;\r\n    padding: 12.5px 15px;\r\n    padding-left: 40px;\r\n    color: dimgray;\r\n    transition: .3s;\r\n    border-radius: 3px;\r\n    & ~ svg {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 12px;\r\n        transform: translateY(-50%) rotateY(0deg);\r\n        fill: #dfdfdf;\r\n    }\r\n    &::placeholder {\r\n        padding-left: 2px;\r\n        color: #d1d1d1;\r\n        font-size: 12px;\r\n    }\r\n    &.active {\r\n        transition: .2s;\r\n        border: 1px solid #00bcd4;\r\n        & ~ svg {\r\n            fill: #00bcd4;\r\n        }\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border: 1px solid #3f51b5;\r\n        & ~ svg {\r\n            transition: .5s;\r\n            fill: #3f51b5;\r\n            transform: translateY(-50%) rotateY(360deg);\r\n        }\r\n    }\r\n`;\r\nconst FormText = styled.textarea`\r\n    width: 100%;\r\n    border: 1px solid #dfdfdf;\r\n    padding: 10px;\r\n    max-height: 80px;\r\n    color: dimgray;\r\n    transition: .3s;\r\n    border-radius: 3px;\r\n    resize: none;\r\n    height: 150px;\r\n    color: #6c6c6c;\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n      }\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background: #f1f1f1;\r\n        border-radius: 20px;\r\n    }   \r\n    \r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #becede;\r\n        border-radius: 20px;\r\n    }\r\n    \r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:active {\r\n        background: ${props => props.theme.blueColor};\r\n        cursor: pointer;\r\n    }\r\n\r\n    &::placeholder {\r\n        padding-left: 2px;\r\n        color: #d1d1d1;\r\n        font-size: 12px;\r\n    }\r\n    &.text-func {\r\n        padding-left: 20px;\r\n        outline: none;\r\n        border: none;\r\n    }\r\n    &:not(.text-func) {\r\n        &.active {\r\n            transition: .2s;\r\n            border: 1px solid #00bcd4;\r\n            &.edit {\r\n                border: 1px solid #dfdfdf;\r\n            }\r\n        }\r\n        &.no-update {\r\n            &:focus {\r\n                border: 1px solid #dfdfdf;\r\n                outline: none;\r\n            }\r\n        }\r\n        &:not(.no-update):focus {\r\n            outline: none;\r\n            border: 1px solid #3f51b5;\r\n            &.edit {\r\n                border: 1px solid darkgray;\r\n            }\r\n        }\r\n    }\r\n    \r\n`;\r\nconst FuctionStart = styled.div`\r\n    position: absolute;\r\n    top: 3px;\r\n    left: 3px;\r\n    color: #a4a4a4;\r\n    font-size: 13px;\r\n    background-color: white;\r\n    z-index: 2;\r\n`;\r\nconst FunctionEnd = styled.div`\r\n    position: absolute;\r\n    bottom: 3px; \r\n    left: 3px;\r\n    color: #a4a4a4;\r\n    font-size: 13px;\r\n    background-color: white;\r\n    z-index: 2;\r\n`;\r\ninterface IProps {\r\n    svgPath: string;\r\n    value: string;\r\n    name: string;\r\n    placeholder: string;\r\n    type?: \"text\" | \"password\" | \"textarea\";\r\n    className?: string;\r\n    onChange: any;\r\n    isFunction?: boolean;\r\n}\r\nconst InputIcon: React.FC<IProps> = ({\r\n    svgPath,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type=\"text\",\r\n    className,\r\n    onChange,\r\n    isFunction\r\n}) => {\r\n    const funcStart = `(doc) => { `;\r\n    const funcEnd = `};`\r\n    return (\r\n        <Container className={`${className} ${isFunction ? \"textarea\" : \"\"}`}>\r\n            {\r\n                type === \"textarea\" ? (\r\n                    <>\r\n                        { isFunction && <FuctionStart>{ funcStart }</FuctionStart> } \r\n                        <FormText placeholder={isFunction ? \"CODE...\" : \"DATA...\"} onChange={onChange} name={name} value={value} className={`${className!.indexOf(\"no-update\") != -1 ? \"no-update\" : className } ${isFunction ? \"text-func\" : \"\"}`} autoComplete={\"off\"}/>\r\n                        { isFunction && <FunctionEnd>{ funcEnd }</FunctionEnd>}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <FormInput type={type} placeholder={placeholder} onChange={onChange} name={name} value={value} className={className} autoComplete={\"off\"}/>        \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\r\n                            <path d={svgPath}/>\r\n                        </svg>\r\n                    </>\r\n                )\r\n            }\r\n            \r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default InputIcon;","import InputIcon from \"./InputIcon\";\r\nexport default InputIcon;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport { useHomeContext } from \"../../Routes/Home/HomeProvider\";\r\nimport CheckboxDetails from \"../CheckboxDetails\";\r\nimport InputDetails from \"../InputDetails/InputDetails\";\r\nimport JobList from \"../JobList\";\r\nimport { Grouping } from \"../../Types/types\";\r\nimport EditButton from \"../EditButton\";\r\nimport CheckedDetailsText from \"../CheckedDetailsText\";\r\nimport { toast } from \"react-toastify\";\r\nimport InputIcon from \"../InputIcon\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    padding: 30px;\r\n    background-color: rgba(0,0,0,64);\r\n    transition: .3s;\r\n    transition-delay: 0;\r\n    &.active {\r\n        transition-delay: .3s;\r\n        background-color: rgba(240,240,250,14);\r\n    }\r\n`;\r\nconst Header = styled.div`\r\n    font-size: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-left: 80px;\r\n`;\r\nconst HeaderWrapper = styled.div`\r\n`;\r\nconst HeaderTitle = styled.h1`\r\n    display: flex;\r\n    white-space: nowrap;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    font-size: 20px;\r\n    color: #1754ff;\r\n    flex-flow: column;\r\n    transition: .2s;\r\n    & span {\r\n        margin-top: 10px;\r\n    }\r\n    &.active {\r\n        color: #009688;\r\n        & span {\r\n        }\r\n    }\r\n`;\r\nconst SubTitle = styled.span`\r\n    font-size: 13px;\r\n    color: darkgray;\r\n    margin: 0;\r\n    font-weight: 450;\r\n`;\r\nconst Box = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-flow: row;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n`;\r\nconst Wrapper = styled.div`\r\n    // background-color: #f4f7fd;\r\n    padding: 30px 30px\r\n    margin-bottom: 20px;    \r\n    width: 49%;\r\n    &.active {\r\n        display: flex;\r\n        flex-flow: column wrap;\r\n        justify-content: center;\r\n    }\r\n    &:first-child {\r\n        \r\n    }\r\n    &:last-child {\r\n        margin-top: -110px;\r\n    }\r\n`;\r\n\r\nconst CheckboxCell = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-flow: row wrap;\r\n    & > div {\r\n        width: 150px;\r\n        height: 150px;\r\n        margin-right: 5px;\r\n        margin-bottom: 60px;\r\n    }\r\n`;\r\n\r\nconst InputDetailsExtended = styled(InputDetails)`\r\n    // margin-bottom: 10px;\r\n`;\r\nconst JobListExtended = styled(JobList)`\r\n    width: flex;\r\n    \r\n`;\r\nconst JobListWrapper = styled.div`\r\n    &.active {\r\n        display: flex;\r\n        width: 100%;\r\n        justify-content: space-between;\r\n        & > div {\r\n            width: 49%;    \r\n        }\r\n    }\r\n    &.restful {\r\n        position: absolute;\r\n        width: auto;\r\n        top: 50%;\r\n        right: 20px;\r\n        transform: translateY(-50%);\r\n        display: flex;\r\n        flex-flow: column;\r\n        & > div {\r\n            width: auto;    \r\n        }\r\n    }\r\n    &:not(:nth-last-of-type(1)) {\r\n        margin-bottom: 5px;\r\n    }\r\n`;\r\nconst ExitButton = styled.div`    \r\n    position: absolute;\r\n    top: 10px;\r\n    left: 20px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & svg {\r\n        fill: #d7d7d7;\r\n        transition: .3s;\r\n        transform: rotateZ(-180deg);\r\n    }\r\n    &:hover {\r\n        & svg {\r\n            fill: ${props => props.theme.blueColor};\r\n            transform: rotateZ(-90deg);\r\n        }\r\n    }      \r\n`;\r\nconst ButtonBox = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n    margin-top: 10px;\r\n    &:not(:nth-of-type(1)) {\r\n        & > button {\r\n            margin-left: 15px;\r\n        }\r\n    }\r\n`;\r\ninterface IProps {\r\n    className: string;\r\n    handleUpdateGroup: (updatedGroup: Grouping) => void;\r\n}\r\nconst DetailsPage: React.FC<IProps> = ({\r\n    className,\r\n    handleUpdateGroup\r\n}) => {\r\n    const { toggleDetails, tmpGrouping  }: { toggleDetails: any, tmpGrouping: Grouping} = useHomeContext();\r\n    const { \r\n        isUpdate, \r\n        toggleIsUpdate, \r\n        selectedGrouping, \r\n        handleTmpGrouping, \r\n        handleSelectedGrouping,\r\n        handleChangeTmpGrouping,\r\n        handleTextChangeTmpGrouping,\r\n        handleChangeTmpRestfulCheckbox,\r\n        isRestfulFunc,\r\n        errorLoading\r\n     } = useHomeContext();\r\n    const { groupName, pdf,  redirect,  restful, sendEmail } = tmpGrouping;\r\n    const handleEditButton = () => {   \r\n        // handleTmpGrouping(selectedGrouping);\r\n        toggleIsUpdate();\r\n    }\r\n    const handleUpdateButton = () => {\r\n        // update쿼리 실행시키기.\r\n        handleUpdateGroup(tmpGrouping);\r\n    }\r\n\r\n    return (    \r\n        <Container className={`${className} ${errorLoading ? \"error\" : \"\"}`}>\r\n            <ExitButton onClick={e => { \r\n                toggleDetails(); \r\n                setTimeout(() => {\r\n                    // css 스타일로 인하여\r\n                    if(isUpdate) {\r\n                        handleTmpGrouping(selectedGrouping);\r\n                    }\r\n                    toggleIsUpdate(false);\r\n                }, 500);  \r\n            }}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\"><path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"/></svg>\r\n            </ExitButton>\r\n            <Header>\r\n                <HeaderWrapper>\r\n                    <HeaderTitle className={isUpdate ? \"active\" : \"\"}>\r\n                        {\r\n                            isUpdate ? (\r\n                                <React.Fragment>\r\n                                    Group Edit <SubTitle> > { groupName } </SubTitle>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    Group Details <SubTitle> > { groupName } </SubTitle>\r\n                                </React.Fragment>\r\n                            )\r\n                        }\r\n                    </HeaderTitle>\r\n                </HeaderWrapper>\r\n            </Header>\r\n            <Box>\r\n                <Wrapper>\r\n                    {/* <Title>Grouping Options</Title> */}\r\n                    <CheckboxCell>\r\n                        <CheckboxDetails className={isUpdate ? \"active\" : \"\"} name={\"pdf\"} text={\"PDF\"} type={\"pdf\"} readOnly={!isUpdate} checked={pdf.isChecked} onChange={isUpdate ? handleChangeTmpGrouping : () => {}}/>\r\n                        <CheckboxDetails className={isUpdate ? \"active\" : \"\"} name={\"sendEmail\"} text={\"Send Email\"} type={\"sendEmail\"} readOnly={!isUpdate} checked={sendEmail.isChecked} onChange={isUpdate ? handleChangeTmpGrouping : () => {}}/>\r\n                        <CheckboxDetails className={isUpdate ? \"active\" : \"\"} name={\"restful\"} text={\"RESTFul\"} type={\"restful\"} readOnly={!isUpdate} checked={restful.isChecked} onChange={isUpdate ? handleChangeTmpGrouping : () => {}}/>\r\n                        <CheckboxDetails className={isUpdate ? \"active\" : \"\"} name={\"redirect\"} text={\"Redirect\"} type={\"redirect\"} readOnly={!isUpdate} checked={redirect.isChecked} onChange={isUpdate ? handleChangeTmpGrouping : () => {}}/>\r\n                    </CheckboxCell>\r\n                    <ButtonBox>\r\n                        <EditButton type={isUpdate ? \"update\" : \"edit\"} onClick={isUpdate ? handleUpdateButton : handleEditButton }/>\r\n                        <EditButton type={isUpdate ? \"cancel\" : \"no-cancel\"} onClick={isUpdate ? () => { handleTmpGrouping(selectedGrouping); toggleIsUpdate(); } : () => {} }/>\r\n                    </ButtonBox>\r\n                    \r\n                </Wrapper>\r\n                <Wrapper className={\"active\"}>\r\n                    {/* <Title>Grouping Details</Title> */}\r\n                    {\r\n                        pdf.isChecked && (\r\n                            <JobListExtended type={\"pdf\"} className={isUpdate ? \"active\" : \"details-job\"} title={\"PDF\"}>\r\n                                <JobListWrapper className={\"active\"}>\r\n                                    <InputDetailsExtended className={\"input-details\"} title={\"File Name\"} value={pdf.fileName} name={\"fileName\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                                <InputDetailsExtended className={\"input-details\"} title={\"File Path\"} value={pdf.filePath} name={\"filePath\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                                </JobListWrapper>\r\n                            </JobListExtended>\r\n                        )\r\n                    }\r\n                    {\r\n                        sendEmail.isChecked && (\r\n                            <JobListExtended type={\"sendEmail\"} className={isUpdate ? \"active\" : \"details-job\"} title={\"Send Email\"}>\r\n                                <JobListWrapper className={\"active\"}>\r\n                                    <InputDetailsExtended className={\"input-details\"} title={\"Email\"} value={sendEmail.email} name={\"email\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                                    <InputDetailsExtended className={\"input-details\"} title={\"Password\"} type={\"password\"} value={sendEmail.password} name={\"password\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                                </JobListWrapper>\r\n                                <JobListWrapper>\r\n                                    <InputDetailsExtended className={\"input-details\"} title={\"Recipents\"} value={sendEmail.destinationEmails} name={\"destinationEmails\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                                </JobListWrapper>\r\n                                <JobListWrapper className={\"active\"}>\r\n                                    <InputDetailsExtended className={\"input-details\"} title={\"Mail Title\"} value={sendEmail.mailTitle} name={\"mailTitle\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                                    <InputDetailsExtended className={\"input-details\"} title={\"Mail Content\"} value={sendEmail.mailContent} name={\"mailContent\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                                </JobListWrapper>\r\n                            </JobListExtended>\r\n                        )\r\n                    }\r\n                    {\r\n                        redirect.isChecked && (\r\n                            <JobListExtended type={\"redirect\"} className={isUpdate ? \"active\" : \"details-job\"} title={\"Redirect\"}>\r\n                                <JobListWrapper className={\"active\"}>\r\n                                    <InputDetailsExtended className={\"input-details\"} title={\"IP Address\"} value={redirect.ipAddress} name={\"ipAddress\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                                    <InputDetailsExtended className={\"input-details\"} title={\"Port\"} value={redirect.port} name={\"port\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                                </JobListWrapper>\r\n                            </JobListExtended>\r\n                        )\r\n                    }\r\n                    {\r\n                        restful.isChecked && (\r\n                            <JobListExtended type={\"restful\"} className={`${isUpdate ? \"active\" : \"details-job\"} restful`} title={\"RESTFul\"}>\r\n                                <JobListWrapper className={\"active restful\"}>\r\n                                    <CheckedDetailsText className={isUpdate ? \"active\" : \"\"} name={\"isLogging\"} text={\"로깅\"} checked={restful.isLogging} onChange={isUpdate ? handleChangeTmpRestfulCheckbox : () => {}} readOnly={!isUpdate}/>\r\n                                    <CheckedDetailsText className={isUpdate ? \"active\" : \"\"} name={\"isSendFile\"} text={\"파일전송\"} checked={restful.isSendFile} onChange={isUpdate ? handleChangeTmpRestfulCheckbox : () => {}} readOnly={!isUpdate}/>\r\n                                </JobListWrapper>\r\n                                <InputIcon\r\n                                    className={`${restful.data !== \"\" ? \"active\" : \"input\"} edit ${isUpdate ? \"\" : \"no-update\"}`}\r\n                                    placeholder={\"Function Data\"}\r\n                                    value={restful.data}\r\n                                    type={\"textarea\"}\r\n                                    name={\"data\"}\r\n                                    svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                    onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}}\r\n                                    isFunction={isRestfulFunc.value}\r\n                                />\r\n                            </JobListExtended>\r\n                        )\r\n                    }\r\n                    {/* <JobListExtended type={\"pdf\"} className={isUpdate ? \"active\" : \"details-job\"} title={\"PDF\"}>\r\n                        <JobListWrapper className={\"active\"}>\r\n                            <InputDetailsExtended className={\"input-details\"} title={\"File Name\"} value={pdf.fileName} name={\"fileName\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                            <InputDetailsExtended className={\"input-details\"} title={\"File Path\"} value={pdf.filePath} name={\"filePath\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                        </JobListWrapper>\r\n                    </JobListExtended>\r\n                    <JobListExtended type={\"sendEmail\"} className={isUpdate ? \"active\" : \"details-job\"} title={\"Send Email\"}>\r\n                        <JobListWrapper className={\"active\"}>\r\n                            <InputDetailsExtended className={\"input-details\"} title={\"Email\"} value={sendEmail.email} name={\"email\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                            <InputDetailsExtended className={\"input-details\"} title={\"Password\"} type={\"password\"} value={sendEmail.password} name={\"password\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                        </JobListWrapper>\r\n                        <JobListWrapper>\r\n                            <InputDetailsExtended className={\"input-details\"} title={\"Recipents\"} value={sendEmail.destinationEmails} name={\"destinationEmails\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                        </JobListWrapper>\r\n                        <JobListWrapper className={\"active\"}>\r\n                            <InputDetailsExtended className={\"input-details\"} title={\"Mail Title\"} value={sendEmail.mailTitle} name={\"mailTitle\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                            <InputDetailsExtended className={\"input-details\"} title={\"Mail Content\"} value={sendEmail.mailContent} name={\"mailContent\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                        </JobListWrapper>\r\n                    </JobListExtended>\r\n                    <JobListExtended type={\"redirect\"} className={isUpdate ? \"active\" : \"details-job\"} title={\"Redirect\"}>\r\n                        <JobListWrapper className={\"active\"}>\r\n                            <InputDetailsExtended className={\"input-details\"} title={\"IP Address\"} value={redirect.ipAddress} name={\"ipAddress\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                            <InputDetailsExtended className={\"input-details\"} title={\"Port\"} value={redirect.port} name={\"port\"} onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}} readOnly={!isUpdate}/>\r\n                        </JobListWrapper>\r\n                    </JobListExtended>\r\n                    <JobListExtended type={\"restful\"} className={`${isUpdate ? \"active\" : \"details-job\"} restful`} title={\"RESTFul\"}>\r\n                        <JobListWrapper className={\"active restful\"}>\r\n                            <CheckedDetailsText className={isUpdate ? \"active\" : \"\"} name={\"isLogging\"} text={\"로깅\"} checked={restful.isLogging} onChange={isUpdate ? handleChangeTmpRestfulCheckbox : () => {}} readOnly={!isUpdate}/>\r\n                            <CheckedDetailsText className={isUpdate ? \"active\" : \"\"} name={\"isSendFile\"} text={\"파일전송\"} checked={restful.isSendFile} onChange={isUpdate ? handleChangeTmpRestfulCheckbox : () => {}} readOnly={!isUpdate}/>\r\n                        </JobListWrapper>\r\n                        <InputIcon\r\n                            className={`${restful.data !== \"\" ? \"active\" : \"input\"} edit ${isUpdate ? \"\" : \"no-update\"}`}\r\n                            placeholder={\"Function Data\"}\r\n                            value={restful.data}\r\n                            type={\"textarea\"}\r\n                            name={\"data\"}\r\n                            svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                            onChange={isUpdate ? handleTextChangeTmpGrouping : () => {}}\r\n                            isFunction={isRestfulFunc.value}\r\n                        />\r\n                    </JobListExtended> */}\r\n                </Wrapper>\r\n            </Box>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default DetailsPage;","import DetailsPage from \"./DetailsPage\";\r\nexport default DetailsPage;","import React from \"react\";\r\nimport styled, { keyframes } from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 180px;\r\n    height: 180px;\r\n    position: relative;\r\n    transition: .3s;\r\n    border-radius: 12px;\r\n    // background-color: #11ccea;\r\n    // background-color: #222e2d;\r\n    // background: linear-gradient(0deg, rgba(40,73,134,1) 0%, rgba(40,51,84,1) 98%);\r\n    // background: linear-gradient(90deg, rgba(127,147,182,1) 0%, rgba(40,157,164,1) 53%, rgba(127,147,182,1) 100%);\r\n    // background: linear-gradient(0deg,rgba(140,253,234,.3) 0%,rgba(110,151,254,.3) 98%);\r\n    background:rgba(30,30,250,.22);\r\n    &:hover {\r\n        box-shadow: 0 2px 4px rgba(0,0,0,.24), 0 6px 12px rgba(0,0,0,.42);\r\n    }\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n    position: absolute;\r\n    cursor: none;\r\n    z-index: -999;\r\n    pointer-events: none;\r\n    &.active {\r\n    // &:checked {\r\n        & ~ label {\r\n            border: 2px solid #49d989;\r\n        }\r\n        & ~ .checked-icon {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\nconst CheckedIcon = styled.div`\r\n    z-index: 2;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 0;\r\n    transition: opacity .3s;\r\n    border-bottom: 70px solid transparent;\r\n    border-left: 70px solid #49d989;\r\n    pointer-events: none;\r\n    & svg {\r\n        position: absolute;\r\n        top: 8px;\r\n        left: -60px;\r\n        fill: white;\r\n    }\r\n`;\r\nconst NameBox = styled.div`\r\n    position: absolute;\r\n    top: 75%;\r\n    left: 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    // background-color: #030608;\r\n    // background: linear-gradient(0deg, rgba(34,46,45,1) 0%, rgba(77,78,113,1) 49%, rgba(34,46,45,1) 98%);\r\n    background: linear-gradient(0deg, rgba(4,67,116,1) 0%, rgba(65,114,241,1) 49%, rgba(4,67,116,1) 100%);\r\n`;\r\nconst GroupName = styled.h1`\r\n    margin: 0 auto;\r\n    max-width: 130px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    font-weight: 450;\r\n    font-size: 17px;\r\n    color: white;\r\n    padding-bottom: 3px;\r\n    white-space: nowrap;\r\n`;\r\nconst Label = styled.label`\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    border-radius: 12px;\r\n    border: 2px solid rgba(0,0,0,.22);\r\n    box-shadow: 0 1px 2px rgba(0,0,0,.24), 0 2px 3px rgba(0,0,0,.24);\r\n`;\r\nconst GroupIcon = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & svg {\r\n        position: absolute;\r\n        top: 60%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        margin-top: -30px;\r\n        fill: white;\r\n        opacity: 0;\r\n        &:nth-of-type(1) {\r\n            animation: ${keyframes => EffectIcon} 6s ease-in-out alternate infinite;\r\n        }\r\n        &:nth-of-type(2) {\r\n            animation: ${keyframes => EffectIcon2} 6s ease-in-out alternate infinite;\r\n        }\r\n        &:nth-of-type(3) {\r\n            animation: ${keyframes => EffectIcon3} 6s ease-in-out alternate infinite;\r\n        }\r\n    }\r\n`;\r\nconst EffectIcon = keyframes`\r\n    0% { opacity: 1; fill: #ffe8b9;}\r\n    50% {\r\n    }\r\n    // 50% { opacity: 0;}\r\n`;\r\nconst EffectIcon2 = keyframes`\r\n    50% {opacity: 1; }\r\n    // 100% {opacity: 0;}\r\n`;\r\nconst EffectIcon3 = keyframes`\r\n    0% {opacity: 0;}\r\n    50% {opacity: 0; }\r\n    100% {opacity: 1; fill: rgba(210,220,250.24);}\r\n`;\r\ninterface IProps {\r\n    className: string;\r\n    groupName: string;\r\n    id: number;\r\n    handleClickCardIndex: (e) => void;\r\n}\r\nconst GroupCard: React.FC<IProps> = ({\r\n    className,\r\n    groupName,\r\n    id,\r\n    handleClickCardIndex\r\n}) => (\r\n    <Container className={className}>\r\n        <Checkbox className={className} id={`group_key_${id}`} type={\"radio\"} name={\"grouping_checkbox\"} onClick={e => handleClickCardIndex(id)}  defaultChecked={false}/>\r\n        <CheckedIcon className={\"checked-icon\"}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-1 17l-5-5.299 1.399-1.43 3.574 3.736 6.572-7.007 1.455 1.403-8 8.597z\"/></svg>\r\n        </CheckedIcon>\r\n        <NameBox>\r\n            <GroupName>{ groupName }</GroupName>\r\n        </NameBox>\r\n        <GroupIcon>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M12 0l-11 6v12.131l11 5.869 11-5.869v-12.066l-11-6.065zm-9 8.23l8 4.363v8.607l-8-4.268v-8.702zm10 12.97v-8.6l8-4.269v8.6l-8 4.269z\"/></svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M12 0l-11 6v12.131l11 5.869 11-5.869v-12.066l-11-6.065zm7.91 6.646l-7.905 4.218-7.872-4.294 7.862-4.289 7.915 4.365zm-6.91 14.554v-8.6l8-4.269v8.6l-8 4.269z\"/></svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M12 0l-11 6v12.131l11 5.869 11-5.869v-12.066l-11-6.065zm7.91 6.646l-7.905 4.218-7.872-4.294 7.862-4.289 7.915 4.365zm-16.91 1.584l8 4.363v8.607l-8-4.268v-8.702z\"/></svg>\r\n            {/* <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"/></svg> */}\r\n        </GroupIcon>\r\n        <Label htmlFor={`group_key_${id}`}/>\r\n    </Container>\r\n);\r\n\r\nexport default GroupCard;","import GroupCard from \"./GroupCard\";\r\nexport default GroupCard;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport { Grouping } from \"../../Types/types\";\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    top: -410px;\r\n    right: -410px;\r\n    width: 400px;\r\n    height: 400px;\r\n    border-radius: 50%;\r\n    background: black;\r\n    opacity: 0;\r\n    &::before {\r\n        opacity: 0;\r\n        content: \"\";\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        position: absolute;\r\n        width: 405px;\r\n        height: 405px;\r\n        border-radius: 50%;\r\n        border: 2px solid cornflowerblue;\r\n        transition: .3s;\r\n    }\r\n    &.active {\r\n        transition: ease-in opacity .3s, background .4s, top .4s, right .4s;\r\n        &::before {\r\n            opacity: 1;\r\n        }\r\n        top: -200px;\r\n        right: -200px;\r\n        opacity: 1;\r\n        // background: linear-gradient(0deg, rgba(34,40,195,1) 0%, rgba(121,184,204,1) 0%, rgba(232,141,181,1) 0%, rgba(206,25,99,1) 56%);\r\n        background: linear-gradient(90deg, rgba(92,124,218,1) 0%, rgba(91,17,203,1) 100%)\r\n    }\r\n`;\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\nconst Item = styled.span`\r\n    position: absolute;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: white;\r\n    transition: .2s;\r\n    cursor: pointer;\r\n    & svg {\r\n        transition: .2s;\r\n        fill: #5b4fd4;\r\n    }\r\n    &:hover {\r\n        background-color: #ff9a0e;\r\n        & svg {\r\n            transform: rotateY(-360deg);\r\n            fill: white;\r\n        }\r\n    }\r\n`;\r\nconst StartItem = styled(Item)`\r\n    top: 215px;\r\n    left: 30px;\r\n`;\r\nconst InfoItem = styled(Item)`\r\n    top: 275px;\r\n    left: 72px;\r\n`;\r\nconst DeleteItem = styled(Item)`\r\n    top: 320px;\r\n    left: 132px;\r\n`;\r\nconst CancelItem = styled(Item)`\r\n    top: 220px;\r\n    left: 138px;\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: transparent;\r\n    border: 1px solid white;\r\n    transform: rotateY(-360deg);\r\n    & svg {\r\n        fill: white;\r\n    } \r\n    &:hover {\r\n        background-color: white;\r\n        & svg {\r\n            fill: #5b4fd4;\r\n        }\r\n    }\r\n`;\r\ninterface IProps {\r\n    className: string;\r\n    toggleDetails: () => void;\r\n    onCancelCardIndex: () => void;\r\n    handleDeleteGroup: (deletedGrouping: Grouping) => void;\r\n    selectedGrouping: Grouping;\r\n    handleStartForGrouping: () => any;\r\n}\r\nconst Menubar: React.FC<IProps> = ({\r\n    className,\r\n    toggleDetails,\r\n    onCancelCardIndex,\r\n    handleDeleteGroup,\r\n    selectedGrouping,\r\n    handleStartForGrouping\r\n}) => (\r\n    <Container className={className}>\r\n        <Wrapper>\r\n            <StartItem onClick={ e => { handleStartForGrouping(); }}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11.327 14.859c-.217-.648.031-1.333.595-1.734.284-.202.609-.306.932-.306.317 0 .633.101.902.308-.21-.704-.851-1.127-1.516-1.127-.312 0-.63.093-.911.294-.882.629-.879 1.938-.002 2.565zm2.639 6.434c.7.235 2.868.835 5.38 2.707l4.654-3.319c-1.208-1.692-.875-2.876-2.075-4.558-.464-.652-.885-1.084-1.565-1.084-.179 0-.313.027-.573.075l.422.592c.106.148.071.355-.077.461-.149.106-.355.071-.461-.077l-.377-.528c-.109-.153-.285-.241-.469-.241-.068 0-.06-.007-.978.205l.513.718c.105.148.071.354-.077.461-.148.106-.354.072-.461-.078l-.444-.622c-.109-.153-.285-.241-.467-.241-.083 0-.067-.005-1.01.234l.543.759c.105.148.07.354-.078.461-.147.106-.354.071-.46-.077l-2.198-3.077c-.289-.406-.854-.5-1.26-.211s-.501.854-.211 1.26l3.246 4.55c-.87-.322-2.217-.463-2.467.44-.149.538.282.966.95 1.19zm-4.966-15.293h4v4.089c-.246-.052-.497-.089-.758-.089h-.002c-.745 0-1.462.23-2.073.666-.521.373-.91.881-1.167 1.451v-6.117zm2.562 15.972l-.562.028c-6.075 0-11-4.925-11-11s4.925-11 11-11 11 4.925 11 11c0 .804-.092 1.586-.256 2.342-.395-.179-.849-.303-1.385-.303-.234 0-.428.024-.615.054.161-.673.256-1.371.256-2.093 0-4.962-4.037-9-9-9s-9 4.038-9 9 4.037 9 9 9h.011c-.071.652.093 1.36.551 1.972z\"/></svg>\r\n            </StartItem>\r\n            <InfoItem onClick={ e => { toggleDetails(); }}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-.001 5.75c.69 0 1.251.56 1.251 1.25s-.561 1.25-1.251 1.25-1.249-.56-1.249-1.25.559-1.25 1.249-1.25zm2.001 12.25h-4v-1c.484-.179 1-.201 1-.735v-4.467c0-.534-.516-.618-1-.797v-1h3v6.265c0 .535.517.558 1 .735v.999z\"/></svg>\r\n            </InfoItem>\r\n            <DeleteItem onClick={ e => { handleDeleteGroup(selectedGrouping); onCancelCardIndex();}}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M9 19c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5-17v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712zm-3 4v16h-14v-16h-2v18h18v-18h-2z\"/></svg>\r\n            </DeleteItem>\r\n            <CancelItem onClick={ e => { onCancelCardIndex(); }}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\r\n            </CancelItem>\r\n        </Wrapper>\r\n    </Container>\r\n);\r\n\r\nexport default Menubar;","import Menubar from \"./Menubar\";\r\nexport default Menubar","import React from \"react\";\r\nimport styled, { keyframes } from \"../../Styles/typed-components\";\r\nimport GroupCard from \"../GroupCard\";\r\nimport { useHomeContext } from \"../../Routes/Home/HomeProvider\";\r\nimport { Grouping } from \"../../Types/types\";\r\nimport { GetAllGrouping } from \"../../Types/resolvers\";\r\nimport Menubar from \"../Menubar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;  \r\n`;\r\nconst CardList = styled.div`\r\n    display: flex;\r\n    transition: .3s;\r\n    &.active {\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\nconst TopTitle = styled.h2`\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    padding-top: 68px;\r\n    text-shadow: 0 2px 4px rgba(0,0,0,.42);\r\n`;\r\nconst MiddleTitle = styled.h5`\r\n    text-align: center;\r\n    font-size: 20px;\r\n    color: #b8a4c9;\r\n    color: #a6d3fa;\r\n    margin: 0;\r\n    margin: 15px 0;\r\n    text-shadow: 0 2px 4px rgba(0,0,0,.32);\r\n`;\r\nconst BottomTitle = styled.h3`\r\n    position: relative;\r\n    width: fit-content;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    font-size: 14px;\r\n    color: white;\r\n    padding: 6px 0;\r\n    overflow: hidden;\r\n    text-shadow: 0 2px 4px rgba(0,0,0,.32);\r\n    &::after,\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        z-index: 1;\r\n        width: 30px;\r\n        top: -1px;\r\n        left: 0;\r\n        transform: translateX(-100%);\r\n        height: 3px;\r\n        background-color: rgba(75,250,155,.4);\r\n        box-shadow: 0 2px 4px rgba(0,250,250,.42);\r\n        animation: ${keyframes => EffectBefore} 5s ease-in-out 2s infinite alternate;\r\n    }\r\n    &::after {\r\n        top: auto;\r\n        left: auto;\r\n        right: 0;\r\n        transform: translateX(100%);\r\n        bottom: -1px;\r\n        box-shadow: 0 -2px 4px rgba(0,250,250,.42);\r\n        animation: ${keyframes => EffectAfter} 5s ease-in-out 2s infinite alternate;\r\n    }\r\n`;\r\nconst EffectBefore = keyframes`\r\n    0% { \r\n        left: 0;\r\n        transform: translateX(-100%);\r\n        opacity: 1;\r\n    } \r\n    50% {\r\n        opacity: 0;\r\n    }\r\n    100% { \r\n        left: 100%;\r\n        transform: translateX(0);\r\n        opacity: 1;\r\n    }\r\n`;\r\nconst EffectAfter = keyframes`\r\n    0% { \r\n        right: 0;\r\n        transform: translateX(100%);\r\n        opacity: 0;\r\n    } \r\n    50% {\r\n        opacity: 1;\r\n    }\r\n    100% { \r\n        opacity: 0;\r\n        right: 100%;\r\n        transform: translateX(0);\r\n    }\r\n`;\r\nconst BackgroundEffect = keyframes`\r\n    0% {\r\n        left: 0;\r\n        transform: translateX(-100%);\r\n        background-color: rgba(250,250,0,.24);\r\n    }\r\n    50% {    \r\n        // left: 100%;\r\n        background-color: rgba(250,250,250,0);\r\n    }\r\n    100% {\r\n        left: 100%;\r\n        transform: translateX(0);\r\n        background-color: rgba(250,250,0,.24);\r\n    }\r\n`;\r\nconst BottomTitleWrapper = styled.span`\r\n    position: relative;\r\n    z-index: 2;\r\n`;\r\nconst MainTitle = styled.h5`\r\n    position: relative;\r\n    text-align: center;\r\n    width: fit-content;\r\n    margin: 50px auto 80px auto;\r\n    font-size: 16px;\r\n    color: #5fffa6;\r\n    text-shadow: 0 2px 4px rgba(0,0,0,.32);\r\n    &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        bottom: -9px;\r\n        width: 50%;\r\n        height: 1px;\r\n        border-radius: 50%;\r\n        background-color: #5fffa6;\r\n    }\r\n`;\r\nconst GroupCardExtended = styled(GroupCard)`\r\n    margin-left: 20px;\r\n`;\r\nconst AddGroupButton = styled.button`\r\n    background-color: transparent;\r\n    border: 3px solid rgba(250,250,250,.06);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 7px;\r\n    width: 180px;\r\n    height: 180px;\r\n    margin-left: 20px;\r\n    transition: .2s;\r\n    cursor: pointer;\r\n    & svg {\r\n        fill: #dfdfdf;\r\n        transition: .2s;\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &:hover {\r\n        border: 3px solid #5fffa6;\r\n        background-color: #3d5697;\r\n        & svg {\r\n            // fill: #ff9800;\r\n            fill: #5fffa6;            \r\n        }\r\n    }  \r\n`;\r\nconst FileBox = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;    \r\n    display: flex;\r\n    width: 100%;\r\n    align-items: center;\r\n    padding: 7px 12.5px;\r\n    background-color: rgba(0,20,30,.22);\r\n`;\r\nconst FileIcon = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 10px;\r\n    & svg {\r\n        fill: white;\r\n    }\r\n    &.link-main {\r\n        justify-self: flex-end;\r\n        margin-left: auto;\r\n        &:hover {\r\n            & svg {\r\n                fill: #3ed5ce;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst FileTitle = styled.span`\r\n    font-size: 12px;\r\n    padding-bottom: 3px;\r\n    color: white;\r\n`;\r\ninterface IProps {\r\n    className?: string;\r\n    currentFile: string;\r\n    getGroupList: GetAllGrouping | null;\r\n    handleDeleteGroup: (deletedGrouping: Grouping) => void;\r\n    handleStartForGrouping: () => any;\r\n}\r\nconst Main: React.FC<IProps> = ({\r\n    currentFile,\r\n    className,\r\n    getGroupList,\r\n    handleDeleteGroup,\r\n    handleStartForGrouping\r\n}) => {\r\n    const { \r\n        toggleCreateModal, \r\n        handleClickCardIndex, \r\n        selectedCardIndex, \r\n        toggleDetails,\r\n        onCancelCardIndex,\r\n        handleSelectedGrouping,\r\n        handleTmpGrouping,\r\n        selectedGrouping\r\n    } = useHomeContext();\r\n    let groups: Grouping[] | null;\r\n    if(getGroupList) {\r\n        groups = getGroupList.groups.groupList;\r\n    } else {\r\n        groups = null;\r\n    }\r\n    return (\r\n        <Container className={className}>\r\n            <FileBox>\r\n                <FileIcon>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M12 9.185l7 6.514v6.301h-14v-6.301l7-6.514zm0-2.732l-9 8.375v9.172h18v-9.172l-9-8.375zm2 14.547h-4v-6h4v6zm10-8.852l-1.361 1.465-10.639-9.883-10.639 9.868-1.361-1.465 12-11.133 12 11.148z\"/></svg>\r\n                </FileIcon>\r\n                <FileIcon>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\"><path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"/></svg>\r\n                </FileIcon>\r\n                <FileTitle>{ currentFile }</FileTitle>\r\n                <FileIcon className={\"link-main\"}>\r\n                    <Link to={\"/\"}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M0 2v20h14v-2h-12v-16h12v-2h-14zm18 7.408l2.963 2.592-2.963 2.592v-1.592h-8v-2h8v-1.592zm-2-4.408v4h-8v6h8v4l8-7-8-7z\"/></svg>\r\n                    </Link>\r\n                </FileIcon>\r\n            </FileBox>\r\n            <Menubar \r\n                className={selectedCardIndex > -1 ? \"active\" : \"\"}\r\n                toggleDetails={toggleDetails}\r\n                handleStartForGrouping={handleStartForGrouping}\r\n                onCancelCardIndex={onCancelCardIndex}\r\n                handleDeleteGroup={handleDeleteGroup}\r\n                selectedGrouping={selectedGrouping}\r\n            />\r\n            <TopTitle>PREVIEW </TopTitle>\r\n            <MiddleTitle>Choose your desired Grouping</MiddleTitle>\r\n            <BottomTitle>\r\n                <BottomTitleWrapper>Create a Grouping for the Printer Middleware</BottomTitleWrapper>\r\n            </BottomTitle>\r\n            <MainTitle>GROUPING</MainTitle>\r\n            <CardList className={groups && groups.length > 2 ? \"active\" : \"\"}>\r\n                {\r\n                    groups && (\r\n                            groups.map((group, key) => {\r\n                                return (\r\n                                    <GroupCardExtended \r\n                                        className={key === selectedCardIndex ? \"active\" : \"card\"}\r\n                                        groupName={group.groupName}\r\n                                        id={key}\r\n                                        key={key}\r\n                                        handleClickCardIndex={ (e) => { handleClickCardIndex(key); handleSelectedGrouping(group); handleTmpGrouping(group); }}\r\n                                    />\r\n                                )\r\n                            }\r\n                        )     \r\n                    )\r\n                }\r\n                {/* {\r\n                    !groups && (\r\n                        <div>그룹핑 없음 (디자인 수정예정..)</div>\r\n                    )\r\n                } */}\r\n                {\r\n                    (!groups || groups.length <= 2) && (\r\n                        <AddGroupButton onClick={e => {e.preventDefault(); toggleCreateModal();}}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\r\n                        </AddGroupButton>\r\n                    ) \r\n                }\r\n                \r\n            </CardList>\r\n            \r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Main;","import Main from \"./Main\";\r\nexport default Main;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport Spinner from \"../../Components/Spinner\";\r\nimport DetailsPage from \"../../Components/DetailPage\";\r\nimport Main from \"../../Components/Main\";\r\nimport { GetAllGrouping } from \"../../Types/resolvers\";\r\nimport { Grouping } from \"../../Types/types\";\r\nimport BackgroundEffects from \"../../Components/BackgroundEffects\";\r\n\r\nconst Container = styled.div`\r\n    // z-index: 2;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 90%;\r\n    height: 90%;\r\n    max-height: 800px;\r\n    max-width: 1100px;\r\n    // background-color: white;\r\n    // background: linear-gradient(0deg, rgba(100,127,196,1) 0%, rgba(60,77,121,1) 80%);\r\n    // background: rgba(0,0,0,.3);\r\n    background: rgba(250,250,250,.1);\r\n    transform: translate(-50%, -50%) scale(.8);\r\n    box-shadow: 0 2px 4px rgba(0,0,0,.24), 0 6px 12px rgba(0,0,0,.42);\r\n    opacity: 0;\r\n    transition: opacity .7s, transform .3s ease-in-out;\r\n    &.active {\r\n        opacity: 1;\r\n        // top: 50%;\r\n        transform: translate(-50%, -50%) scale(1);\r\n    }\r\n   \r\n`;\r\nconst Effect = styled.div`\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    left: 18%;\r\n    top: 4%;\r\n    transition: .7s, opacity .6s;\r\n    opacity: 0;\r\n    transition-timing-function: ease-in-out;\r\n    transition-delay: 1s;\r\n    transform: translate(-50%, -50%);\r\n    background-color: rgba(0,0,0,.14);\r\n    border-radius: 50%;\r\n    // box-shadow: inset 1px 1px 10px rgba(0,0,0,.34);\r\n    \r\n`;\r\nconst EffectExtendedTop = styled(Effect)`\r\n    &.active {\r\n        opacity: .4;\r\n        width: 250px;\r\n        height: 250px;\r\n    }\r\n`;\r\nconst EffectExtendedMiddle = styled(Effect)`\r\n    top: 94%;\r\n    left: 40%;\r\n    transition-delay: .9s;\r\n    &.active {\r\n        opacity: .4;\r\n        width: 100px;\r\n        height: 100px;\r\n    }\r\n`;\r\nconst EffectExtendedBottom = styled(Effect)`\r\n    top: 100%;\r\n    left: 100%;\r\n    transition-delay: 1.1s;\r\n    &.active {\r\n        opacity: .4;\r\n        width: 150px;\r\n        height: 150px;\r\n    }\r\n`;\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    \r\n`;\r\nconst ScrollScreen = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 200%;\r\n    transition: transform .7s ease-in-out;\r\n    transform: translateY(0);\r\n    & > div {\r\n        &:nth-of-type(1) {\r\n            opacity: 1;\r\n        }\r\n        &:nth-of-type(2) {\r\n            opacity: 0;\r\n        }\r\n    }\r\n    &.active {\r\n        transform: translateY(-50%);\r\n        & > div {\r\n            &:nth-of-type(1) {\r\n                opacity: 0;\r\n            }\r\n            &:nth-of-type(2) {\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst MainExtended = styled(Main)`\r\n    width: 100%;\r\n    height: 50%;\r\n    transition: opacity .5s;\r\n`;\r\nconst DetailsPageExtended = styled(DetailsPage)`\r\n    width: 100%;\r\n    height: 50%;\r\n    transition: opacity .5s;\r\n`;\r\nconst SpinnerExtended = styled(Spinner)`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`\r\n\r\ninterface IProps {\r\n    loading: boolean;\r\n    isDetails: boolean;\r\n    currentFile: string;\r\n    getGroupList: GetAllGrouping | null;\r\n    handleUpdateGroup: (updatedGroup: Grouping) => void;\r\n    handleDeleteGroup: (deletedGrouping: Grouping) => void;\r\n    handleStartForGrouping: () => any;\r\n}\r\nconst HomePresenter: React.FC<IProps> = ({\r\n    loading,\r\n    isDetails,\r\n    currentFile,\r\n    getGroupList,\r\n    handleUpdateGroup,\r\n    handleDeleteGroup,\r\n    handleStartForGrouping\r\n}) => (\r\n    <React.Fragment>\r\n        {\r\n            loading && <SpinnerExtended className={\"load\"}/>\r\n        }\r\n        {/* <BackgroundEffects/> */}\r\n        <EffectExtendedTop className={loading ? \"\" : \"active\"}/>\r\n        <EffectExtendedMiddle className={loading ? \"\" : \"active\"}/>\r\n        <EffectExtendedBottom className={loading ? \"\" : \"active\"}/>\r\n        <Container className={loading ? \"\" : \"active\"}>\r\n            <Wrapper>\r\n                <ScrollScreen className={isDetails ? \"active\" : \"\"}>\r\n                    <MainExtended className={loading ? \"page-main\" : \"active\"} getGroupList={getGroupList} handleDeleteGroup={handleDeleteGroup} currentFile={currentFile} handleStartForGrouping={handleStartForGrouping}/>\r\n                    <DetailsPageExtended className={isDetails ? \"active\" : \"page-details\"} handleUpdateGroup={handleUpdateGroup}/>\r\n                </ScrollScreen>\r\n            </Wrapper>\r\n            \r\n        </Container>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default HomePresenter;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 180px;\r\n    height: 180px;\r\n`;\r\nconst InputCheckbox = styled.input`\r\n    opacity: 0;\r\n    pointer-events: none;\r\n    position: absolute;\r\n    z-index: -999;\r\n    &:foucs {\r\n        outline: none;\r\n    }\r\n    &:checked {\r\n        & ~ label {\r\n            border: 2px solid #1cb4a6;\r\n            box-shadow: 0 1px 2px rgba(0,0,0,.22), 0 2px 4px rgba(0,0,0,.32);\r\n            & svg {\r\n                fill: #1cb4a6;\r\n            }\r\n        }\r\n        & ~ .checked-icon {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\nconst Label = styled.label`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 2px solid #dfdfdf;\r\n    cursor: pointer;\r\n    transition: .3s;\r\n    & svg {\r\n        fill: #dfdfdf;\r\n    }\r\n    &:hover {\r\n        box-shadow: 0 1px 2px rgba(0,0,0,.22), 0 2px 4px rgba(0,0,0,.32);\r\n    }\r\n`;\r\n\r\nconst getPath = (name: string): string => {\r\n    const svgPdfPath: string = \"M11.363 2c4.155 0 2.637 6 2.637 6s6-1.65 6 2.457v11.543h-16v-20h7.363zm.826-2h-10.189v24h20v-14.386c0-2.391-6.648-9.614-9.811-9.614zm4.811 13h-2.628v3.686h.907v-1.472h1.49v-.732h-1.49v-.698h1.721v-.784zm-4.9 0h-1.599v3.686h1.599c.537 0 .961-.181 1.262-.535.555-.658.587-2.034-.062-2.692-.298-.3-.712-.459-1.2-.459zm-.692.783h.496c.473 0 .802.173.915.644.064.267.077.679-.021.948-.128.351-.381.528-.754.528h-.637v-2.12zm-2.74-.783h-1.668v3.686h.907v-1.277h.761c.619 0 1.064-.277 1.224-.763.095-.291.095-.597 0-.885-.16-.484-.606-.761-1.224-.761zm-.761.732h.546c.235 0 .467.028.576.228.067.123.067.366 0 .489-.109.199-.341.227-.576.227h-.546v-.944z\";\r\n    const svgSendEmailPath: string = \"M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z\";\r\n    const svgRESTFulPath: string = \"M24 21v-6h-18v6h18zm-3-4c.553 0 1 .448 1 1s-.447 1-1 1c-.552 0-1-.448-1-1s.448-1 1-1zm-7.806 0h1.275l-.864 2h-1.274l.863-2zm-2.141 0h1.275l-.863 2h-1.275l.863-2zm-2.19 0h1.275l-.863 2h-1.275l.863-2zm-4.863.941c-2.253-.29-4-2.194-4-4.524 0-2.252 1.626-4.121 3.767-4.506.177-3.294 2.895-5.911 6.233-5.911s6.056 2.617 6.233 5.911c2.005.361 3.541 2.029 3.729 4.089h-1.991c-.279-2.105-2.674-2.333-3.65-2.401.117-1.958-.555-5.599-4.321-5.599-4.438 0-4.359 4.75-4.321 5.599-.945-.037-3.679.341-3.679 2.818 0 1.223.856 2.245 2 2.511v2.013z\";\r\n    const svgRedirectPath: string = \"M20 3c0-1.657-1.344-3-3-3s-3 1.343-3 3c0 .312.061.606.149.889l-4.21 3.157c.473.471.878 1.01 1.201 1.599l4.197-3.148c.477.316 1.048.503 1.663.503 1.656 0 3-1.343 3-3zm-2 0c0 .551-.448 1-1 1s-1-.449-1-1 .448-1 1-1 1 .449 1 1zm3 12.062c1.656 0 3-1.343 3-3s-1.344-3-3-3c-1.281 0-2.367.807-2.797 1.938h-6.283c.047.328.08.66.08 1s-.033.672-.08 1h6.244c.396 1.195 1.509 2.062 2.836 2.062zm-1-3c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.448-1-1zm-20-.062c0 2.761 2.238 5 5 5s5-2.239 5-5-2.238-5-5-5-5 2.239-5 5zm2 0c0-1.654 1.346-3 3-3s3 1.346 3 3-1.346 3-3 3-3-1.346-3-3zm7.939 4.955l4.21 3.157c-.088.282-.149.576-.149.888 0 1.657 1.344 3 3 3s3-1.343 3-3-1.344-3-3-3c-.615 0-1.186.187-1.662.504l-4.197-3.148c-.324.589-.729 1.127-1.202 1.599zm6.061 4.045c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\";\r\n    switch(name) {\r\n        case \"pdf\": return svgPdfPath;\r\n        case \"sendEmail\": return svgSendEmailPath;\r\n        case \"restful\": return svgRESTFulPath;\r\n        case \"redirect\": return svgRedirectPath;\r\n        default: return \"No-Data\";\r\n    }\r\n}\r\nconst getLabelName = (name: string): string => {\r\n    switch(name) {\r\n        case \"pdf\": return \"PDF\";\r\n        case \"sendEmail\": return \"Send Email\";\r\n        case \"restful\": return \"RESTFul\";\r\n        case \"redirect\": return \"Redirect\";\r\n        default: return \"No-Data\";\r\n    }\r\n}\r\nconst CheckedIcon = styled.div`\r\n    position: absolute;\r\n    top: 5px;\r\n    right: -10px;\r\n    transform: translateX(-50%);\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    opacity: 0;\r\n    transition: .3s;\r\n    border-radius: 50%;\r\n    background-color: #1cb4a6;\r\n    & svg {\r\n        fill: white;\r\n    }\r\n`;\r\nconst Name = styled.div`\r\n    position: absolute;\r\n    bottom: -30px;\r\n    left: 50%;\r\n    color: #aeaeae;\r\n    transform: translateX(-50%);\r\n`;\r\n\r\ninterface IProps {\r\n    id: number;\r\n    name: \"pdf\" | \"redirect\" | \"restful\" | \"sendEmail\";\r\n    checked: boolean;\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\nconst GroupCheckbox: React.FC<IProps> = ({\r\n    id,\r\n    name,\r\n    checked,\r\n    onChange\r\n}) => {\r\n    const svgPath = getPath(name);\r\n    const labelName = getLabelName(name);\r\n    return (\r\n        <Container>\r\n            <InputCheckbox id={`checked_${id}`} type={\"checkbox\"} checked={checked} onChange={onChange} name={name}/>\r\n            <Label htmlFor={`checked_${id}`}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"55\" height=\"55\" viewBox=\"0 0 24 24\"><path d={svgPath}/></svg>\r\n            </Label>\r\n            <Name>{ labelName }</Name>\r\n            <CheckedIcon className={\"checked-icon\"}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 11c2.761.575 6.312 1.688 9 3.438 3.157-4.23 8.828-8.187 15-11.438-5.861 5.775-10.711 12.328-14 18.917-2.651-3.766-5.547-7.271-10-10.917z\"/></svg>\r\n            </CheckedIcon>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default GroupCheckbox;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 36px;\r\n    height: 36px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    background-color: #b2c6c8;\r\n    transition: .3s;\r\n    &.active {\r\n        & > div {\r\n            background-color: #21d2ae;\r\n            & > .progress-name {\r\n                font-weight: bold;\r\n                color: #21d2ae;\r\n            }\r\n        }\r\n    }\r\n    &.wait {\r\n        & > div {\r\n            background-color: transparent;\r\n        }\r\n    }\r\n    &.next {\r\n        & > div {\r\n            color: #8c8c8c;\r\n            background-color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 80%;\r\n    border-radius: 50%;\r\n    height: 80%;\r\n    background-color: transparent;\r\n    color: white;\r\n    transition: .3s;\r\n`;\r\nconst Name = styled.div`\r\n    position: absolute;\r\n    bottom: -22px;\r\n    left: 50%;\r\n    font-size: 11px;\r\n    color: #959090;\r\n    transition: .3s;\r\n    transform: translateX(-50%);\r\n`;\r\ninterface IProps {\r\n    num: number;\r\n    name: string;\r\n    className: string;\r\n}\r\n\r\nconst Progressbar: React.FC<IProps> = ({\r\n    num,\r\n    name,\r\n    className\r\n}) => (\r\n    <Container className={className}>\r\n        <Wrapper>\r\n            { num }\r\n            <Name className={\"progress-name\"}>{name}</Name>\r\n        </Wrapper>\r\n    </Container>\r\n);\r\n\r\nexport default Progressbar;","import Progressbar from \"./Progressbar\";\r\nexport default Progressbar;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.button`\r\n    position: relative;\r\n    width: 120px;\r\n    height: 35px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 0;\r\n    color: white;\r\n    transition: .3s;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n    font-size: 12px;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    & svg {\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        left: 18px;\r\n        transition: .3s;\r\n        fill: white;\r\n    }\r\n    &.left {\r\n        padding-left: 25px;\r\n        background-color: #d41a59;\r\n        border: 2px solid #d41a59;\r\n    }\r\n    \r\n    &.right {\r\n        padding-right: 25px;\r\n        background-color: #2588f8;\r\n        border: 2px solid #2588f8;\r\n        & svg {\r\n            position: absolute;\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n            left: auto;\r\n            right: 18px;\r\n            transition: .3s;\r\n        }\r\n    }\r\n    &:hover {\r\n        box-shadow: 0 2px 4px rgba(0,0,0,.24), 0px 3px 6px rgba(0,0,0,.42);\r\n        &.left {\r\n            color: #d41a59;\r\n            background-color: white;\r\n            & svg {\r\n                left: 11px;\r\n                transition-delay: .1s;\r\n                fill: #d41a59;\r\n            }\r\n        }\r\n        &.right {\r\n            color: #2588f8;\r\n            background-color: white;\r\n            & svg {\r\n                transition-delay: .1s;\r\n                right: 11px;\r\n                fill: #2588f8;\r\n            }\r\n        }\r\n    }\r\n    &:not(:nth-of-type(1)) {\r\n        margin-left: 15px;\r\n    }\r\n`;\r\ninterface IProps {\r\n    step: \"left\" | \"right\"\r\n    value: string;\r\n    onClick: () => void;\r\n}\r\nconst ButtonIcon: React.FC<IProps> = ({\r\n    step,\r\n    value,\r\n    onClick\r\n}) => (\r\n    <Container className={step === \"left\" ? \"left\" : \"right\"} onClick={e => {e.preventDefault(); onClick();}}>\r\n        {\r\n            step === \"left\" ? (\r\n                <React.Fragment>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 24 24\"><path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\"/></svg>\r\n                    {value}\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    {value}\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 24 24\"><path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"/></svg>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    </Container>\r\n)\r\nexport default ButtonIcon;","import ButtonIcon from \"./ButtonIcon\";\r\nexport default ButtonIcon;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    \r\n`;\r\nconst EffectWrapper = styled.div`\r\n    position: relative;\r\n`;\r\nconst Effect = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 50%;\r\n    height: 100%;\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: -2px;\r\n        left: -2px;\r\n        width: 100%;\r\n        height: 50%;\r\n        transform: skew(2deg, 2deg);\r\n    }\r\n    &::after {\r\n        content: \"\";\r\n        position: relative;\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: white;\r\n    }\r\n`;\r\nconst LeftEffect = styled(Effect)`\r\n    &::before {\r\n        background-color: #3f4fa8;\r\n    }\r\n    &::after {\r\n        background-color: #000000;\r\n    }\r\n`;\r\nconst RightEffect = styled(Effect)`\r\n    top: 0; \r\n    left: auto;\r\n    right: 0;\r\n    &::before {\r\n        background-color: #99bcf6;\r\n        top: auto;\r\n        left: auto;\r\n        bottom: -2px;\r\n        right: -2px;\r\n    }\r\n    &::after {\r\n        background-color: #47d1ae;\r\n    }\r\n`;\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 361px;\r\n    padding: 15px;\r\n    // background-color: #f1f5f6;\r\n    background-color: white;\r\n`;\r\nconst Title = styled.div`\r\n   margin-left: 10px;\r\n`;\r\nconst Logo = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    color: #00bcd4;\r\n    & svg {\r\n        fill: #00bcd4;\r\n    }\r\n`;\r\n\r\ninterface IProps extends React.PropsWithChildren<any>{\r\n    className: string;\r\n    title: string;\r\n    svgPath: string;\r\n}\r\nconst FormCard: React.FC<IProps> = ({\r\n    children,\r\n    title,\r\n    className,\r\n    svgPath\r\n}) => (\r\n    <Container className={className}>\r\n        <EffectWrapper>\r\n            <LeftEffect />\r\n            <RightEffect />\r\n            <Wrapper>\r\n                <Logo>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\">\r\n                        <path d={svgPath}/>\r\n                    </svg>\r\n                    <Title>\r\n                        {title}\r\n                    </Title>\r\n                </Logo>\r\n                \r\n                {\r\n                    children\r\n                }\r\n            </Wrapper>\r\n        </EffectWrapper>\r\n        \r\n    </Container>\r\n);\r\n\r\nexport default FormCard;","import FormCard from \"./FormCard\";\r\nexport default FormCard;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n\r\n`;\r\nconst InputCheckbox = styled.input`\r\n    position: absolute;\r\n    z-index: -1;\r\n    opacity: 0;\r\n    width: 0;\r\n    pointer-events: none;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &:checked {\r\n        & ~ label {\r\n            color: #03bdd4;\r\n            & div {\r\n                border: 1px solid #03bdd4;\r\n                background-color: #03bdd4;\r\n            }\r\n            & svg {\r\n                opacity: 1;\r\n                fill: white;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst Label = styled.label`\r\n    position: relative;\r\n    color: darkgray;\r\n    padding-left: 1px;\r\n    cursor: pointer;\r\n    font-size: 12px;\r\n`;\r\n\r\nconst LabelIcon = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: -20px;\r\n    border: 1px solid #dfdfdf;\r\n    border-radius: 5px;\r\n    background-color: white;\r\n    transition: .3s;\r\n    padding: 3px;\r\n    \r\n    & svg {\r\n        opacity: 0;\r\n    }\r\n`;\r\ninterface IProps {\r\n    name: string;\r\n    text: string;\r\n    className: string;\r\n    checked: boolean;\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst CheckboxText: React.FC<IProps> = ({\r\n    text,\r\n    name,\r\n    className,\r\n    checked,\r\n    onChange,\r\n}) => (\r\n    <Container className={className}>\r\n        <InputCheckbox type={\"checkbox\"} id={`label_${name}`} onChange={onChange} checked={checked} name={name}/>\r\n        <Label htmlFor={`label_${name}`}>\r\n            <LabelIcon>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 24 24\"><path d=\"M0 11c2.761.575 6.312 1.688 9 3.438 3.157-4.23 8.828-8.187 15-11.438-5.861 5.775-10.711 12.328-14 18.917-2.651-3.766-5.547-7.271-10-10.917z\"/></svg>\r\n            </LabelIcon>\r\n            { text }\r\n        </Label>\r\n        \r\n    </Container>\r\n);\r\n\r\nexport default CheckboxText;","import CheckboxText from \"./CheckboxText\";\r\nexport default CheckboxText;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    margin-bottom: 5px;\r\n    padding-left: 5px;\r\n    &::after {  \r\n        content: \"\";\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        left: -5px;\r\n        height: 85%;\r\n        width: 1.5px;\r\n        border-radius: 50%;\r\n        background-color: #3fc0ca;\r\n    }\r\n`;\r\nconst Text = styled.p`\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    padding-bottom: 6px;\r\n    font-size: 14px;\r\n`;\r\nconst Data = styled.p`\r\n    color: darkgray;\r\n    font-size: 13px;\r\n    padding-bottom: 3px;\r\n    border-bottom: 1px solid #dfdfdf;\r\n`;\r\nconst Job = styled.span`\r\n    color: #c1cccb;\r\n    font-size: 11px;\r\n    font-weight: 400;\r\n    margin-left: auto;\r\n`;\r\ninterface IProps {\r\n    text: string;\r\n    value: string;\r\n    className: string;\r\n    job: \"PDF\" | \"SendEmail\" | \"Redirect\" | \"RESTFul\" | \"\";\r\n}\r\nconst ConfirmText: React.FC<IProps> = ({\r\n    text,\r\n    value,\r\n    className,\r\n    job\r\n}) => (\r\n    <Container className={className}>\r\n        <Text>{ text } <Job> { job }</Job></Text>\r\n        <Data>{ value === \"\" ? \"-\" : value}</Data>\r\n    </Container>\r\n);\r\n\r\nexport default ConfirmText;","import ConfirmText from \"./ConfirmText\";\r\nexport default ConfirmText;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 55px;\r\n    height: 55px;\r\n    margin-bottom: 20px;\r\n    border: 3px dotted #dfdfdf;\r\n    border-radius: 50%;\r\n    margin-right: 30px;\r\n    & svg {\r\n        fill: #dfdfdf;\r\n    }\r\n    &.active {\r\n        // background-color: #2bbac5;\r\n        border: 2px solid #2bbac5;\r\n        & svg {\r\n            fill: #2bbac5;\r\n        }\r\n        & > span {\r\n            color: #2bbac5;\r\n            font-weight: bold;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Text = styled.span`\r\n    position: absolute;\r\n    bottom: -20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-size: 13px;\r\n    color: gray;\r\n    white-space: nowrap;\r\n`;\r\n\r\ninterface IProps {\r\n    text: string;\r\n    className: string;\r\n    type: \"pdf\" | \"sendEmail\" | \"restful\" | \"redirect\";\r\n}\r\n\r\nconst getPath = (name: string): string => {\r\n    const svgPdfPath: string = \"M11.363 2c4.155 0 2.637 6 2.637 6s6-1.65 6 2.457v11.543h-16v-20h7.363zm.826-2h-10.189v24h20v-14.386c0-2.391-6.648-9.614-9.811-9.614zm4.811 13h-2.628v3.686h.907v-1.472h1.49v-.732h-1.49v-.698h1.721v-.784zm-4.9 0h-1.599v3.686h1.599c.537 0 .961-.181 1.262-.535.555-.658.587-2.034-.062-2.692-.298-.3-.712-.459-1.2-.459zm-.692.783h.496c.473 0 .802.173.915.644.064.267.077.679-.021.948-.128.351-.381.528-.754.528h-.637v-2.12zm-2.74-.783h-1.668v3.686h.907v-1.277h.761c.619 0 1.064-.277 1.224-.763.095-.291.095-.597 0-.885-.16-.484-.606-.761-1.224-.761zm-.761.732h.546c.235 0 .467.028.576.228.067.123.067.366 0 .489-.109.199-.341.227-.576.227h-.546v-.944z\";\r\n    const svgSendEmailPath: string = \"M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z\";\r\n    const svgRESTFulPath: string = \"M24 21v-6h-18v6h18zm-3-4c.553 0 1 .448 1 1s-.447 1-1 1c-.552 0-1-.448-1-1s.448-1 1-1zm-7.806 0h1.275l-.864 2h-1.274l.863-2zm-2.141 0h1.275l-.863 2h-1.275l.863-2zm-2.19 0h1.275l-.863 2h-1.275l.863-2zm-4.863.941c-2.253-.29-4-2.194-4-4.524 0-2.252 1.626-4.121 3.767-4.506.177-3.294 2.895-5.911 6.233-5.911s6.056 2.617 6.233 5.911c2.005.361 3.541 2.029 3.729 4.089h-1.991c-.279-2.105-2.674-2.333-3.65-2.401.117-1.958-.555-5.599-4.321-5.599-4.438 0-4.359 4.75-4.321 5.599-.945-.037-3.679.341-3.679 2.818 0 1.223.856 2.245 2 2.511v2.013z\";\r\n    const svgRedirectPath: string = \"M20 3c0-1.657-1.344-3-3-3s-3 1.343-3 3c0 .312.061.606.149.889l-4.21 3.157c.473.471.878 1.01 1.201 1.599l4.197-3.148c.477.316 1.048.503 1.663.503 1.656 0 3-1.343 3-3zm-2 0c0 .551-.448 1-1 1s-1-.449-1-1 .448-1 1-1 1 .449 1 1zm3 12.062c1.656 0 3-1.343 3-3s-1.344-3-3-3c-1.281 0-2.367.807-2.797 1.938h-6.283c.047.328.08.66.08 1s-.033.672-.08 1h6.244c.396 1.195 1.509 2.062 2.836 2.062zm-1-3c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.448-1-1zm-20-.062c0 2.761 2.238 5 5 5s5-2.239 5-5-2.238-5-5-5-5 2.239-5 5zm2 0c0-1.654 1.346-3 3-3s3 1.346 3 3-1.346 3-3 3-3-1.346-3-3zm7.939 4.955l4.21 3.157c-.088.282-.149.576-.149.888 0 1.657 1.344 3 3 3s3-1.343 3-3-1.344-3-3-3c-.615 0-1.186.187-1.662.504l-4.197-3.148c-.324.589-.729 1.127-1.202 1.599zm6.061 4.045c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\";\r\n    switch(name) {\r\n        case \"pdf\": return svgPdfPath;\r\n        case \"sendEmail\": return svgSendEmailPath;\r\n        case \"restful\": return svgRESTFulPath;\r\n        case \"redirect\": return svgRedirectPath;\r\n        default: return \"No-Data\";\r\n    }\r\n}\r\n\r\nconst CheckboxResult: React.FC<IProps> = ({\r\n    text,\r\n    className,\r\n    type \r\n}) => {\r\n    const svgPath: string = getPath(type);\r\n    return (\r\n        <Container className={className}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 24 24\">\r\n                <path d={svgPath}/>\r\n            </svg>\r\n            <Text>{ text }</Text>        \r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default CheckboxResult;","import CheckboxResult from \"./CheckboxResult\";\r\nexport default CheckboxResult;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n`;\r\nconst Text = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    width: fit-content;\r\n    align-items: center;\r\n    padding-left: 17px;\r\n    font-size: 14px;\r\n    &:nth-of-type(1) {\r\n        margin-bottom: 10px;\r\n    }\r\n    color: ${props => props.theme.greenColor};\r\n    & svg {\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        left: 0;\r\n        fill: ${props => props.theme.greenColor};\r\n    }\r\n    &.active {\r\n        color: #c1c1c1;\r\n        & svg {\r\n            fill: #c1c1c1;\r\n        }\r\n        &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 1px;\r\n            transform: translateY(-50%);\r\n            background-color: #c1c1c1;\r\n        }\r\n    }\r\n`;\r\ninterface IProps {\r\n    text: string;\r\n    isChecked: boolean;\r\n}\r\nconst CheckboxResultText: React.FC<IProps> = ({\r\n    text,\r\n    isChecked\r\n}) => (\r\n    <Container>\r\n        <Text className={isChecked ? \"\" : \"active\"}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\"><path d=\"M20 12.194v9.806h-20v-20h18.272l-1.951 2h-14.321v16h16v-5.768l2-2.038zm.904-10.027l-9.404 9.639-4.405-4.176-3.095 3.097 7.5 7.273 12.5-12.737-3.096-3.096z\"/></svg>\r\n            { text }\r\n        </Text>\r\n    </Container>\r\n);\r\n\r\nexport default CheckboxResultText;","import CheckboxResultText from \"./CheckboxResultText\";\r\nexport default CheckboxResultText;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    margin: 0 auto;\r\n    width: fit-content;\r\n    margin-top: 15px;\r\n    &::before,\r\n    &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: -10px;\r\n        left: 0;\r\n        width: 0;\r\n        height: 2px;\r\n        background-color: green;\r\n        transition: background-color .5s, width .3s;\r\n    }\r\n    &::before {\r\n        bottom: auto;\r\n        top: -8px;\r\n        left: auto;\r\n        right: 0;\r\n    }\r\n    &:hover {\r\n        &::before,\r\n        &::after {\r\n            width: 100%;\r\n            background-color: ${props => props.theme.greenColor};\r\n            \r\n        }\r\n    }\r\n`;\r\nconst InputChecked = styled.input`\r\n    position: absolute;\r\n    z-index: -1;\r\n    opacity: 0;\r\n    width: 0;\r\n    pointer-events: none;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    \r\n    &:checked {\r\n        & ~ label {\r\n            color: #009688;\r\n            & svg {\r\n                opacity: 1;\r\n                fill: #009688;\r\n            }\r\n            & div {\r\n                border: 1px solid #009688;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst Label = styled.label`\r\n    position: relative;\r\n    padding-left: 37px;\r\n    font-size: 14px;\r\n    color: #dfdfdf;\r\n    cursor: pointer;\r\n`;\r\nconst IconBox = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: 5px;\r\n    display: flex;\r\n    justify-content: center;    \r\n    align-items: center;\r\n    padding: 5px;\r\n    border: 1px solid #dfdfdf;\r\n    & svg {\r\n        transition: .3s;\r\n        opacity: 0;\r\n        fill: #dfdfdf;\r\n    }\r\n`\r\n\r\ninterface IProps {\r\n    checked: boolean;\r\n    text: string;\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\nconst CheckboxAgree: React.FC<IProps> = ({\r\n    checked,\r\n    text,\r\n    onChange\r\n}) => (\r\n    <Container>\r\n        <InputChecked type={\"checkbox\"} onChange={onChange} checked={checked} id={\"agree_checked\"}/>\r\n        <Label htmlFor={\"agree_checked\"}>\r\n            <IconBox>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 24 24\"><path d=\"M9 22l-10-10.598 2.798-2.859 7.149 7.473 13.144-14.016 2.909 2.806z\"/></svg>\r\n            </IconBox>\r\n            { text }\r\n        </Label>\r\n    </Container>\r\n);\r\n\r\nexport default CheckboxAgree;","import CheckboxAgree from \"./CheckboxAgree\";\r\nexport default CheckboxAgree;","import React, { ChangeEventHandler } from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport GroupCheckbox from \"../GroupCheckbox/GroupCheckbox\";\r\nimport { Grouping } from \"../../Types/types\";\r\nimport Progressbar from \"../Progressbar\";\r\nimport ButtonIcon from \"../ButtonIcon\";\r\nimport InputIcon from \"../InputIcon\";\r\nimport FormCard from \"../FormCard\";\r\nimport CheckboxText from \"../CheckboxText\";\r\nimport ConfirmText from \"../ConfirmText\";\r\nimport CheckboxResult from \"../CheckboxResult\";\r\nimport CheckboxResultText from \"../CheckboxResultText\";\r\nimport CheckboxAgree from \"../CheckboxAgree\";\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    height: 0;\r\n    border-radius: 50%;\r\n    transform: scale(0) rotate(90deg);\r\n    opacity: 0;\r\n    transition: 0s;\r\n    // background-color: white;\r\n    background-color: black;\r\n    &.active {\r\n        transition: .5s;\r\n        left: auto;\r\n        right: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 0;\r\n        transform: scale(1) rotate(0deg);\r\n        // background-color: rgba(0,0,0,.9);\r\n        background-color: rgba(90,50,40,.4);\r\n        width: 100%;\r\n        opacity: 1;\r\n        & > div {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    width: 90%;\r\n    height: 90%;\r\n    max-height: 800px;\r\n    max-width: 1100px;\r\n    background-color: white;\r\n    opacity: 0;\r\n    transition: .3s;\r\n    transition-delay: .8s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst WrapperTitle = styled.h3`\r\n    margin-top: 10px;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    color: #13ac9e;\r\n    text-shadow: 0 1px 2px rgba(0,0,0,.11)\r\n`;\r\nconst Screen = styled.div`\r\n    width: 300%;\r\n    height: 100%;\r\n    display: flex;\r\n    transition: .4s;\r\n    transition-timing-function: cubic-bezier(1,.44,0,.57);\r\n    &.active {\r\n        transform: translateX(-33.3333%);\r\n        \r\n    }\r\n    &.active-2 {\r\n        transform: translateX(-66.6666%);\r\n    }\r\n`;\r\nconst WrapperStandard = styled.div`\r\n    padding-top: 100px;\r\n    width: 33.3333%;\r\n    height: 100%;\r\n    opacity: .1;\r\n    transition: opacity .4s;\r\n    &.active {\r\n        opacity: 1\r\n    }\r\n`;\r\nconst WrapperChoiceJob = styled(WrapperStandard)`\r\n    \r\n`;\r\nconst WrapperDetailsJob = styled(WrapperStandard)`\r\n\r\n`;\r\nconst WrapperConfirm = styled(WrapperStandard)`\r\n\r\n`;\r\nconst GroupList = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    max-width: 900px;\r\n    margin: 0 auto;\r\n    margin-top: 60px;\r\n    justify-content: space-around;\r\n`;  \r\nconst CloseBtn = styled.button`\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 0;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    & svg {\r\n        fill: #dfdfdf;\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &:hover {\r\n        & svg {\r\n            fill: black;\r\n        }\r\n    }\r\n`;\r\nconst ProgressCell = styled.div`\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 0;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nconst ProgressBarExtended = styled(Progressbar)`\r\n    position: relative;\r\n    &:not(:nth-of-type(1)) {\r\n        margin-left: 130px;\r\n        &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n            right: 100%;\r\n            height: 2px;\r\n            width: 130px;\r\n            background-color: #b2c6c8;\r\n        }\r\n    }\r\n`;\r\nconst ButtonCell = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    left: 0;\r\n    bottom: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 35px;\r\n`;\r\nconst GroupNameCell = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 20px 0 30px 0;\r\n`;\r\nconst DetailsInputCell = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nconst FormCardExtended = styled(FormCard)`\r\n    &:not(:nth-of-type(1)) {\r\n        margin-left: 15px;\r\n    }\r\n`;\r\nconst InputIconExtended = styled(InputIcon)`\r\n    margin-bottom: 7px;\r\n`;\r\nconst CheckboxTextExtended = styled(CheckboxText)`\r\n    margin-left: 25px;\r\n    margin-top: 12px;\r\n`;\r\nconst CheckBoxResultCell = styled.div`\r\n    display: flex;\r\n    margin: 10px auto 10px auto;\r\n    max-width: 700px\r\n    align-items: center;\r\n    // justify-content: space-between;\r\n    justify-content: flex-start;\r\n`;\r\nconst CheckboxResultCellWrapper = styled.div`\r\n    // justify-self: flex-end;\r\n    margin-left: 45px;\r\n`;\r\n\r\nconst ConfirmTextCell = styled.div`\r\n    width: 100%;\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    & > div {\r\n        width: 45%;\r\n        margin: 0;\r\n        margin-bottom: 7px;\r\n        &.group-name,\r\n        &.email {\r\n            width: 100%;\r\n        }\r\n    }\r\n    flex-flow: row wrap;\r\n`;\r\nconst ConfirmTextExtended = styled(ConfirmText)`\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n    margin-bottom: 6px;\r\n`;\r\n\r\nconst CheckboxResultExtended = styled(CheckboxResult)`\r\n    \r\n`;\r\n\r\ninterface IProps {\r\n    className: string;\r\n    isAgree: boolean;\r\n    errorLoading: boolean;\r\n    toggleCreateModal: () => void;\r\n    toggleConfirm: () => void;\r\n    formCreateGrouping: Grouping;\r\n    handleChangeFormGrouping: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    handleTextChangeFormGrouping: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    handleChangeRestfulCheckbox:  (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    resetFormCreateGrouping: any;\r\n    onNextStep: () => void,\r\n    onPreviousStep: () => void,\r\n    currentStep: number\r\n    handleCreateGroup: (currentStep: number, newGrouping: Grouping) => void;\r\n    isRestfulFunc: { value: boolean, onChange: (event: React.ChangeEvent<HTMLInputElement>) => any, onInit: () =>{} };\r\n}\r\nconst CreateGroupModalPresenter: React.FC<IProps> = ({\r\n    className,\r\n    isAgree,\r\n    errorLoading,\r\n    toggleCreateModal,\r\n    toggleConfirm,\r\n    formCreateGrouping,\r\n    handleChangeFormGrouping,\r\n    handleTextChangeFormGrouping,\r\n    handleChangeRestfulCheckbox,\r\n    resetFormCreateGrouping,\r\n    onNextStep,\r\n    onPreviousStep,\r\n    currentStep,\r\n    handleCreateGroup,\r\n    isRestfulFunc\r\n}) => ( \r\n    <Container className={className}>\r\n        <Wrapper className={errorLoading ? \"error\" : \"\"}>\r\n            <ProgressCell>\r\n                <ProgressBarExtended  \r\n                    className={currentStep === 0 ? \"active\" : \"next\"}\r\n                    name=\"JOB\"\r\n                    num={1}\r\n                />\r\n                <ProgressBarExtended  \r\n                    className={currentStep === 1 ? \"active\" : currentStep < 1 ? \"wait\" : \"next\"}\r\n                    name=\"OPTIONS\"\r\n                    num={2}\r\n                />\r\n                <ProgressBarExtended  \r\n                    className={currentStep === 2 ? \"active\" : \"wait\"}\r\n                    name=\"CONFIRM\"\r\n                    num={3}\r\n                />\r\n            </ProgressCell>\r\n           \r\n            <Screen className={currentStep === 1 ? \"active\" : currentStep === 2 ? \"active-2\" : \"\"}>\r\n                <WrapperChoiceJob className={currentStep === 0 ? \"active\" : \"\"}>\r\n                    <WrapperTitle>SELECT GROUP Job</WrapperTitle>\r\n                    <GroupList>\r\n                        <GroupCheckbox id={1} name={\"pdf\"} checked={formCreateGrouping.pdf.isChecked} onChange={handleChangeFormGrouping}/>\r\n                        <GroupCheckbox id={2} name={\"sendEmail\"} checked={formCreateGrouping.sendEmail.isChecked} onChange={handleChangeFormGrouping}/>\r\n                        <GroupCheckbox id={3} name={\"restful\"} checked={formCreateGrouping.restful.isChecked} onChange={handleChangeFormGrouping}/>\r\n                        <GroupCheckbox id={4} name={\"redirect\"} checked={formCreateGrouping.redirect.isChecked} onChange={handleChangeFormGrouping}/>\r\n                    </GroupList>\r\n                </WrapperChoiceJob>\r\n                <WrapperDetailsJob className={currentStep === 1 ? \"active\" : \"\"}>\r\n                    <WrapperTitle>Write Details</WrapperTitle>\r\n                    <GroupNameCell>\r\n                        <InputIcon \r\n                            placeholder={\"GroupName\"}\r\n                            value={formCreateGrouping.groupName}\r\n                            name={\"groupName\"}\r\n                            className={formCreateGrouping.groupName !== \"\" ? \"active\" : \" \"}\r\n                            svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                            onChange={handleTextChangeFormGrouping}\r\n                        />\r\n                    </GroupNameCell>\r\n                    <DetailsInputCell>\r\n                        {\r\n                            formCreateGrouping.pdf.isChecked && (\r\n                                <FormCardExtended \r\n                                title={\"PDF\"}\r\n                                svgPath={\"M11.363 2c4.155 0 2.637 6 2.637 6s6-1.65 6 2.457v11.543h-16v-20h7.363zm.826-2h-10.189v24h20v-14.386c0-2.391-6.648-9.614-9.811-9.614zm4.811 13h-2.628v3.686h.907v-1.472h1.49v-.732h-1.49v-.698h1.721v-.784zm-4.9 0h-1.599v3.686h1.599c.537 0 .961-.181 1.262-.535.555-.658.587-2.034-.062-2.692-.298-.3-.712-.459-1.2-.459zm-.692.783h.496c.473 0 .802.173.915.644.064.267.077.679-.021.948-.128.351-.381.528-.754.528h-.637v-2.12zm-2.74-.783h-1.668v3.686h.907v-1.277h.761c.619 0 1.064-.277 1.224-.763.095-.291.095-.597 0-.885-.16-.484-.606-.761-1.224-.761zm-.761.732h.546c.235 0 .467.028.576.228.067.123.067.366 0 .489-.109.199-.341.227-.576.227h-.546v-.944z\"}\r\n                                >\r\n                                    <InputIconExtended \r\n                                        className={formCreateGrouping.pdf.fileName !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"File Name\"}\r\n                                        value={formCreateGrouping.pdf.fileName}\r\n                                        name={\"fileName\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                    />\r\n                                    <InputIconExtended \r\n                                        className={formCreateGrouping.pdf.filePath !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"File Path\"}\r\n                                        value={formCreateGrouping.pdf.filePath}\r\n                                        name={\"filePath\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                    />\r\n                                </FormCardExtended>\r\n                            )\r\n                        }\r\n                        {\r\n                            formCreateGrouping.sendEmail.isChecked && (\r\n                                <FormCardExtended \r\n                                title={\"Send Email\"}\r\n                                svgPath={\"M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z\"}\r\n                                >\r\n                                    <InputIconExtended\r\n                                        className={formCreateGrouping.sendEmail.email !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"Sender\"}\r\n                                        value={formCreateGrouping.sendEmail.email}\r\n                                        name={\"email\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                    />\r\n                                    <InputIconExtended\r\n                                        className={formCreateGrouping.sendEmail.password !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"Password\"}\r\n                                        value={formCreateGrouping.sendEmail.password}\r\n                                        name={\"password\"}\r\n                                        type={\"password\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                    />\r\n                                    <InputIconExtended\r\n                                        className={formCreateGrouping.sendEmail.destinationEmails !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"Recipients\"}\r\n                                        value={formCreateGrouping.sendEmail.destinationEmails}\r\n                                        name={\"destinationEmails\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                    />\r\n                                    <InputIconExtended\r\n                                        className={formCreateGrouping.sendEmail.mailTitle !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"Mail Title\"}\r\n                                        value={formCreateGrouping.sendEmail.mailTitle}\r\n                                        name={\"mailTitle\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                    />\r\n                                    <InputIconExtended\r\n                                        className={formCreateGrouping.sendEmail.mailContent !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"Mail Content\"}\r\n                                        value={formCreateGrouping.sendEmail.mailContent}\r\n                                        name={\"mailContent\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                    />\r\n                                </FormCardExtended>\r\n                            )\r\n                        }\r\n                        {\r\n                            formCreateGrouping.restful.isChecked && (\r\n                                <FormCardExtended\r\n                                    title={\"RESTFul\"}\r\n                                    svgPath={\"M24 21v-6h-18v6h18zm-3-4c.553 0 1 .448 1 1s-.447 1-1 1c-.552 0-1-.448-1-1s.448-1 1-1zm-7.806 0h1.275l-.864 2h-1.274l.863-2zm-2.141 0h1.275l-.863 2h-1.275l.863-2zm-2.19 0h1.275l-.863 2h-1.275l.863-2zm-4.863.941c-2.253-.29-4-2.194-4-4.524 0-2.252 1.626-4.121 3.767-4.506.177-3.294 2.895-5.911 6.233-5.911s6.056 2.617 6.233 5.911c2.005.361 3.541 2.029 3.729 4.089h-1.991c-.279-2.105-2.674-2.333-3.65-2.401.117-1.958-.555-5.599-4.321-5.599-4.438 0-4.359 4.75-4.321 5.599-.945-.037-3.679.341-3.679 2.818 0 1.223.856 2.245 2 2.511v2.013z\"}\r\n                                >   \r\n                                    <InputIcon\r\n                                        className={formCreateGrouping.restful.data !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"Function Data\"}\r\n                                        value={formCreateGrouping.restful.data}\r\n                                        type={\"textarea\"}\r\n                                        name={\"data\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                        isFunction={isRestfulFunc.value}\r\n                                    />\r\n                                    <CheckboxTextExtended className={\"checkbox-text\"} text={\"함수형\"} name={\"name\"} onChange={isRestfulFunc.onChange} checked={isRestfulFunc.value}/>\r\n                                    <CheckboxTextExtended className={\"checkbox-text\"} text={\"로깅\"} name={\"isLogging\"} onChange={handleChangeRestfulCheckbox} checked={formCreateGrouping.restful.isLogging}/>\r\n                                    <CheckboxTextExtended className={\"checkbox-text\"} text={\"파일전송 여부\"} name={\"isSendFile\"} onChange={handleChangeRestfulCheckbox} checked={formCreateGrouping.restful.isSendFile}/>\r\n                                </FormCardExtended>\r\n                            )\r\n                        }\r\n                        {\r\n                            formCreateGrouping.redirect.isChecked && (\r\n                                <FormCardExtended \r\n                                title={\"Redirect\"}\r\n                                svgPath={\"M20 3c0-1.657-1.344-3-3-3s-3 1.343-3 3c0 .312.061.606.149.889l-4.21 3.157c.473.471.878 1.01 1.201 1.599l4.197-3.148c.477.316 1.048.503 1.663.503 1.656 0 3-1.343 3-3zm-2 0c0 .551-.448 1-1 1s-1-.449-1-1 .448-1 1-1 1 .449 1 1zm3 12.062c1.656 0 3-1.343 3-3s-1.344-3-3-3c-1.281 0-2.367.807-2.797 1.938h-6.283c.047.328.08.66.08 1s-.033.672-.08 1h6.244c.396 1.195 1.509 2.062 2.836 2.062zm-1-3c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.448-1-1zm-20-.062c0 2.761 2.238 5 5 5s5-2.239 5-5-2.238-5-5-5-5 2.239-5 5zm2 0c0-1.654 1.346-3 3-3s3 1.346 3 3-1.346 3-3 3-3-1.346-3-3zm7.939 4.955l4.21 3.157c-.088.282-.149.576-.149.888 0 1.657 1.344 3 3 3s3-1.343 3-3-1.344-3-3-3c-.615 0-1.186.187-1.662.504l-4.197-3.148c-.324.589-.729 1.127-1.202 0.599zm6.061 3.045c0-.551.448-1 1-1s1 .449 1 1-.448 -1-1 1-1-.449-1-1z\"}\r\n                                >\r\n                                    <InputIconExtended \r\n                                        className={formCreateGrouping.redirect.ipAddress !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"IP Address\"}\r\n                                        value={formCreateGrouping.redirect.ipAddress}\r\n                                        name={\"ipAddress\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                    />\r\n                                    <InputIconExtended \r\n                                        className={formCreateGrouping.redirect.port !== \"\" ? \"active\" : \"input\"}\r\n                                        placeholder={\"Port\"}\r\n                                        value={formCreateGrouping.redirect.port}\r\n                                        name={\"port\"}\r\n                                        svgPath=\"M21.698 10.658l2.302 1.342-12.002 7-11.998-7 2.301-1.342 9.697 5.658 9.7-5.658zm-9.7 10.657l-9.697-5.658-2.301 1.343 11.998 7 12.002-7-2.302-1.342-9.7 5.657zm12.002-14.315l-12.002-7-11.998 7 11.998 7 12.002-7z\"\r\n                                        onChange={handleTextChangeFormGrouping}\r\n                                    />\r\n                                </FormCardExtended>\r\n                            )\r\n                        }\r\n                      </DetailsInputCell>\r\n                </WrapperDetailsJob>\r\n\r\n                <WrapperConfirm className={currentStep === 2 ? \"active\" : \"\"}>\r\n                    <WrapperTitle>Confirm</WrapperTitle>\r\n                    \r\n                    <ConfirmTextCell>\r\n                        <ConfirmTextExtended job={\"\"} text={\"Group Name\"} value={formCreateGrouping.groupName} className={\"confirm-text group-name\"}/>\r\n                    </ConfirmTextCell>\r\n                    {\r\n                        formCreateGrouping.pdf.isChecked && (\r\n                            <ConfirmTextCell>\r\n                                <ConfirmTextExtended job={\"PDF\"} text={\"File Name\"} value={formCreateGrouping.pdf.fileName} className={\"confirm-text\"}/>\r\n                                <ConfirmTextExtended job={\"PDF\"} text={\"PDF - File Path\"} value={formCreateGrouping.pdf.filePath} className={\"confirm-text\"}/>\r\n                            </ConfirmTextCell>\r\n                        )\r\n                    }\r\n                    {\r\n                        formCreateGrouping.sendEmail.isChecked && (\r\n                            <ConfirmTextCell>\r\n                                <ConfirmTextExtended job={\"SendEmail\"} text={\"Recipients\"} value={formCreateGrouping.sendEmail.destinationEmails} className={\"confirm-text\"}/>\r\n                                <ConfirmTextExtended job={\"SendEmail\"} text={\"Sender\"} value={formCreateGrouping.sendEmail.email} className={\"confirm-text\"}/>\r\n                                <ConfirmTextExtended job={\"SendEmail\"} text={\"Mail Title\"} value={formCreateGrouping.pdf.fileName} className={\"confirm-text\"}/>\r\n                                <ConfirmTextExtended job={\"SendEmail\"} text={\"Mail Content\"} value={formCreateGrouping.pdf.filePath} className={\"confirm-text\"}/>\r\n                            </ConfirmTextCell>\r\n                        )\r\n                    }\r\n                    {\r\n                        formCreateGrouping.redirect.isChecked && (\r\n                            <ConfirmTextCell>\r\n                                <ConfirmTextExtended job={\"Redirect\"} text={\"IP Address\"} value={formCreateGrouping.redirect.ipAddress} className={\"confirm-text\"}/>\r\n                                <ConfirmTextExtended job={\"Redirect\"} text={\"Port\"} value={formCreateGrouping.redirect.port} className={\"confirm-text\"}/>\r\n                            </ConfirmTextCell>\r\n                        )\r\n                    }\r\n                    {\r\n                        formCreateGrouping.restful.isChecked && (\r\n                            <ConfirmTextCell>\r\n                                <ConfirmTextExtended job={\"RESTFul\"} text={\"Data\"} value={formCreateGrouping.restful.data} className={\"confirm-text email\"}/>\r\n                            </ConfirmTextCell>\r\n                        )\r\n                    }\r\n                    <CheckBoxResultCell>\r\n                        <CheckboxResultExtended \r\n                            className={formCreateGrouping.pdf.isChecked ? \"active\" : \"no-active\"}\r\n                            text={\"PDF\"}\r\n                            type={\"pdf\"}\r\n                        />\r\n                        <CheckboxResultExtended \r\n                            className={formCreateGrouping.sendEmail.isChecked ? \"active\" : \"no-active\"}\r\n                            text={\"Send Email\"}\r\n                            type={\"sendEmail\"}\r\n                        />\r\n                        <CheckboxResultExtended \r\n                            className={formCreateGrouping.restful.isChecked ? \"active\" : \"no-active\"}\r\n                            text={\"RESTFul\"}\r\n                            type={\"restful\"}\r\n                        />\r\n                        <CheckboxResultExtended \r\n                            className={formCreateGrouping.redirect.isChecked ? \"active\" : 'no-active'}\r\n                            text={\"Redirect\"}\r\n                            type={\"redirect\"}\r\n                        />\r\n                        {\r\n                            formCreateGrouping.restful.isChecked && (\r\n                                <CheckboxResultCellWrapper>\r\n                                    <CheckboxResultText \r\n                                        text={\"Redirect - 함수형태\"}\r\n                                        isChecked={isRestfulFunc.value} />\r\n                                    <CheckboxResultText \r\n                                        text={\"Redirect - 로깅여부\"}\r\n                                        isChecked={formCreateGrouping.restful.isLogging} />\r\n                                    <CheckboxResultText \r\n                                        text={\"Redirect - 파일전송여부\"}\r\n                                        isChecked={formCreateGrouping.restful.isSendFile} />\r\n                                </CheckboxResultCellWrapper>\r\n                            )\r\n                        }\r\n                    </CheckBoxResultCell>\r\n                    <CheckboxAgree \r\n                        text={\"Agree Creating Group\"}\r\n                        checked={isAgree}\r\n                        onChange={toggleConfirm}\r\n                    />\r\n                </WrapperConfirm>\r\n            </Screen>\r\n            <CloseBtn onClick={e => { e.preventDefault(); toggleCreateModal(); resetFormCreateGrouping(); isRestfulFunc.onInit();}}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\r\n            </CloseBtn>\r\n            <ButtonCell>\r\n                {\r\n                    currentStep > 0 && <ButtonIcon value={\"이전단계\"} step={\"left\"} onClick={onPreviousStep}/>\r\n                }\r\n                {\r\n                    currentStep < 2 && <ButtonIcon value={\"다음단계\"} step={\"right\"} onClick={onNextStep}/>\r\n                }\r\n                {\r\n                    currentStep === 2 && isAgree && (\r\n                        <ButtonIcon value={\"그룹생성\"} step={\"right\"} onClick={() => handleCreateGroup(currentStep, formCreateGrouping)}/>\r\n                    )\r\n                }\r\n            </ButtonCell>\r\n            THis is Modal\r\n        </Wrapper>\r\n    </Container>\r\n);\r\n\r\nexport default CreateGroupModalPresenter;","import CreateGroupModal from \"./CreateGroupModalContainer\";\r\nexport default CreateGroupModal;","import React from \"react\";\r\nimport CreateGroupModalPresenter from \"./CreateGroupModalPresenter\";\r\nimport { useHomeContext } from \"../../Routes/Home/HomeProvider\";\r\nimport { Grouping } from \"../../Types/types\";\r\n\r\ninterface IProps {\r\n    handleCreateGroup: (currentStep: number, newGrouping: Grouping) => void;\r\n}\r\n\r\nconst CreateGroupModalContainer: React.FC<IProps> = ({\r\n    handleCreateGroup\r\n}) => {  \r\n    const { \r\n        isCreateGroup, \r\n        isAgree,\r\n        errorLoading,\r\n        toggleCreateModal, \r\n        toggleConfirm,\r\n        formCreateGrouping,\r\n        handleChangeFormGrouping,\r\n        handleTextChangeFormGrouping,\r\n        handleChangeRestfulCheckbox,\r\n        resetFormCreateGrouping,\r\n        onNextStep,\r\n        onPreviousStep,\r\n        currentStep,\r\n        isRestfulFunc\r\n    } = useHomeContext();\r\n    // Simple Result\r\n    // const value = useHomeContext(); \r\n    \r\n    return <CreateGroupModalPresenter \r\n        className={isCreateGroup ? \"active\" : \"\"}\r\n        isAgree={isAgree}\r\n        errorLoading={errorLoading}\r\n        toggleCreateModal={toggleCreateModal}\r\n        toggleConfirm={toggleConfirm}\r\n        formCreateGrouping={formCreateGrouping}\r\n        handleChangeFormGrouping={handleChangeFormGrouping}\r\n        handleTextChangeFormGrouping={handleTextChangeFormGrouping}\r\n        handleChangeRestfulCheckbox={handleChangeRestfulCheckbox}\r\n        resetFormCreateGrouping={resetFormCreateGrouping}\r\n        onNextStep={onNextStep}\r\n        onPreviousStep={onPreviousStep}\r\n        currentStep={currentStep}\r\n        handleCreateGroup={handleCreateGroup}\r\n        isRestfulFunc={isRestfulFunc}\r\n        />;\r\n};\r\n\r\nexport default CreateGroupModalContainer;","import { Grouping } from \"../Types/types\";\r\n\r\n/**\r\n *  InitGroupList = () => {}\r\n * \r\n *  @param grouping \r\n *  생성되는 그룹을 인자로 isChecked가\r\n *  false인데 데이터가 들어간 경우,\r\n *  빈값(초기값)으로 대체 한다.\r\n */\r\nconst InitGroupList: Grouping = {\r\n    groupName: \"\",\r\n    pdf: {\r\n        isChecked: false,\r\n        fileName: \"\",\r\n        filePath: \"\"\r\n    },\r\n    restful: {\r\n        isChecked: false,\r\n        isLogging: false,\r\n        isSendFile: false,\r\n        data: \"\"\r\n    },\r\n    sendEmail: {\r\n        isChecked: false,\r\n        email: \"\",\r\n        password: \"\",\r\n        destinationEmails: \"\",\r\n        mailTitle: \"\",\r\n        mailContent: \"\"\r\n    },\r\n    redirect: {\r\n        isChecked: false,\r\n        ipAddress: \"\",\r\n        port: \"\"\r\n    }\r\n};\r\n\r\nexport const nullGrouping = (grouping: Grouping): Grouping => {\r\n    const { pdf, sendEmail, restful, redirect } = grouping;\r\n    let nullGrouping: Grouping = grouping;\r\n    if(!pdf.isChecked) {\r\n        nullGrouping.pdf = {\r\n            ...InitGroupList.pdf\r\n        };\r\n    }\r\n    if(!sendEmail.isChecked) {\r\n        nullGrouping.sendEmail = {\r\n            ...InitGroupList.sendEmail\r\n        };\r\n    }\r\n    if(!restful.isChecked) {\r\n        nullGrouping.restful = {\r\n            ...InitGroupList.restful\r\n        };\r\n    }\r\n    if(!redirect.isChecked) {\r\n        nullGrouping.redirect = {\r\n            ...InitGroupList.redirect\r\n        };\r\n    }\r\n\r\n    return nullGrouping;\r\n};","import React, { useState, useEffect, ComponentProps } from \"react\";\r\nimport { withApollo, WithApolloClient, useApolloClient } from \"react-apollo\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { Grouping } from \"../../Types/types\";\r\nimport { useCreateGrouping, useGetAllGrouping, useHomeContext, useGetGrouping, useUpdateGrouping, useDeleteGrouping, useStartGrouping, useCreateResult } from \"./HomeProvider\";\r\nimport CreateGroupModal from \"../../Components/CreateGroupModal\";\r\nimport { toast } from \"react-toastify\";\r\nimport { GetAllGrouping } from \"../../Types/resolvers\";\r\nimport { RouteProps, RouteComponentProps, RouterProps } from \"react-router\";\r\nimport { nullGrouping } from \"../../Utils/nullGrouping\";\r\n\r\nconst InitGroupList: Grouping = {\r\n    groupName: \"\",\r\n    pdf: {\r\n        isChecked: false,\r\n        fileName: \"\",\r\n        filePath: \"\"\r\n    },\r\n    restful: {\r\n        isChecked: false,\r\n        isLogging: false,\r\n        isSendFile: false,\r\n        data: \"\"\r\n    },\r\n    sendEmail: {\r\n        isChecked: false,\r\n        email: \"\",\r\n        password: \"\",\r\n        destinationEmails: \"\",\r\n        mailTitle: \"\",\r\n        mailContent: \"\"\r\n    },\r\n    redirect: {\r\n        isChecked: false,\r\n        ipAddress: \"\",\r\n        port: \"\"\r\n    }\r\n};\r\n\r\nconst useFetch = (data: Grouping) => {\r\n    const [ loading, setLoading ] = useState(true);\r\n    const [ groupList, setGroupList ] = useState<Array<Grouping>>([InitGroupList]);\r\n    \r\n    useEffect(() => {\r\n        setGroupList([data]);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 300);\r\n    }, []);\r\n    \r\n\r\n    return {\r\n        loading,\r\n        groupList\r\n    };\r\n}\r\n// [{\"pdf\":{\"isChecked\":false,\"fileName\":\"\",\"filePath\":\"\"},\"restful\":{\"isChecked\":false,\"isLogging\":false,\"isSendFile\":false},\"sendEmail\":{\"isChecked\":false,\"email\":\"\",\"password\":\"\",\"mailTitle\":\"\",\"mailContent\":\"\"},\"redirect\":{\"isChecked\":false,\"ipAddress\":\"\",\"port\":0}}]\r\n\r\nconst VerifyCreateGroup = (currentStep: number, group: Grouping) => {\r\n    const { groupName, pdf, sendEmail, redirect, restful } = group;\r\n    \r\n    // 1. groupName.length > 0\r\n    // 2. currentStep = 2\r\n    // 3. isChecked가 하나라도 되어있어야함.\r\n\r\n    // Check [1,2,3]\r\n    const isVerifiedForm: boolean = currentStep === 2 && \r\n        groupName !== \"\" && ( pdf.isChecked || sendEmail.isChecked || redirect.isChecked || restful.isChecked)\r\n\r\n    return isVerifiedForm;\r\n}\r\nconst AvailableGroupName = (newGroupName: Grouping, groups: GetAllGrouping | null): boolean => {\r\n    if(groups) { // 4. groupName 중복되면 안됨.\r\n        const { groups: { groupList }} = groups;\r\n        if(!groupList || groupList.length <= 0) {\r\n            return true;\r\n        } else {\r\n            const findData = groupList.find(group => group.groupName === newGroupName.groupName);\r\n            if(findData) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        return true;\r\n    }\r\n}\r\nconst GetRestfulData = (data: string) => {\r\n    return `(doc) => { \r\n        ${data} \r\n    }`;\r\n}\r\n\r\n//RouteProps\r\ninterface IProps extends RouteComponentProps<any>{\r\n\r\n}\r\nconst HomeContainer: React.FC<IProps> = ({ location, history }) => {\r\n    const { state } = location;\r\n    if((!state || !state.currentFile || state.currentFile === \"\") ||\r\n        (!state || !state.accepted)) {\r\n        history.push(\"/\");\r\n    }\r\n    const { accepted } = state;\r\n    const { cache } = useApolloClient();\r\n    const getGroupList: GetAllGrouping | null = useGetAllGrouping(cache);\r\n    \r\n    // var initGroupList: Grouping = JSON.parse(groups.groupList) === \"\" ? InitGroupList : groups.groupList;\r\n    const { loading, groupList } = useFetch(InitGroupList);\r\n    const { isDetails, toggleCreateModal, onErrorLoading, resetFormCreateGrouping, selectedCardIndex, handleSelectedGrouping, onExeLoading, exeLoading, isRestfulFunc, toggleIsUpdate, selectedGrouping } = useHomeContext();\r\n    const { data: tmpData, mutationCreateGrouping } = useCreateGrouping();\r\n    const { mutationUpdateGrouping } = useUpdateGrouping();\r\n    const { mutationDeleteGrouping } = useDeleteGrouping();\r\n    const { mutationCreateResult } = useCreateResult(history);\r\n    const { mutationStartForGrouping, startForGroupingData } = useStartGrouping(mutationCreateResult, selectedGrouping); \r\n    \r\n    const handleStartForGrouping = () => {\r\n        if(exeLoading) {\r\n            alert(\"실행중입니다!\");\r\n            return;\r\n        }\r\n        onExeLoading();\r\n        setTimeout(() => {\r\n            mutationStartForGrouping({\r\n                variables: {\r\n                    groupId: parseInt(selectedCardIndex),\r\n                    accepted\r\n                }\r\n            });\r\n        }, 1500);\r\n    }\r\n    const handleDeleteGroup = ({ groupName }) => {\r\n        if(exeLoading) {\r\n            alert(\"실행중입니다.\");\r\n            return;\r\n        }\r\n        onExeLoading();\r\n        setTimeout(() => {\r\n            mutationDeleteGrouping({\r\n                variables: {\r\n                    groupName\r\n                }\r\n            });\r\n        }, 1500);\r\n    }\r\n    const handleUpdateGroup = (updatedGroup: Grouping) => {\r\n        const {pdf: {isChecked: pdfChecked}, sendEmail: {isChecked: sendEmailChecked}, redirect: {isChecked: redirectChecked}, restful: {isChecked: restfulChecked}} = updatedGroup;\r\n        const noChecked: boolean = !pdfChecked && !sendEmailChecked && !redirectChecked && !restfulChecked;\r\n        if(noChecked) {\r\n            onErrorLoading();\r\n            toggleIsUpdate(false);\r\n            toast.error(\"Update Error: Please select at least one task\");\r\n            return;\r\n        }\r\n        if(exeLoading) {\r\n            toast.warn(\"Waring: Already running.\");\r\n            return;\r\n        }\r\n        onExeLoading();\r\n        setTimeout(() => {\r\n            let nullUpdatedGroup: Grouping = nullGrouping(updatedGroup);\r\n            handleSelectedGrouping(nullUpdatedGroup);\r\n            toggleIsUpdate();\r\n            mutationUpdateGrouping({\r\n                variables: {\r\n                    updatedGroup: nullUpdatedGroup\r\n                }\r\n            });\r\n        }, 1500);\r\n    }\r\n    const handleCreateGroup = (currentStep, newGrouping: Grouping) => {\r\n        const isVerifyFormStep: boolean = VerifyCreateGroup(currentStep, newGrouping);\r\n        const isAvailableGroupName: boolean =  AvailableGroupName(newGrouping, getGroupList);\r\n        \r\n        if(isVerifyFormStep) {\r\n            const { groupName } = newGrouping;\r\n            if(isAvailableGroupName) {\r\n                if(exeLoading) {\r\n                    alert(\"실행중입니다.\");\r\n                    return;\r\n                }\r\n                onExeLoading();\r\n                setTimeout(() => {\r\n                    // restful의 data를 함수출력으로 변경.\r\n                    if(isRestfulFunc.value) {\r\n                        newGrouping.restful.data = GetRestfulData(newGrouping.restful.data);\r\n                        isRestfulFunc.onInit();\r\n                    }\r\n                    \r\n                    // isChecked가 false인데도 값이 들어가있는경우는 빈값을 넣어두도록 한다.\r\n                    const nullNewGrouping: Grouping = nullGrouping(newGrouping);\r\n                    \r\n                    mutationCreateGrouping({\r\n                        variables: {\r\n                            ...nullNewGrouping\r\n                        }\r\n                    });\r\n                    \r\n                    toast.info(`Success: Create new group '${groupName}'`);\r\n                    resetFormCreateGrouping();\r\n                    toggleCreateModal();\r\n                }, 1500);\r\n                \r\n            } else {\r\n                onErrorLoading();\r\n                toast.error(\"Error: Duplicate group names cannot be used.\")\r\n            }\r\n        } else {\r\n            onErrorLoading();\r\n            toast.error(\"Error: Not Found.\")\r\n        }\r\n    }\r\n    \r\n    return (\r\n            <React.Fragment>\r\n                <HomePresenter \r\n                    loading={loading}\r\n                    isDetails={isDetails}\r\n                    getGroupList={getGroupList}\r\n                    handleUpdateGroup={handleUpdateGroup}\r\n                    handleDeleteGroup={handleDeleteGroup}\r\n                    handleStartForGrouping={handleStartForGrouping}\r\n                    currentFile={state ? state.currentFile : \"\"}\r\n                /> \r\n                <CreateGroupModal \r\n                    handleCreateGroup={handleCreateGroup}\r\n                />\r\n            </React.Fragment>\r\n    )\r\n};\r\nexport default HomeContainer;\r\n// export default withApollo(HomeContainer);\r\n// export default graphql<any>(ALL_GROUPING)(HomeContainer);","import Home from \"./HomeContainer\";\r\nexport default Home;","import { ITheme } from \"../Types/types\";\r\n\r\nexport const theme: ITheme = {\r\n    greenColor: \"#009688\",\r\n    blueColor: \"#2196f3\"\r\n};","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 33.3333%;\r\n    height: 100%;\r\n    flex-flow: column;\r\n    background: url(https://images.unsplash.com/photo-1572583860281-a78290d07ae3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=60);\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n`;\r\nconst Bg = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: .9;\r\n    background: linear-gradient(0deg,rgba(34,40,195,1) 0%,rgba(56,191,219,1) 0%,rgba(45,98,253,1) 66%,rgba(45,98,253,1) 84%);\r\n    width: 100%;\r\n    height: 100%;\r\n;`;\r\nconst Logo = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & svg {\r\n        fill: lightgray;\r\n    }\r\n`;\r\nconst Title = styled.h3`\r\n    position: relative;\r\n    margin: 20px 0;\r\n    text-align: center;\r\n    color: white;\r\n    text-shadow: 0 2px 4px rgba(0,0,0,.2);\r\n`;\r\nconst Content = styled.h5`\r\n    position: relative;\r\n    text-align: center;\r\n    margin: 0;\r\n    color: lightgray;\r\n    text-shadow: 0 2px 4px rgba(0,0,0,.2);\r\n`;\r\ninterface IProps {\r\n    step: number;\r\n}\r\nconst Intro: React.FC<IProps> = ({\r\n    step\r\n}) => (\r\n    <Container>\r\n        <Bg/>\r\n        <Logo>\r\n            {\r\n                step === 0 ? (\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path d=\"M16 18h-8v-1h8v1zm-2 1h-6v1h6v-1zm10-14v13h-4v6h-16v-6h-4v-13h4v-5h16v5h4zm-18 0h12v-3h-12v3zm12 10h-12v7h12v-7zm4-8h-20v9h2v-3h16v3h2v-9zm-1.5 1c-.276 0-.5.224-.5.5s.224.5.5.5.5-.224.5-.5-.224-.5-.5-.5z\"/></svg>\r\n                ) : (\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path d=\"M6 22v-16h16v7.543c0 4.107-6 2.457-6 2.457s1.518 6-2.638 6h-7.362zm18-7.614v-10.386h-20v20h10.189c3.163 0 9.811-7.223 9.811-9.614zm-10 1.614h-5v-1h5v1zm5-4h-10v1h10v-1zm0-3h-10v1h10v-1zm2-7h-19v19h-2v-21h21v2z\"/></svg>        \r\n                )\r\n            }\r\n        </Logo>\r\n        <Title>\r\n            {\r\n                step === 0 ? \"Printer Middleware\" : \"Recent Records\"\r\n            }\r\n        </Title>        \r\n        {\r\n            step === 0 ? (\r\n            <Content>\r\n                It makes it easy to work with<br /> complex documents.\r\n            </Content>\r\n            ) : (\r\n                <Content>\r\n                    You can check the recently executed<br /> document work.\r\n                </Content>\r\n            )\r\n        }\r\n    </Container>\r\n);\r\n\r\nexport default Intro;","import Intro from \"./Intro\";\r\nexport default Intro;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    &:nth-of-type(1) {\r\n        margin-top: 5px;\r\n    }\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    border: 1px solid #dfdfdf;\r\n    background-color: white;\r\n    margin-bottom: 10px;\r\n    box-shadow: 0 1px 2px rgba(0,0,0,.24);\r\n    transition: .3s;\r\n    &:hover {\r\n        box-shadow: 0 2px 4px rgba(0,0,0,.24), 0 3px 6px rgba(0,0,0,.32);\r\n    }\r\n`;\r\nconst Bg = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    transform: scale(0);\r\n    background-color: black;\r\n`;\r\nconst ImgBox = styled.div`\r\n    position: relative;\r\n    z-index: 2;\r\n    width: 40px;\r\n    height: 40px;\r\n    margin-left: 15px;\r\n    &:hover {\r\n        width: 259px;\r\n        padding-bottom: 100%;\r\n        height: 0;\r\n        margin: 0 auto;\r\n        & > div {\r\n            width: 100%;\r\n            height: 100%;\r\n            padding: inherit;\r\n            margin-top: 17px;\r\n            transition: margin .3s;\r\n            // transition: padding-bottom .3s;\r\n        }\r\n        & ~ div {\r\n            &.bg {\r\n                transform: scale(1);\r\n            }\r\n            &:not(.bg) {\r\n                display: none;\r\n                transition: .3s;\r\n                opacity: 0;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst TextBox = styled.div` \r\n    position: relative;\r\n    padding: 5px;\r\n    flex: 3;\r\n    height: 100%;\r\n    padding: 13px;\r\n    padding-left: 10px;\r\n`;\r\ninterface IImg {\r\n    imgPath: string;\r\n}\r\nconst Img = styled.div<IImg>`\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url('${props => props.imgPath}');\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    border-radius: 6px;\r\n    box-shadow: 0 0.5px 2px rgba(0,0,0,.9);\r\n`;\r\nconst No = styled.h5`\r\n    margin: 0;\r\n    color: #838383;\r\n    font-weight: 400;\r\n    font-size: 15px;\r\n`;\r\nconst Title = styled.h3`\r\n    margin: 0;\r\n    margin-top: 8px;\r\n    color: #838383;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n`;\r\nconst Date = styled.h3`\r\n    position: absolute;\r\n    bottom: 14px;\r\n    right: 17px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0;\r\n    font-weight: 400;\r\n    font-size: 10px;\r\n    color: #8f8d8d;\r\n    & svg {\r\n        fill: #539ad3;\r\n        margin-right: 6px;\r\n    }\r\n`;\r\nconst SelectedButton = styled(Link)`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 100%;\r\n    transform: translate(-50%, -50%);\r\n    border: 1px solid #24a7ce;\r\n    padding: 15px;\r\n    border-radius: 50%;\r\n    background-color: #24a7ce;\r\n    transition: .3s;\r\n    & svg {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        fill: white;\r\n        transition: .3s;\r\n    }\r\n    &:hover {\r\n        background: white;\r\n        & svg {\r\n            fill: #24a7ce;\r\n        }\r\n    }\r\n`;\r\n\r\ninterface IProps {\r\n    no: number;\r\n    imgPath: string;\r\n    title: string;\r\n    date: string;\r\n    accepted: number;\r\n}\r\nconst FileItem: React.FC<IProps> = ({\r\n    no,\r\n    imgPath,\r\n    title,\r\n    date,\r\n    accepted\r\n}) => {\r\n    const currentFile: string = title;\r\n    return (\r\n        <Container>\r\n            <ImgBox>\r\n                <Img imgPath={imgPath}/>\r\n            </ImgBox>\r\n            <TextBox>\r\n                <No>No. { no }</No>\r\n                <Title>{ title }</Title>\r\n                <Date>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\"><path d=\"M20 20h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm6 0h-4v4h4v-4zm-6-6h-4v4h4v-4zm16-8v22h-24v-22h3v1c0 1.103.897 2 2 2s2-.897 2-2v-1h10v1c0 1.103.897 2 2 2s2-.897 2-2v-1h3zm-2 6h-20v14h20v-14zm-2-7c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-14 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2z\"/></svg>\r\n                    { date }\r\n                </Date>\r\n                <SelectedButton to={{\r\n                    pathname: \"/home\",\r\n                    state: {\r\n                        currentFile,\r\n                        accepted\r\n                    }\r\n                }}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"9\" height=\"9\" viewBox=\"0 0 24 24\"><path d=\"M7.33 24l-2.83-2.829 9.339-9.175-9.339-9.167 2.83-2.829 12.17 11.996z\"/></svg>\r\n                </SelectedButton>\r\n            </TextBox>\r\n            <Bg className={\"bg\"}/>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FileItem;","import FileItem from \"./FileItem\";\r\nexport default FileItem;","import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_ALL_RESULT = gql`\r\n    {\r\n        result @client {\r\n            resultList {\r\n                ok\r\n                isPdf\r\n                isSendEmail\r\n                isRedirect\r\n                isRestful\r\n                message\r\n                date\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport const DELETE_RESULT = gql`\r\n    mutation deleteResult($index: number) {\r\n        DeleteResult(index: $index) @client \r\n    }\r\n`;\r\nexport const GET_DOCS = gql`\r\n    { \r\n        GetDocs {\r\n            ok\r\n            error\r\n            docs {\r\n                accepted\r\n                title\r\n                preview_path\r\n            }\r\n        }\r\n    }\r\n`;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { IMainContext } from \"../../Types/types\";\r\nimport { DeleteResultMutationVariables, GetDocsQueryResponse } from \"../../Types/resolvers\";\r\nimport { useMutation, useQuery } from \"react-apollo\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DELETE_RESULT, GET_ALL_RESULT, GET_DOCS } from \"./MainQueries\";\r\nimport { ApolloCache } from \"apollo-cache\";\r\n\r\nconst LOAIDNG_TIME = 1000;\r\n\r\nconst InitContext: IMainContext = {\r\n    loading: true,\r\n    step: 0,\r\n    onStep: () => {},\r\n    isDetails: false,\r\n    onToggleDetails: () => {},\r\n    mutationDeleteResult: () => {},\r\n    dataGetDocs: {GetDocs: {ok: false, error: \"\", docs: []}},\r\n    loadingGetDocs: true,\r\n    autoSearch: {checked: false, onChange: () => {}}\r\n};\r\n\r\nconst MainContext: React.Context<IMainContext> = React.createContext<IMainContext>(InitContext);\r\n\r\nconst useMainContext = () => useContext(MainContext);\r\nconst useInput = (initData: boolean) => {\r\n    const [checked, setChecked] = useState<boolean>(initData);\r\n    const onChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        const { target: { checked }} = event;\r\n        setChecked(checked);\r\n    }\r\n    return {\r\n        checked, \r\n        onChange\r\n    };\r\n}\r\nconst GetAllResult = (cache: ApolloCache<any>) => {\r\n    const data: any | null = cache.readQuery({ query: GET_ALL_RESULT });\r\n    return data.result.resultList;\r\n}\r\nconst isPolling = (isPolling: boolean) => {\r\n    if(isPolling) {\r\n        return {\r\n            pollInterval: 5000\r\n        };\r\n    } else {\r\n        return {\r\n            pollInterval: 90000000\r\n        };\r\n    }\r\n};\r\n\r\nconst useMainFetch = (): {value: IMainContext} => {\r\n    \r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [step, setStep] = useState<number>(0);\r\n    const [isDetails, setIsDetails] = useState<boolean>(false);\r\n    const autoSearch = useInput(false);\r\n\r\n    const [mutationDeleteResult] = useMutation<any, DeleteResultMutationVariables>(DELETE_RESULT, {\r\n        onCompleted: data => {\r\n            toast.success(\"최근기록 1건 제거!\");\r\n        },\r\n        \r\n    });\r\n    \r\n    const { data: dataGetDocs, loading: loadingGetDocs } = useQuery<GetDocsQueryResponse, any>(GET_DOCS, {\r\n        partialRefetch: true,\r\n        fetchPolicy: \"cache-and-network\",\r\n        // pollInterval: 10000,\r\n        onCompleted: data => {\r\n            // console.log(\"GetDocs Success: \", data);\r\n        },\r\n        ...isPolling(autoSearch.checked),\r\n        onError: data => {\r\n            console.log(\"GetDocs error: \", data);\r\n        }\r\n    });\r\n\r\n    const onStep = (newStep: number) => {\r\n        setStep(newStep);\r\n    }\r\n    const onToggleDetails = () => {\r\n        setIsDetails(!isDetails);\r\n    }\r\n\r\n    const MainLoading = () => {\r\n        setLoading(false);\r\n        // File 가져오기. - 받은파일 요청 RESTFUL\r\n\r\n        // LocalStorage로부터 최근기록 가져오기\r\n    };\r\n    \r\n    useEffect(() => {\r\n        setTimeout(MainLoading, LOAIDNG_TIME);\r\n\r\n        return () => {\r\n            // ComponentDidMount\r\n        }\r\n    }, []);\r\n    \r\n\r\n    return {\r\n        value: {\r\n            loading,\r\n            step,\r\n            onStep,\r\n            isDetails,\r\n            onToggleDetails,\r\n            mutationDeleteResult,\r\n            loadingGetDocs,\r\n            dataGetDocs,\r\n            autoSearch\r\n        }\r\n    };\r\n}\r\n\r\nconst MainProvider: React.FC<any> = ({\r\n    children\r\n}) => {\r\n    const data = useMainFetch();\r\n    return (\r\n        <MainContext.Provider {...data}>\r\n            {\r\n                children\r\n            }\r\n        </MainContext.Provider>\r\n    )\r\n}\r\n\r\nexport { useMainContext, MainProvider, GetAllResult };","/**\r\n *  GetTime = () => {}\r\n *   \r\n * @param current\r\n *  current = new Date().getTime();\r\n *  실행시킨 시간으로 1970년 1월 1일 0시 0분을\r\n *  기준으로 흐른시간을 문자열로 받는다.\r\n *  (로컬시간의 전체시간값을 밀리초로 나타냄.)\r\n *  \r\n *  다음 우선순위로 리턴됨.\r\n *  1. 하루 경과 존재하면 -> 해당 날짜 00년00월00일 출력.\r\n *  2. 시간 경과 존재하면 -> 경과한 시간 출력.\r\n *  3. 분 경과 존재하면 -> 경과한 분 출력.\r\n *  4. 초 경과 존재하면 -> 경과한 초 출력.\r\n */\r\nexport const getTime = (date: string) => {\r\n    const current = parseInt(date);\r\n    const post = new Date().getTime();\r\n    const time: number = post - current;\r\n    const second: number = parseInt(time / 1000 + \"\");\r\n    const minute: number = parseInt(second / 60 + \"\");\r\n    const hour: number = parseInt(minute / 60 + \"\");\r\n    const day: number = parseInt(hour / 24 + \"\");\r\n    \r\n    // console.log(\"second: \", second);\r\n    // console.log(\"minute: \", minute);\r\n    // console.log(\"hour: \", hour);\r\n    // console.log(\"day: \", day);\r\n\r\n    let result: string = \"0\";\r\n    if(day > 0) {\r\n        result = `${day} days ago`;\r\n    } else if(hour > 0) {\r\n        result = `${hour} hours ago`;\r\n    } else if(minute > 0) {\r\n        result = `${minute} minutes ago`;\r\n    } else if(second > 0) {\r\n        result = `${second} seconds ago`;\r\n    } else {\r\n        result = \"\" // 실행한 날짜입력되도록 하기.\r\n    }\r\n    return result;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport { useMainContext } from \"../../Routes/Main/MainProvider\";\r\n\r\nconst Container = styled.div`\r\n    justify-self: flex-end;\r\n    margin-left: auto;\r\n`;\r\n\r\nconst CheckInput = styled.input`\r\n    position: absolute;\r\n    top: -100px;\r\n    left: -100px\r\n    opacity: 0;\r\n    pointer-events: none;\r\n    width: 0;\r\n    height: 0;\r\n    z-index: -99;\r\n    &:active,\r\n    &:focus {\r\n        outline: none;\r\n        border: 0;\r\n    }\r\n    &:checked {\r\n        & ~ label {\r\n            color: #3988a6;\r\n            & > div {\r\n                border: 1px solid #3988a6;\r\n                & svg {\r\n                    opacity: 1;\r\n                    fill: #3988a6;\r\n                }\r\n            }\r\n            & svg {\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Label = styled.label`\r\n    width: fit-content;\r\n    margin-left: auto;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    color: #939393;\r\n    font-size: 13px;\r\n    transition: .3s;\r\n    justify-content: flex-end;\r\n`;\r\nconst Icon = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 5px;\r\n    border: 1px solid #939393;\r\n    border-radius: 3px;\r\n    transition: .3s;\r\n    & svg {\r\n        transition: .3s;\r\n        opacity: 0;\r\n        fill: #939393;\r\n    }\r\n`;\r\ninterface IProps {\r\n    label: string;\r\n}\r\nconst AutoCheckbox: React.FC<IProps> = ({\r\n    label\r\n}) => {\r\n    const { autoSearch } = useMainContext();\r\n    return (\r\n        <Container>\r\n            <CheckInput type={\"checkbox\"} id={\"input_auto\"} {...autoSearch}  />\r\n            <Label htmlFor={\"input_auto\"}>\r\n                <Icon>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" viewBox=\"0 0 24 24\"><path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\"/></svg>\r\n                </Icon>\r\n                { label }\r\n            </Label>\r\n            \r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default AutoCheckbox;","import AutoCheckbox from \"./AutoCheckbox\";\r\nexport default AutoCheckbox;","import React from \"react\";\r\nimport styled, { keyframes } from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 20px;\r\n    height: 20px;\r\n    border: 1px solid #2196f3;\r\n    border-radius: 50%;\r\n    animation: ${keyframes => Ripple} linear 2s infinite;\r\n    background: linear-gradient(90deg, rgba(22,158,190,1) 0%, rgba(57,55,179,1) 50%, rgba(22,158,190,1) 100%);\r\n    & > .ripple {\r\n        &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            width: 15px;\r\n            height: 15px;\r\n            transform: translate(-50%, -50%);\r\n            border-radius: 50%;\r\n            background-color: #e8ebef;\r\n        }\r\n        & > div {\r\n            position: absolute;\r\n            width: 8px;\r\n            height: 8px;\r\n            left: 50%;\r\n            top: 0;\r\n            transform: translate(-50%, -50%);\r\n            border-radius: 50%;\r\n            background-color: #e8ebef;\r\n            &:nth-of-type(1) {\r\n            }\r\n            &:nth-last-of-type(1) {\r\n                top: 100%;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst Wrapper = styled.div``;\r\nconst Ripple = keyframes`\r\n    0% {\r\n        transform: rotate(0dege);\r\n    }\r\n    100% {\r\n        transform: rotate(-360deg);\r\n    }\r\n`;\r\nconst SpinnerPolling = () => {\r\n    return (\r\n        <Container>\r\n            <Wrapper className=\"ripple\">\r\n                <div></div>\r\n                <div></div>\r\n            </Wrapper>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default SpinnerPolling;","import SpinnerPolling from \"./SpinnerPolling\";\r\nexport default SpinnerPolling;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport RecordTable from \"../RecordTable\";\r\nimport FileItem from \"../FileItem\";\r\nimport { useMainContext } from \"../../Routes/Main/MainProvider\";\r\nimport { getTime } from \"../../Utils/getTime\";\r\nimport AutoCheckbox from \"../AutoCheckbox\";\r\nimport SpinnerPolling from \"../SpinnerPolling\";\r\n\r\nconst Container = styled.div`\r\n    background-color: #e8ebef;\r\n`;\r\nconst Title = styled.h3`\r\n    text-align: center;\r\n    font-weight: 500;\r\n    text-shadow: 0 1px 2px rgba(0,0,0,.12);\r\n    margin-top: 40px;\r\n    margin-bottom: 50px;\r\n    color: #2d72dd;\r\n`;\r\nconst FileBoxScroll = styled.div`\r\n    width: 87%; \r\n    margin: 0 auto;\r\n    max-height: 330px;\r\n    min-height: 200px;\r\n    padding-right: 10px;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n      }\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background: #f1f1f1;\r\n        border-radius: 20px;\r\n    }   \r\n    \r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #24a7ce;\r\n        border-radius: 20px;\r\n        transition: .3s;\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: #57b2e8;\r\n        }\r\n    }\r\n    \r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:active {\r\n        background: ${props => props.theme.blueColor};\r\n        cursor: pointer;\r\n    }\r\n`;\r\nconst FileBox = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-right: 10px;\r\n    padding-left: 5px;\r\n`;\r\n\r\nconst FileItemExtended = styled(FileItem)`\r\n    \r\n`;\r\nconst Empty = styled.div`\r\n    display: block;\r\n    margin: 10px;\r\n    position: relative;\r\n    padding: 50px;\r\n    background-color: white;\r\n    color: #aeaeae;\r\n    font-style: italic;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,.24);\r\n    & svg {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        opacity: .5;\r\n        fill: #dfdfdf;\r\n    }\r\n`;\r\nconst EmptyText = styled.span`\r\n    position: relative;\r\n    z-index: 2;\r\n    text-shadow: 0 1px 1px rgba(0,0,0,.1);\r\n`;\r\nconst TextBar = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n    margin: 0 auto;\r\n    width: 87%;\r\n    padding-bottom: 10px;\r\n`;\r\nconst SearchText = styled.span`\r\n    color: #5c8b96;\r\n    font-size: 12px;\r\n    margin-right: 5px;\r\n`;\r\nconst GetFileImage = (path: string) => {\r\n    \r\n    // rawFile.send(null);\r\n}\r\n\r\nconst ListBox = () => {\r\n    const { dataGetDocs, loadingGetDocs, autoSearch } = useMainContext();\r\n    // if(loadingGetDocs) {\r\n    //     return <div>Loading...</div>\r\n    // }\r\n    \r\n    // const filePath = \"C:/Users/rhkdg/Desktop/project/web/printerApp/server/src/core/src/lib/temp/1111110193126152692214016673154244150.jpg\";\r\n    const filePath = \"localhost/\";\r\n    // C:/Users/rhkdg/Desktop/project/web/printerApp/server/src/core/src/lib/temp/1111110193126152692214016673154244150.jpg\r\n    GetFileImage(filePath);\r\n    // console.log(\"dataGetDocs: \", dataGetDocs);\r\n    return (\r\n        <Container>\r\n            <Title>File List</Title>\r\n            <TextBar>\r\n                {\r\n                    autoSearch.checked && (\r\n                        <>\r\n                            <SearchText>Searching...</SearchText>\r\n                            <SpinnerPolling />\r\n                        </>\r\n                    )\r\n                }\r\n                <AutoCheckbox label={\"auto\"}/>\r\n            </TextBar>\r\n            <FileBoxScroll>\r\n                {\r\n                    (loadingGetDocs || !dataGetDocs) ? (\r\n                            <FileBox>\r\n                                \r\n                            </FileBox>\r\n                        ) : (\r\n                        <>\r\n                            <FileBox>\r\n                            {\r\n                                 dataGetDocs && dataGetDocs.GetDocs.docs.map((doc, key) => (\r\n                                    <FileItemExtended\r\n                                        key={key}\r\n                                        no={key}\r\n                                        title={doc.title}\r\n                                        // imgPath={\"/tmp.png\"}    \r\n                                        accepted={doc.accepted}\r\n                                        imgPath={doc.preview_path}\r\n                                        date={getTime(doc.accepted + \"\")}\r\n                                    />\r\n                                ))\r\n                            }\r\n                            </FileBox>\r\n                            {\r\n                                dataGetDocs && dataGetDocs.GetDocs.docs.length <= 0 && (\r\n                                    <Empty>\r\n                                        <EmptyText>No file request.</EmptyText>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path d=\"M6 22v-16h16v7.543c0 4.107-6 2.457-6 2.457s1.518 6-2.638 6h-7.362zm18-7.614v-10.386h-20v20h10.189c3.163 0 9.811-7.223 9.811-9.614zm-10 1.614h-5v-1h5v1zm5-4h-10v1h10v-1zm0-3h-10v1h10v-1zm2-7h-19v19h-2v-21h21v2z\"/></svg>\r\n                                    </Empty>\r\n                                )\r\n                            }\r\n                        </>\r\n                    )\r\n                }\r\n                \r\n                {/* 파일리스트가 없는경우.... */}\r\n                \r\n                {/* <Empty>\r\n                    <EmptyText>No file request.</EmptyText>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path d=\"M6 22v-16h16v7.543c0 4.107-6 2.457-6 2.457s1.518 6-2.638 6h-7.362zm18-7.614v-10.386h-20v20h10.189c3.163 0 9.811-7.223 9.811-9.614zm-10 1.614h-5v-1h5v1zm5-4h-10v1h10v-1zm0-3h-10v1h10v-1zm2-7h-19v19h-2v-21h21v2z\"/></svg>\r\n                </Empty> */}\r\n            </FileBoxScroll>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ListBox;","import ListBox from \"./ListBox\";\r\nexport default ListBox;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 30px;\r\n    height: 20px;\r\n    border-radius: 30px;\r\n    background-color: white;\r\n    display: flex;\r\n    // overflow: hidden;\r\n`;\r\n\r\nconst ToggleInput = styled.input`\r\n    position: absolute;\r\n    top: -100px;\r\n    left: -100px;\r\n    pointer-events: none;\r\n    opacity: 0;\r\n    &:checked {\r\n        & ~ label {\r\n            // background-color: blue;\r\n            border: 1.5px solid #00bcd4;\r\n            & > div {\r\n                left: 15px;\r\n                background-color: #00bcd4;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst Bar = styled.label`\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1.5px solid #dfdfdf;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n    transition: .3s;\r\n`;\r\nconst Circle = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: #dfdfdf;\r\n    transform: translateY(-50%);\r\n    left: 4px;\r\n    border-radius: 30px;\r\n    transition: .3s;\r\n`;\r\nconst Text = styled.span`\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    right: 110%;\r\n    white-space: nowrap;\r\n    font-size: 10px;\r\n    color: #8b8b8b;\r\n\r\n`;\r\ninterface IProps {\r\n    text: string;\r\n    className: string;\r\n    onChange: () => {}\r\n}\r\nconst ToggleBtn: React.FC<IProps> = ({\r\n    text,\r\n    className,\r\n    onChange\r\n}) => {\r\n    return (\r\n        <Container className={className}>\r\n            <ToggleInput type={\"checkbox\"} id={\"toggle_btn\"} onChange={e => onChange()}/>\r\n            <Bar htmlFor={\"toggle_btn\"}>\r\n                <Circle />\r\n            </Bar>\r\n            <Text>{ text }</Text>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ToggleBtn;","import ToggleBtn from \"./ToggleBtn\";\r\nexport default ToggleBtn;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport ToggleBtn from \"../ToggleBtn\";\r\nimport { useMainContext, GetAllResult } from \"../../Routes/Main/MainProvider\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { useHomeContext } from \"../../Routes/Home/HomeProvider\";\r\nimport { getTime } from \"../../Utils/getTime\";\r\nimport { GroupResult } from \"../../Types/types\";\r\n\r\nconst Container = styled.div`\r\n\r\n`;\r\nconst TableBox = styled.div`\r\n    width: 90%;\r\n    margin: 0 auto;\r\n`;\r\nconst TableScroll = styled.div`\r\n    width: 104%;\r\n    background-color: #e8ebef;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    max-height: 322px;\r\n    box-sizing: content-box;\r\n    padding-right: 8px;\r\n    padding-left: 5px;\r\n    margin-left: -15px\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n      }\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background: #f1f1f1;\r\n        border-radius: 20px;\r\n    }   \r\n    \r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #7c9ac5;\r\n        border-radius: 20px;\r\n        transition: .3s;\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: #57b2e8;\r\n        }\r\n    }\r\n    \r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:active {\r\n        background: ${props => props.theme.blueColor};\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Table = styled.table`\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n    white-space: nowrap;\r\n    text-align: center;\r\n`;\r\nconst Thead = styled.thead``;\r\nconst Tbody = styled.tbody`\r\n   & > tr {\r\n        // border: 1px solid #dfdfdf;\r\n        &:not(:nth-of-type(1)) {\r\n            &:nth-of-type(2n +1) {\r\n                padding-top: 30px;\r\n            }\r\n        }\r\n        &.tmp {\r\n            border: 0;\r\n            & > td {\r\n                padding: 5px;\r\n            }\r\n        }\r\n        &.simple {\r\n            border-bottom: 0;\r\n            background-color: white;\r\n            \r\n            &:not(.active) {\r\n                box-shadow: 0 2px 4px rgba(0,0,0,.24);\r\n                &:hover {\r\n                    transition: .3s;\r\n                    box-shadow: 0 2px 4px rgba(0,0,0,.24), 0 4px 6px rgba(0,0,0,.32);\r\n                }\r\n            }\r\n        }\r\n        &.details {\r\n            border-top: 0;\r\n            height: 0;\r\n        }\r\n        &.active { \r\n            background-color: white;\r\n            & > td {\r\n                display: flex;\r\n                flex-flow: wrap;\r\n                align-items: center;\r\n            }\r\n            &.details {\r\n                border-top: 0;\r\n                height: 0;\r\n                & > .td-msg {\r\n                    font-size: 13px;\r\n                    padding: 10px;\r\n                    opacity: 1;\r\n                    span {\r\n                        transition: .3s;\r\n                        font-size: 11px;\r\n                    }\r\n                }\r\n            }\r\n            & .details-text {\r\n                display: inline-block;\r\n                &.success {\r\n                    // color: #147dff;\r\n                }\r\n                &.fail {\r\n                    // color: #f44336;\r\n                }\r\n            }\r\n        }\r\n   }\r\n`;\r\nconst Tr = styled.tr`\r\n`;\r\nconst Th = styled.th`\r\n    display :none;\r\n    padding: 5px;\r\n    color: ${props => props.theme.blueColor};\r\n`;\r\n\r\nconst Td = styled.td`\r\n    padding: 10px 8px;\r\n    color: #898989;\r\n    font-size: 11px;\r\n    &.td-msg {\r\n        width: 100%;\r\n        font-size: 0;\r\n        span {\r\n            font-size: 0;\r\n        }\r\n        padding: 0;\r\n        transition: .3s;\r\n        opacity: 0;\r\n    }\r\n    &.job {\r\n        text-align: left;\r\n        padding-top: 12px;\r\n        span {\r\n            &:not(:nth-of-type(1)) {\r\n                margin-left: 5px;\r\n            }\r\n        }\r\n    }\r\n    &.icon-ok {\r\n        // padding-top: 16px;\r\n        &.success {\r\n            & > svg {\r\n                fill: #147dff;\r\n            }\r\n        }\r\n        &.fail {\r\n            & > svg {\r\n                fill: #f44336;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst DeleteBtn = styled.button`\r\n    border: 0;\r\n    border-radius: 6px;\r\n    padding: 5px;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    & > svg {\r\n        transition: .3s;\r\n        fill: gray;\r\n    }\r\n    &:focus,\r\n    &:active {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: none;\r\n    }\r\n    &:hover {\r\n        & > svg {\r\n            fill: red;\r\n        }\r\n    }\r\n`;\r\nconst Options = styled.div`\r\n    display: flex;\r\n    width: fit-content;\r\n    margin-left: auto;\r\n    margin-right: 10px;\r\n    opacity: .7;\r\n    margin-top: 10px;\r\n    margin-bottom: 5px;\r\n`;\r\nconst Option = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n    padding-top: 0;\r\n`;\r\nconst OptionText = styled.span`\r\n    color: #9e9e9e;\r\n    font-size: 10px;\r\n    padding-left: 4px;\r\n`;\r\ninterface ITableIconProps {\r\n    bgColor: string;\r\n}\r\nconst TableIcon = styled.span<ITableIconProps>`\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 30px;\r\n    background-color: ${props => props.bgColor};\r\n    fill: white;\r\n    border-radius: 3px;\r\n    box-shadow:  0 2px 4px rgba(0,0,0,.42);\r\n    & > svg {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n`;\r\nconst RecoredBox = styled.div`\r\n    width: 90%;\r\n    margin: 0 auto;\r\n`;\r\nconst ExtendedToggleBtn = styled(ToggleBtn)`\r\n    margin-left: auto;\r\n    margin-right: 20px;\r\n`;\r\nconst Text = styled.span`\r\n    color: #9e9e9e;\r\n    margin-right: 10px;\r\n    display: none;\r\n    color: #4b6771;\r\n    font-style: italic;\r\n`;\r\nconst Msg = styled.span`\r\n    max-width: 200px;\r\n    word-break: break-word;\r\n    white-space: normal;\r\n    text-align: left;\r\n    font-size: 11px;\r\n    &.success {\r\n        color: #147dff;\r\n    }\r\n    &.fail {\r\n        color: #f44336;\r\n    }\r\n`;\r\nconst Empty = styled.div`\r\n    display: block;\r\n    margin: 10px;\r\n    position: relative;\r\n    padding: 50px;\r\n    background-color: white;\r\n    color: #aeaeae;\r\n    font-style: italic;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,.24);\r\n    & svg {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        opacity: .5;\r\n        fill: #dfdfdf;\r\n    }\r\n`;\r\nconst EmptyText = styled.span`\r\n    position: relative;\r\n    z-index: 2;\r\n    text-shadow: 0 1px 1px rgba(0,0,0,.1);\r\n`;\r\n\r\nconst COLOR_PDF: string = \"#009688\";\r\nconst COLOR_SEND_EMAIL: string = \"#c95d5d\"\r\nconst COLOR_RESTFUL: string = \"#3f51b5\"\r\nconst COLOR_REDIRECT: string = \"#bd9210\";\r\n\r\nconst RecordTable = () => {\r\n    const { cache } = useApolloClient();\r\n    const resultList = GetAllResult(cache);\r\n    const { exeLoading, onExeLoading } = useHomeContext();\r\n    const { isDetails, onToggleDetails, mutationDeleteResult } = useMainContext();\r\n    const handleMutationDeleteResult = (index: number) => {\r\n        onExeLoading();\r\n        setTimeout(() => {\r\n            mutationDeleteResult({\r\n                variables: {\r\n                    index\r\n                }\r\n            });\r\n        }, 1500);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                resultList && (\r\n                    <>\r\n                        <ExtendedToggleBtn className={\"extended-btn\"} text={\"보기\"} onChange={onToggleDetails}/>\r\n                        <Options>\r\n                            <Option>\r\n                                <svg fill={COLOR_PDF} xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M11.363 2c4.155 0 2.637 6 2.637 6s6-1.65 6 2.457v11.543h-16v-20h7.363zm.826-2h-10.189v24h20v-14.386c0-2.391-6.648-9.614-9.811-9.614zm4.811 13h-2.628v3.686h.907v-1.472h1.49v-.732h-1.49v-.698h1.721v-.784zm-4.9 0h-1.599v3.686h1.599c.537 0 .961-.181 1.262-.535.555-.658.587-2.034-.062-2.692-.298-.3-.712-.459-1.2-.459zm-.692.783h.496c.473 0 .802.173.915.644.064.267.077.679-.021.948-.128.351-.381.528-.754.528h-.637v-2.12zm-2.74-.783h-1.668v3.686h.907v-1.277h.761c.619 0 1.064-.277 1.224-.763.095-.291.095-.597 0-.885-.16-.484-.606-.761-1.224-.761zm-.761.732h.546c.235 0 .467.028.576.228.067.123.067.366 0 .489-.109.199-.341.227-.576.227h-.546v-.944z\"/></svg>\r\n                                <OptionText style={{color: COLOR_PDF}}>PDF</OptionText>\r\n                            </Option>\r\n                            <Option>\r\n                                <svg fill={COLOR_SEND_EMAIL} xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z\"/></svg>\r\n                                <OptionText style={{color: COLOR_SEND_EMAIL}}>Send Email</OptionText>\r\n                            </Option>\r\n                            <Option>\r\n                                <svg fill={COLOR_RESTFUL} xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M14.666 8.334v3.666l1.463-2.215-1.463-1.451zm-3.092 4.167c.66-.384 1.242-.864 1.758-1.447v1.369c-.445.393-.926.731-1.449 1.018l-.309-.94zm-3.255 2.041c-.652.083-1.57.125-2.319.125v-.97c.688 0 1.551-.037 2.152-.113l.167.958zm2.789-.725l-.036.015c-.586.246-1.22.437-1.91.573l-.167-.958c.655-.131 1.257-.315 1.809-.556l.304.926zm10.892-13.817l-3 11-4.064-3.62 3.9-4.117-5.229 3.614-3.607-.877 12-6zm-3.015 14.779c0 4.546-5.777 9.221-8.221 9.221h-8.764v-22h11.527l-4 2h-5.527v18h5.938c4.155 0 2.638-6 2.638-6 3.349.921 6.003.403 6.003-3.21.28.65.406 1.318.406 1.989z\"/></svg>\r\n                                <OptionText style={{color: COLOR_RESTFUL}}>RESTFul</OptionText>\r\n                            </Option>\r\n                            <Option>\r\n                                <svg fill={COLOR_REDIRECT} xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M20 3c0-1.657-1.344-3-3-3s-3 1.343-3 3c0 .312.061.606.149.889l-4.21 3.157c.473.471.878 1.01 1.201 1.599l4.197-3.148c.477.316 1.048.503 1.663.503 1.656 0 3-1.343 3-3zm-2 0c0 .551-.448 1-1 1s-1-.449-1-1 .448-1 1-1 1 .449 1 1zm3 12.062c1.656 0 3-1.343 3-3s-1.344-3-3-3c-1.281 0-2.367.807-2.797 1.938h-6.283c.047.328.08.66.08 1s-.033.672-.08 1h6.244c.396 1.195 1.509 2.062 2.836 2.062zm-1-3c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.448-1-1zm-20-.062c0 2.761 2.238 5 5 5s5-2.239 5-5-2.238-5-5-5-5 2.239-5 5zm2 0c0-1.654 1.346-3 3-3s3 1.346 3 3-1.346 3-3 3-3-1.346-3-3zm7.939 4.955l4.21 3.157c-.088.282-.149.576-.149.888 0 1.657 1.344 3 3 3s3-1.343 3-3-1.344-3-3-3c-.615 0-1.186.187-1.662.504l-4.197-3.148c-.324.589-.729 1.127-1.202 1.599zm6.061 4.045c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\"/></svg>\r\n                                <OptionText style={{color: COLOR_REDIRECT}}>Redirect</OptionText>\r\n                            </Option>\r\n                        </Options>\r\n                    </>\r\n                )\r\n            }\r\n            <TableBox>\r\n                <TableScroll>\r\n                    {\r\n                        resultList ? (\r\n                            <Table>\r\n                                <Thead>\r\n                                    <Tr>\r\n                                        <Th>No</Th>\r\n                                        <Th>Job</Th>\r\n                                        <Th>Date</Th>\r\n                                        <Th>Setting</Th>\r\n                                    </Tr>\r\n                                </Thead>\r\n                                <Tbody>\r\n                                    {\r\n                                        resultList.map((result: GroupResult, key) => {\r\n                                            return (\r\n                                                <React.Fragment key={key}>\r\n                                                    <Tr className={`${isDetails ? \"active\" : \"\"} simple`}>\r\n                                                        <Td>\r\n                                                            <Text className={\"details-text\"}>No.</Text>\r\n                                                            { key }\r\n                                                        </Td>\r\n                                                        <Td className={\"job\"}>\r\n                                                            <Text className={\"details-text\"}>Job</Text>\r\n                                                            {   result.isPdf && \r\n                                                                    <TableIcon bgColor={COLOR_PDF}>\r\n                                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M11.363 2c4.155 0 2.637 6 2.637 6s6-1.65 6 2.457v11.543h-16v-20h7.363zm.826-2h-10.189v24h20v-14.386c0-2.391-6.648-9.614-9.811-9.614zm4.811 13h-2.628v3.686h.907v-1.472h1.49v-.732h-1.49v-.698h1.721v-.784zm-4.9 0h-1.599v3.686h1.599c.537 0 .961-.181 1.262-.535.555-.658.587-2.034-.062-2.692-.298-.3-.712-.459-1.2-.459zm-.692.783h.496c.473 0 .802.173.915.644.064.267.077.679-.021.948-.128.351-.381.528-.754.528h-.637v-2.12zm-2.74-.783h-1.668v3.686h.907v-1.277h.761c.619 0 1.064-.277 1.224-.763.095-.291.095-.597 0-.885-.16-.484-.606-.761-1.224-.761zm-.761.732h.546c.235 0 .467.028.576.228.067.123.067.366 0 .489-.109.199-.341.227-.576.227h-.546v-.944z\"/></svg>\r\n                                                                    </TableIcon>\r\n                                                            }\r\n                                                            {\r\n                                                                result.isSendEmail &&\r\n                                                                    <TableIcon bgColor={COLOR_SEND_EMAIL}>\r\n                                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z\"/></svg>\r\n                                                                    </TableIcon>\r\n                                                            }\r\n                                                            {\r\n                                                                result.isRestful && \r\n                                                                    <TableIcon bgColor={COLOR_RESTFUL}>\r\n                                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M14.666 8.334v3.666l1.463-2.215-1.463-1.451zm-3.092 4.167c.66-.384 1.242-.864 1.758-1.447v1.369c-.445.393-.926.731-1.449 1.018l-.309-.94zm-3.255 2.041c-.652.083-1.57.125-2.319.125v-.97c.688 0 1.551-.037 2.152-.113l.167.958zm2.789-.725l-.036.015c-.586.246-1.22.437-1.91.573l-.167-.958c.655-.131 1.257-.315 1.809-.556l.304.926zm10.892-13.817l-3 11-4.064-3.62 3.9-4.117-5.229 3.614-3.607-.877 12-6zm-3.015 14.779c0 4.546-5.777 9.221-8.221 9.221h-8.764v-22h11.527l-4 2h-5.527v18h5.938c4.155 0 2.638-6 2.638-6 3.349.921 6.003.403 6.003-3.21.28.65.406 1.318.406 1.989z\"/></svg>\r\n                                                                    </TableIcon>\r\n                                                            }\r\n                                                            {\r\n                                                                result.isRedirect && \r\n                                                                    <TableIcon bgColor={COLOR_REDIRECT}>\r\n                                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M20 3c0-1.657-1.344-3-3-3s-3 1.343-3 3c0 .312.061.606.149.889l-4.21 3.157c.473.471.878 1.01 1.201 1.599l4.197-3.148c.477.316 1.048.503 1.663.503 1.656 0 3-1.343 3-3zm-2 0c0 .551-.448 1-1 1s-1-.449-1-1 .448-1 1-1 1 .449 1 1zm3 12.062c1.656 0 3-1.343 3-3s-1.344-3-3-3c-1.281 0-2.367.807-2.797 1.938h-6.283c.047.328.08.66.08 1s-.033.672-.08 1h6.244c.396 1.195 1.509 2.062 2.836 2.062zm-1-3c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.448-1-1zm-20-.062c0 2.761 2.238 5 5 5s5-2.239 5-5-2.238-5-5-5-5 2.239-5 5zm2 0c0-1.654 1.346-3 3-3s3 1.346 3 3-1.346 3-3 3-3-1.346-3-3zm7.939 4.955l4.21 3.157c-.088.282-.149.576-.149.888 0 1.657 1.344 3 3 3s3-1.343 3-3-1.344-3-3-3c-.615 0-1.186.187-1.662.504l-4.197-3.148c-.324.589-.729 1.127-1.202 1.599zm6.061 4.045c0-.551.448-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\"/></svg>\r\n                                                                    </TableIcon>\r\n                                                            }\r\n                                                        </Td>\r\n                                                        <Td>\r\n                                                            <Text className={\"details-text\"}>DATE</Text>\r\n                                                            { getTime(result.date) }\r\n                                                        </Td>\r\n                                                        <Td className={`icon-ok ${result.ok ? \"success\" : \"fail\"}`}>\r\n                                                            <Text className={`details-text ${result.ok ? \"success\" : \"fail\"}`}>Result</Text>\r\n                                                            {\r\n                                                                result.ok ? \r\n                                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.507 13.941c-1.512 1.195-3.174 1.931-5.506 1.931-2.334 0-3.996-.736-5.508-1.931l-.493.493c1.127 1.72 3.2 3.566 6.001 3.566 2.8 0 4.872-1.846 5.999-3.566l-.493-.493zm-9.007-5.941c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5zm7 0c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5z\"/></svg> :\r\n                                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm.001 14c-2.332 0-4.145 1.636-5.093 2.797l.471.58c1.286-.819 2.732-1.308 4.622-1.308s3.336.489 4.622 1.308l.471-.58c-.948-1.161-2.761-2.797-5.093-2.797zm-3.501-6c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5zm7 0c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5z\"/></svg>\r\n                                                                    // <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" viewBox=\"0 0 24 24\"><path d=\"M21.406 9.558c-1.21-.051-2.87-.278-3.977-.744.809-3.283 1.253-8.814-2.196-8.814-1.861 0-2.351 1.668-2.833 3.329-1.548 5.336-3.946 6.816-6.4 7.401v-.73h-6v12h6v-.904c2.378.228 4.119.864 6.169 1.746 1.257.541 3.053 1.158 5.336 1.158 2.538 0 4.295-.997 5.009-3.686.5-1.877 1.486-7.25 1.486-8.25 0-1.648-1.168-2.446-2.594-2.506zm-17.406 10.442h-2v-8h2v8zm15.896-5.583s.201.01 1.069-.027c1.082-.046 1.051 1.469.004 1.563l-1.761.099c-.734.094-.656 1.203.141 1.172 0 0 .686-.017 1.143-.041 1.068-.056 1.016 1.429.04 1.551-.424.053-1.745.115-1.745.115-.811.072-.706 1.235.109 1.141l.771-.031c.822-.074 1.003.825-.292 1.661-1.567.881-4.685.131-6.416-.614-2.239-.965-4.438-1.934-6.959-2.006v-6c3.264-.749 6.328-2.254 8.321-9.113.898-3.092 1.679-1.931 1.679.574 0 2.071-.49 3.786-.921 5.533 1.061.543 3.371 1.402 6.12 1.556 1.055.059 1.024 1.455-.051 1.584l-1.394.167s-.608 1.111.142 1.116z\"/></svg> :\r\n                                                                    // <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" viewBox=\"0 0 24 24\"><path d=\"M24 11.936c0-1-.986-6.373-1.486-8.25-.714-2.689-2.471-3.686-5.009-3.686-2.283 0-4.079.617-5.336 1.158-2.05.883-3.791 1.519-6.169 1.746v-.904h-6v12h6v-.73c2.454.585 4.852 2.066 6.4 7.402.483 1.66.972 3.328 2.833 3.328 3.448 0 3.005-5.531 2.196-8.814 1.106-.466 2.767-.692 3.977-.744 1.426-.06 2.594-.858 2.594-2.506zm-20 .064h-2v-8h2v8zm15.755-1.302l1.394.167c1.075.129 1.105 1.525.051 1.584-2.749.154-5.06 1.013-6.12 1.556.43 1.748.92 3.463.92 5.534 0 2.505-.781 3.666-1.679.574-1.993-6.859-5.057-8.364-8.321-9.113v-6c2.521-.072 4.72-1.041 6.959-2.005 1.731-.745 4.849-1.495 6.416-.614 1.295.836 1.114 1.734.292 1.661l-.771-.032c-.815-.094-.92 1.068-.109 1.141 0 0 1.321.062 1.745.115.976.123 1.028 1.607-.04 1.551-.457-.024-1.143-.041-1.143-.041-.797-.031-.875 1.078-.141 1.172 0 0 .714.005 1.761.099s1.078 1.609-.004 1.563c-.868-.037-1.069-.027-1.069-.027-.75.005-.875 1.028-.141 1.115z\"/></svg>\r\n                                                            }\r\n                                                        </Td>\r\n                                                        <Td>\r\n                                                            <Text className={\"details-text\"}>Delete</Text>\r\n                                                            <DeleteBtn disabled={exeLoading} onClick={e => handleMutationDeleteResult(key)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M3 6v18h18v-18h-18zm5 14c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4-18v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712z\"/></svg></DeleteBtn>\r\n                                                        </Td>\r\n                                                        \r\n                                                    </Tr>\r\n                                                    <Tr className={`${isDetails ? \"active\" : \"\"} details`}>\r\n                                                        <Td className={\"td-msg\"} colSpan={4}>\r\n                                                            <Text className={`details-text ${result.ok ? \"success\" : \"fail\"}`}>Message</Text>\r\n                                                            <Msg className={result.ok ? \"success\" : \"fail\"}>{ result.message }</Msg>\r\n                                                        </Td>\r\n                                                    </Tr>\r\n                                                    <Tr className={\"tmp\"}>\r\n                                                        <Td></Td>\r\n                                                    </Tr>\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        })\r\n                                    } \r\n                                </Tbody>\r\n                            </Table>\r\n                        ) : (\r\n                            <Empty>\r\n                                <EmptyText>No recent record exists.</EmptyText>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path d=\"M6 22v-16h16v7.543c0 4.107-6 2.457-6 2.457s1.518 6-2.638 6h-7.362zm18-7.614v-10.386h-20v20h10.189c3.163 0 9.811-7.223 9.811-9.614zm-10 1.614h-5v-1h5v1zm5-4h-10v1h10v-1zm0-3h-10v1h10v-1zm2-7h-19v19h-2v-21h21v2z\"/></svg>\r\n                            </Empty>\r\n                        )\r\n                    }\r\n                </TableScroll>\r\n            </TableBox>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default RecordTable","import RecordTable from \"./RecordTable\";\r\nexport default RecordTable;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport RecordTable from \"../RecordTable\";\r\n\r\nconst Container = styled.div`\r\n    background-color: #e8ebef;\r\n`;\r\nconst Title = styled.h3`\r\n    text-align: center;\r\n    font-weight: 500;\r\n    text-shadow: 0 1px 2px rgba(0,0,0,.12);\r\n    margin-top: 40px;\r\n    margin-bottom: 50px;\r\n    color: #2d72dd;\r\n`;\r\nconst RecordBox: React.FC<any> = ({\r\n}) => {\r\n    return (\r\n        <Container>\r\n            <Container>\r\n                <Title>Recent Records</Title>\r\n                <RecordTable />\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RecordBox;","import RecordBox from \"./RecordBox\";\r\nexport default RecordBox;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport Spinner from \"../../Components/Spinner\";\r\nimport Intro from \"../../Components/Intro\";\r\nimport ListBox from \"../../Components/ListBox\";\r\nimport RecordBox from \"../../Components/RecordBox\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nconst SpinnerExtended = styled(Spinner)`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\nconst Light = styled.div`\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 50%;\r\n    width: 90px;\r\n    height: 90px;\r\n    transform: translateX(-50%);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & svg{\r\n        fill: #ffc107;\r\n        transform: rotate(180deg);\r\n    }\r\n`;\r\nconst LightContainer = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 150%;\r\n    height: 150%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: rgba(250,250,250, .7);\r\n    border-radius: 50%;\r\n`;\r\nconst LightOne = styled(LightContainer)`\r\n    opacity: .9;  \r\n    width: 30%;\r\n    height: 30%;\r\n`;\r\nconst LightTwo = styled(LightContainer)`\r\n    opacity: .7;\r\n    width: 60%;\r\n    height: 60%;\r\n`;\r\nconst LightThree = styled(LightContainer)`\r\n    opacity: .5;\r\n    width: 90%;\r\n    height: 90%;\r\n    // background-color: rgba(250,250,250,.54);\r\n`;\r\nconst LightFour = styled(LightContainer)`\r\n    opacity: .3;\r\n    width: 120%;\r\n    height: 120%;\r\n    // background-color: rgba(250,250,250,.44);\r\n`;\r\nconst LightFive = styled(LightContainer)`\r\n    opacity: .1;\r\n    // background-color: rgba(250,250,250,.24);\r\n`;\r\nconst Box = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 750px;\r\n    max-height: 500px;\r\n    background-color: white;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.24), 0 3px 6px rgba(0,0,0,.32);\r\n    overflow: hidden;\r\n`;\r\ninterface ISlideScreen {\r\n    step: number;\r\n}\r\nconst SlideScreen = styled.div<ISlideScreen>`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    left: -${props => props.step * 50}%;\r\n    width: 150%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-flow: row;\r\n    transition: .5s;\r\n    // transition-delay: .1s;\r\n    transition-timing-function: ease-in-out;\r\n    & > div {\r\n        flex: 1;\r\n        &.screen {\r\n            & > div {\r\n                &:nth-of-type(${props => props.step + 1}) {\r\n                    opacity: 1;\r\n                    top: 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst Screen = styled.div`\r\n    position: relative;\r\n    // background: linear-gradient(180deg,rgba(81,102,100,.1) 0%,rgba(13,37,34,.5) 100%);\r\n    height: 100%;\r\n    & > div {\r\n        opacity: 0;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        left: 0;\r\n        top: 0;\r\n        transition: opacity .5s, top .4s;\r\n        &:nth-of-type(1) {\r\n            top: -100%;\r\n        }\r\n        &:nth-of-type(2) {\r\n            top: 100%;\r\n        }\r\n    }\r\n`;\r\n\r\nconst GoBtn = styled.button`\r\n    position: absolute;\r\n    bottom: 10px\r\n    left: 135px;\r\n    cursor: pointer;\r\n    padding: 10px;\r\n    color: #61f8ff;\r\n    border: none;\r\n    background-color: inherit;\r\n    transition: .3s;\r\n    &:active,\r\n    &:focus { \r\n        border: none;\r\n        outline: none;\r\n    }\r\n    &:hover {\r\n        color: white;\r\n    }\r\n`;\r\nconst GoRecordBtn = styled(GoBtn)`\r\n    \r\n\r\n`;\r\nconst GoListBtn = styled(GoBtn)`\r\n    left: auto;\r\n    right: 158px;\r\n`;\r\n\r\n\r\n{/* <Light>\r\n                            <LightOne /> \r\n                            <LightTwo /> \r\n                            <LightThree /> \r\n                            <LightFour /> \r\n                            <LightFive /> \r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M14 19h-4c-.276 0-.5.224-.5.5s.224.5.5.5h4c.276 0 .5-.224.5-.5s-.224-.5-.5-.5zm0 2h-4c-.276 0-.5.224-.5.5s.224.5.5.5h4c.276 0 .5-.224.5-.5s-.224-.5-.5-.5zm.25 2h-4.5l1.188.782c.154.138.38.218.615.218h.895c.234 0 .461-.08.615-.218l1.187-.782zm3.75-13.799c0 3.569-3.214 5.983-3.214 8.799h-1.989c-.003-1.858.87-3.389 1.721-4.867.761-1.325 1.482-2.577 1.482-3.932 0-2.592-2.075-3.772-4.003-3.772-1.925 0-3.997 1.18-3.997 3.772 0 1.355.721 2.607 1.482 3.932.851 1.478 1.725 3.009 1.72 4.867h-1.988c0-2.816-3.214-5.23-3.214-8.799 0-3.723 2.998-5.772 5.997-5.772 3.001 0 6.003 2.051 6.003 5.772zm4-.691v1.372h-2.538c.02-.223.038-.448.038-.681 0-.237-.017-.464-.035-.69h2.535zm-10.648-6.553v-1.957h1.371v1.964c-.242-.022-.484-.035-.726-.035-.215 0-.43.01-.645.028zm-3.743 1.294l-1.04-1.94 1.208-.648 1.037 1.933c-.418.181-.822.401-1.205.655zm10.586 1.735l1.942-1.394.799 1.115-2.054 1.473c-.191-.43-.423-.827-.687-1.194zm-3.01-2.389l1.038-1.934 1.208.648-1.041 1.941c-.382-.254-.786-.473-1.205-.655zm-10.068 3.583l-2.054-1.472.799-1.115 1.942 1.393c-.264.366-.495.763-.687 1.194zm13.707 6.223l2.354.954-.514 1.271-2.425-.982c.21-.397.408-.812.585-1.243zm-13.108 1.155l-2.356 1.06-.562-1.251 2.34-1.052c.173.433.371.845.578 1.243zm-1.178-3.676h-2.538v-1.372h2.535c-.018.226-.035.454-.035.691 0 .233.018.458.038.681z\"/></svg>\r\n                        </Light> */}\r\n\r\n\r\ninterface IProps {\r\n    loading: boolean;\r\n    onStep: (newStep: number) => {};\r\n    step: number;\r\n}\r\n\r\nconst MainPresenter: React.FC<IProps> = ({\r\n    loading,\r\n    onStep,\r\n    step\r\n}) => {\r\n    return (\r\n        <Container>\r\n            {\r\n                loading ? <SpinnerExtended /> :\r\n                (\r\n                    <Box>\r\n                        {/* 1. 해야할 리스트를 보여주는 ListBox. */}\r\n                        {/* 2. 최근 실행항목 확인하기. */}\r\n                        <SlideScreen step={step}>\r\n                            <Intro step={0}/>\r\n                            <Screen className={\"screen\"}>\r\n                                <ListBox/>\r\n                                <RecordBox />\r\n                            </Screen>\r\n                            <Intro step={1}/>\r\n                            {\r\n                                step === 0 && <GoRecordBtn onClick={e => onStep(1)}>Recent results</GoRecordBtn>\r\n                            }\r\n                            {\r\n                                step === 1 && <GoListBtn onClick={e => onStep(0)}>Main</GoListBtn>\r\n                            }\r\n                        </SlideScreen>\r\n                    </Box>\r\n                )\r\n            }\r\n        </Container>\r\n    )\r\n};\r\n\r\n\r\nexport default MainPresenter;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import styled from \"../../Styles/typed-components\";\r\n// import MenuItem from \"../../Components/MenuItem\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Spinner from \"../../Components/Spinner\";\r\n\r\n// const Container = styled.div`\r\n//     width: 100%;\r\n//     height: 100vh;\r\n//     display: flex;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//     &.active {\r\n//         & > div {\r\n//             transform: scale(1);\r\n//             opacity: 1;\r\n//             pointer-events: auto;\r\n//             height: auto;\r\n//         }\r\n//     }\r\n// `;\r\n// const Wrapper = styled.div`\r\n//     min-width: 400px;\r\n//     height: 0;\r\n//     max-height: 900px;\r\n//     pointer-events: none;\r\n//     transform: scale(.3);\r\n//     opacity: 0;\r\n//     transition: .3s;\r\n//     transition-timing-function: ease-in-out;\r\n// `;\r\n\r\n// const NavigationMenu = styled.div`\r\n//     position: relative;\r\n//     width: 100%;\r\n//     height: 100%;\r\n//     box-shadow: 0 2px 4px rgba(0,0,0,.24), 0 6px 12px rgba(0,0,0,.42);\r\n//     border-radius: 1px;\r\n//     overflow: hidden;\r\n// `;\r\n// const MenuHeader = styled.div`\r\n//     position: relative;\r\n//     width: 100%;\r\n//     display: flex;\r\n//     justify-content: space-between;\r\n//     align-items: center;\r\n//     padding: 15px 10px;\r\n//     padding-left: 100px;\r\n//     font-size: 16px;\r\n//     // background-color: rgba(250,250,250,.2);\r\n//     background-color: #438cb5;\r\n//     color: white;\r\n//     box-shadow: 0 2px 4px rgba(0,0,0,.22), 0 4px 6px rgba(0,0,0,.32);\r\n//     text-shadow: 0 2px 2px rgba(0,0,0,.24);\r\n//     & svg {\r\n//         // fill: darkorange;\r\n//         fill: white;\r\n//     }\r\n// `;\r\n// const HeaderText = styled.h3`\r\n//     font-weight: 400;\r\n//     margin: 0;\r\n// `;\r\n// const HeaderIcon = styled.div`\r\n//     position: absolute;\r\n//     top: 50%;\r\n//     left: 28px;\r\n//     transform: translateY(-50%);\r\n//     display: flex;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//     padding: 5px;\r\n//     & svg {\r\n\r\n//     }\r\n// `;\r\n// const MenuScreen = styled.div`\r\n//     width: 100%;\r\n//     // height: 500px;\r\n//     height: auto;\r\n//     max-height: 634px;\r\n//     overflow: auto;\r\n//     // background: linear-gradient(0deg, rgba(184,239,255,1) 0%, rgba(11,185,171,1) 100%);\r\n//     background-color: rgba(0,0,0,.2);\r\n//     // background: linear-gradient(0deg, rgba(42,50,81,1) 0%, rgba(61,74,126,1) 100%);\r\n\r\n//     ::-webkit-scrollbar {\r\n//         width: 5px;\r\n//         border-radius: 20px;\r\n//     } \r\n//     ::-webkit-scrollbar-track {\r\n//         // background-color: #bab9b6;\r\n//         background: linear-gradient(0deg, rgba(34,40,195,1) 0%, rgba(121,184,204,1) 0%, rgba(232,141,181,1) 0%, rgba(206,25,144,1) 56%);\r\n//         background: linear-gradient(90deg, rgba(60,87,147,1) 0%, rgba(78,236,151,1) 0%, rgba(29,214,194,1) 45%, rgba(18,191,211,1) 100%);\r\n//         background: radial-gradient(circle, rgba(92,157,221,1) 50%, rgba(163,226,247,1) 100%);\r\n//         border-radius: 20px;\r\n//     }\r\n   \r\n//     ::-webkit-scrollbar-thumb {\r\n//         border-radius: 20px;\r\n//         background-color: rgba(0, 0, 0, 0.2); \r\n//         &:active {\r\n//             background-color: black;\r\n//         }\r\n//     } \r\n   \r\n//     ::-webkit-scrollbar-button {\r\n//         // border-radius: 20px;\r\n//         // height:2px;\r\n//         // background-color: #7c2929;\r\n//     } \r\n   \r\n//     ::-webkit-scrollbar-corner {\r\n//         background-color: black;\r\n//     } \r\n// `;\r\n// const SpinnerExtended = styled(Spinner)`\r\n//     position: absolute;\r\n//     top: 50%;\r\n//     left: 50%;\r\n//     transform: translate(-50%, -50%);\r\n// `;\r\n// const MenuItemExtended = styled(MenuItem)`\r\n    \r\n// `;\r\n// interface IProps {\r\n//     loading: boolean\r\n// }\r\n\r\n// const MainPresenter: React.FC<IProps> = ({\r\n//     loading\r\n// }) => (\r\n//     <Container className={loading ? \"main-page\" : \"active\"}>\r\n//         {\r\n//             loading && <SpinnerExtended/>\r\n//         }\r\n//         <Wrapper>\r\n//             <NavigationMenu>\r\n//                 <MenuHeader>\r\n//                     <HeaderText>PROFILE</HeaderText>\r\n//                     <HeaderIcon>\r\n//                         <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M19.757 20.171c-.791.524-1.739.829-2.757.829-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.018-.305 1.966-.829 2.757l2.829 2.829-1.414 1.414-2.829-2.829zm-7.654.829h-12.103v-20h7c1.695 1.942 2.371 3 4 3h11v7.103c-.574-.586-1.25-1.072-2-1.428v-3.675h-9c-2.339 0-3.537-1.388-4.917-3h-4.083v16h8.675c.356.75.842 1.426 1.428 2zm4.897-8c1.656 0 3 1.344 3 3s-1.344 3-3 3-3-1.344-3-3 1.344-3 3-3z\"/></svg>\r\n//                     </HeaderIcon>\r\n//                 </MenuHeader>\r\n//                 <MenuScreen>\r\n//                     <Link to={{\r\n//                         pathname: \"/home\",\r\n//                         state: {\r\n//                             currentFile: \"test\"\r\n//                         }\r\n//                     }}\r\n                    \r\n//                     > \r\n//                         <MenuItemExtended\r\n//                         className={\"item--set\"}\r\n//                         no={1}\r\n//                         title={\"Herry Wood\"}\r\n//                         date={\"19-03-22\"}\r\n//                         imgPath={\"/tmp.PNG\"}\r\n//                         />\r\n//                     </Link>\r\n                    \r\n//                     <MenuItemExtended \r\n//                     className={\"item--Test\"}\r\n//                     no={2}\r\n//                     title={\"Herry Wood\"}\r\n//                     date={\"19-03-22\"}\r\n//                     imgPath={\"/tmp.PNG\"}\r\n//                     />\r\n//                     <MenuItemExtended \r\n//                     className={\"item--set\"}\r\n//                     no={3}\r\n//                     title={\"Herry Wood\"}\r\n//                     date={\"19-03-22\"}\r\n//                     imgPath={\"/tmp.PNG\"}\r\n//                     />\r\n//                     <MenuItemExtended \r\n//                     className={\"item--set\"}\r\n//                     no={4}\r\n//                     title={\"Herry Wood\"}\r\n//                     date={\"19-03-22\"}\r\n//                     imgPath={\"/tmp.PNG\"}\r\n//                     />\r\n//                     <MenuItemExtended \r\n//                     className={\"item--set\"}\r\n//                     no={5}\r\n//                     title={\"Herry Wood\"}\r\n//                     date={\"19-03-22\"}\r\n//                     imgPath={\"/tmp.PNG\"}\r\n//                     />\r\n//                     <MenuItemExtended \r\n//                     className={\"item--set\"}\r\n//                     no={1}\r\n//                     title={\"Herry Wood\"}\r\n//                     date={\"19-03-22\"}\r\n//                     imgPath={\"/tmp.PNG\"}\r\n//                     />\r\n//                     <MenuItemExtended \r\n//                     className={\"item--set\"}\r\n//                     no={1}\r\n//                     title={\"Herry Wood\"}\r\n//                     date={\"19-03-22\"}\r\n//                     imgPath={\"/tmp.PNG\"}\r\n//                     />\r\n//                     <MenuItemExtended \r\n//                     className={\"item--set\"}\r\n//                     no={1}\r\n//                     title={\"Herry Wood\"}\r\n//                     date={\"19-03-22\"}\r\n//                     imgPath={\"/tmp.PNG\"}\r\n//                     />\r\n//                     <MenuItemExtended \r\n//                     className={\"item--set\"}\r\n//                     no={1}\r\n//                     title={\"Herry Wood\"}\r\n//                     date={\"19-03-22\"}\r\n//                     imgPath={\"/tmp.PNG\"}\r\n//                     />\r\n//                 </MenuScreen>\r\n//             </NavigationMenu>\r\n//         </Wrapper>\r\n        \r\n//     </Container>\r\n// );\r\n\r\n// export default MainPresenter;","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MainPresenter from \"./MainPresenter\";\r\nimport { useMainContext, MainProvider } from \"./MainProvider\";\r\n\r\nconst MainContainer = React.memo( ()=> {\r\n    const { loading, onStep, step } = useMainContext();\r\n    return (\r\n        <MainPresenter \r\n            loading={loading} \r\n            onStep={onStep} \r\n            step={step}\r\n        />\r\n    )\r\n});\r\nconst Main = () => {\r\n    return (\r\n        <MainProvider>\r\n            <MainContainer/>\r\n        </MainProvider>\r\n    );\r\n};\r\n\r\nexport default Main;","import Main from \"./MainContainer\";\r\nexport default Main;","import React from \"react\";\r\nimport styled from \"../../Styles/typed-components\";\r\nimport { useHomeContext } from \"../Home/HomeProvider\";\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 0;\r\n    height: 5px;\r\n    background: linear-gradient(34deg, rgba(190,22,185,1) 0%, rgba(179,55,57,1) 46%, rgba(175,146,8,1) 90%);\r\n    &.active {\r\n        width: 100%;\r\n        transition: 1.2s;\r\n    }\r\n`;\r\n\r\nconst LoadingProgressbar = () => {\r\n    const { exeLoading } = useHomeContext();\r\n    return <Container className={exeLoading ? \"active\" : \"\"} />\r\n};\r\n\r\nexport default LoadingProgressbar;","import React from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"./Routes/Home\";\nimport { ThemeProvider } from \"./Styles/typed-components\";\nimport { theme } from \"./Styles/theme\";\nimport { ProvideHome } from \"./Routes/Home/HomeProvider\";\nimport Main from \"./Routes/Main\";\nimport LoadingProgressbar from \"./Routes/LoadingProgressbar\";\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <BrowserRouter>\n      <ProvideHome>\n        <AppPresenter />\n        <LoadingProgressbar />  \n      </ProvideHome>\n    </BrowserRouter>\n  </ThemeProvider>\n)\n\nconst AppPresenter: React.FC<any> = () => (\n  <Switch>\n    <Route path={\"/\"} exact={true} component={Main}/>\n    <Route path={\"/home\"} exact={true} component={Home}/>\n    <Redirect from={\"*\"} to={\"/\"}/>\n  </Switch>\n);\n\nexport default App;","//.2\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { ApolloLink, concat, Operation, split } from \"apollo-link\";\r\nimport { InMemoryCache, HttpLink } from \"apollo-boost\";\r\nimport { Grouping, GroupResult } from \"./Types/types\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport { ApolloCache } from \"apollo-cache\";\r\n\r\n// function getGroupList() {\r\n//     return JSON.stringify(localStorage.getItem(\"X-GROUPING\"));\r\n// }\r\n\r\nconst httpLink = new HttpLink({ uri: \"http://localhost:4000/appGraphql\"});\r\nconst middlewareLink = new ApolloLink((operation: Operation, forward: any) => {\r\n    // console.log(\"MiddleWares: \", JSON.stringify(localStorage.getItem('X-GROUPING')) || \"\");\r\n    const token = localStorage.getItem('X-GROUPING');\r\n    // console.log(\"TOKEN: \", token);\r\n    operation.setContext({\r\n        headers: {\r\n            \"X-GROUPING\": token\r\n        }\r\n    });\r\n    return forward(operation);\r\n});\r\n\r\nconst cache = new InMemoryCache();\r\nconst link = middlewareLink.concat(httpLink);\r\n\r\n// const link = new HttpLink({ uri: \"http://localhost:4000/appGraphql\"});\r\n\r\nconst getCacheData = () => {\r\n    try {\r\n        const groupList = JSON.parse(localStorage.getItem(\"X-GROUPING\") || \"\");\r\n        return groupList;\r\n    } catch(error) {\r\n        return null;\r\n    } \r\n}\r\nconst getCacheResultData = () => {\r\n    try {\r\n        const allResult = JSON.parse(localStorage.getItem(\"X-RESULT\") || \"\");\r\n        return allResult; \r\n    } catch(error) {\r\n        return null;\r\n    }\r\n}\r\n\r\ncache.writeData({\r\n    data: {\r\n        groups: {\r\n            __typename: \"Groups\",\r\n            groupList: getCacheData()\r\n        },\r\n        result: {\r\n            __typename: \"Result\",\r\n            resultList: getCacheResultData()\r\n        }\r\n    }\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n    cache,\r\n    link,\r\n    defaultOptions: { \r\n        watchQuery: {\r\n            fetchPolicy: 'cache-and-network'\r\n        },\r\n        // query: GET_ALL_GROUPING\r\n    },\r\n    resolvers: {\r\n        Query: {\r\n            GetGrouping: (_, { index }, { cache }) => {\r\n                const groups: Grouping[] | null = JSON.parse(localStorage.getItem(\"X-GROUPING\") || \"\");\r\n                if(groups) {\r\n                    const group = groups.find((group, key) => {\r\n                        return key === index;\r\n                    })\r\n                    return group;\r\n                } \r\n            }\r\n        },\r\n        Mutation: {\r\n            CreateGrouping: (_, data: Grouping, { cache }) => {\r\n                 \r\n                const x_grouping = localStorage.getItem(\"X-GROUPING\");\r\n                \r\n                const groupList: Array<any> = x_grouping ? JSON.parse(x_grouping) : [];\r\n                    const { groupName, pdf, redirect, restful, sendEmail } = data;\r\n                    const definedData = {\r\n                        __typename: \"GroupItem\",\r\n                        groupName,\r\n                        pdf: {\r\n                            __typename: \"ItemPDF\",\r\n                            ...pdf\r\n                        },\r\n                        sendEmail: {\r\n                            __typename: \"ItemSendEmail\",\r\n                            ...sendEmail\r\n                        },\r\n                        redirect: {\r\n                            __typename: \"ItemRedirect\",\r\n                            ...redirect\r\n                        },\r\n                        restful: {\r\n                            __typename: \"ItemRestful\",\r\n                            ...restful\r\n                        } \r\n                    };\r\n                    groupList.push(definedData);\r\n                    localStorage.setItem(\"X-GROUPING\", JSON.stringify(groupList));\r\n                    const {} = groupList;\r\n                    cache.writeData({\r\n                        data: {\r\n                            groups: {\r\n                                __typename: \"Groups\",\r\n                                groupList: groupList.map(group => group)\r\n                            }\r\n                        }\r\n                    });\r\n                    return data;\r\n                \r\n                \r\n                // const groups = JSON.parse(`\"${x_grouping}\"`);\r\n                // console.log(\" Current Groups: \", groups);\r\n                // cache.writeData({\r\n                //     data: {\r\n                //         ...data\r\n                //     }\r\n                // });\r\n                \r\n                return data;\r\n            },\r\n            UpdateGrouping: (_, {updatedGroup}: {updatedGroup: Grouping}, { cache }) => {\r\n                const { groupName } = updatedGroup;\r\n                const groups = JSON.parse(localStorage.getItem(\"X-GROUPING\") || \"\");\r\n                if(groups) {\r\n                    const newGroups = groups.map(group => {\r\n                        if(group.groupName === groupName) {\r\n                            return {\r\n                                __typename: \"GroupItem\",\r\n                                ...group,\r\n                                pdf: {\r\n                                    ...group.pdf,\r\n                                    ...updatedGroup.pdf\r\n                                },\r\n                                sendEmail: {\r\n                                    ...group.sendEmail,\r\n                                    ...updatedGroup.sendEmail\r\n                                },\r\n                                redirect: {\r\n                                    ...group.redirect,\r\n                                    ...updatedGroup.redirect\r\n                                },\r\n                                restful: {\r\n                                    ...group.restful,\r\n                                    ...updatedGroup.restful\r\n                                }\r\n                            };\r\n                        } else {\r\n                            return group;\r\n                        }\r\n                    });\r\n                    localStorage.setItem(\"X-GROUPING\", JSON.stringify(newGroups));\r\n                    cache.writeData({\r\n                        data: {\r\n                            groups: {\r\n                                __typename: \"Groups\",\r\n                                groupList: newGroups.map(group => group)\r\n                            }\r\n                        }\r\n                    });\r\n                    return {\r\n                        groupName\r\n                    };\r\n                }\r\n            },\r\n            DeleteGrouping: (_, { groupName }, { cache }) => {\r\n                const groups: Grouping[] | null = JSON.parse(localStorage.getItem(\"X-GROUPING\") || \"\");\r\n                if(groups) {\r\n                    const newGroups: Grouping[] | null = groups.filter(group => group.groupName !== groupName);\r\n                    if(newGroups) {\r\n                        localStorage.setItem(\"X-GROUPING\", JSON.stringify(newGroups));\r\n                        cache.writeData({\r\n                            data: {\r\n                                groups: {\r\n                                    __typename: \"Groups\",\r\n                                    groupList: newGroups.map(group => group)\r\n                                }\r\n                            }\r\n                        });\r\n                        return {\r\n                            groupName\r\n                        };\r\n                    }\r\n                } \r\n                return null;\r\n            },\r\n            CreateResult: (_, result: GroupResult, { cache }) => {\r\n                const { isPdf, isSendEmail, isRedirect, isRestful, message, date, ok } = result;\r\n                const newResult = {\r\n                    __typename: \"Result\",\r\n                    ok,\r\n                    isPdf,\r\n                    isSendEmail,\r\n                    isRedirect,\r\n                    isRestful,\r\n                    message,\r\n                    date\r\n                };\r\n                \r\n                const strResults = localStorage.getItem(\"X-RESULT\") || \"\";\r\n                const strGroupList = localStorage.getItem(\"X-GROUPING\") || \"\";\r\n                let newResults: Array<any> = [];\r\n                let newGroupList: Array<any> = [];\r\n\r\n                if(strResults !== \"\") {\r\n                    newResults = JSON.parse(strResults);\r\n                } \r\n                if(strGroupList !== \"\") {\r\n                    newGroupList = JSON.parse(strGroupList);\r\n                }\r\n                newResults.push(newResult);\r\n                localStorage.setItem(\"X-RESULT\", JSON.stringify(newResults || \"\"));\r\n                cache.writeData({\r\n                    data: {\r\n                        result: {\r\n                            __typename: \"Result\",\r\n                            resultList: [...newResults]\r\n                        }\r\n                    }\r\n                });\r\n                \r\n                return {\r\n                    ok,\r\n                    message\r\n                };\r\n            },\r\n            DeleteResult: (_, { index }, { cache }) => {\r\n                const strResults = localStorage.getItem(\"X-RESULT\") || \"\"\r\n                if(strResults !== \"\") {\r\n                    const results: Array<any> = JSON.parse(strResults);\r\n                    const newResults: Array<any> = results.filter((_, key) => index !== key);\r\n                    localStorage.setItem(\"X-RESULT\", JSON.stringify(newResults));\r\n                    cache.writeData({\r\n                        data: {\r\n                            result: {\r\n                                __typename: \"Result\",\r\n                                resultList: [...newResults]\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\n// .1\r\n// import ApolloClient, { Operation, InMemoryCache, HttpLink, ApolloLink } from \"apollo-boost\";\r\n// import { Grouping } from \"./Types/types\";\r\n\r\n// function getGroupList() {\r\n//     return JSON.stringify(localStorage.getItem(\"X-GROUPING\"));\r\n// }\r\n\r\n// export const client = new ApolloClient({\r\n//     clientState: {\r\n//         defaults: {\r\n//             groups: {\r\n//                 __typename: \"Group\",\r\n//                 groupList: getGroupList()\r\n//             }\r\n//         },\r\n//         resolvers: {\r\n//             Query: {\r\n//                 GetAllGrouping: (_, __, { cache }) => {\r\n//                     const groups = JSON.parse(localStorage.getItem(\"X-GROUPING\") || \"\");\r\n//                     // cache.writeData({\r\n//                     //     data: {\r\n//                     //         __typename: \"AllGrouping\",\r\n//                     //         ...groups\r\n//                     //     }\r\n//                     // });\r\n//                     return null;\r\n//                 }\r\n//             },\r\n//             Mutation: {\r\n//                 CreateGrouping: (_, data: Grouping, { cache }) => {\r\n//                     console.log(\"Create Grouping\");\r\n//                     const x_grouping = localStorage.getItem(\"X-GROUPING\") || \"\";\r\n//                     if(x_grouping === \"\") { // 없는 데이터\r\n\r\n//                     } else { // 데이터가 존재하는경우,\r\n//                         console.log(\"Input Data: \", data);\r\n//                         const groupList: Array<any> = JSON.parse(x_grouping);\r\n//                         console.log(\"Ago Group List: \", JSON.parse(x_grouping));\r\n//                         const { groupName, pdf, redirect, restful, sendEmail } = data;\r\n//                         const definedData = {\r\n//                             __typename: \"GroupItem\",\r\n//                             groupName,\r\n//                             pdf: {\r\n//                                 __typename: \"ItemPDF\",\r\n//                                 ...pdf\r\n//                             },\r\n//                             sendEamil: {\r\n//                                 __typenamae: \"ItemSendEmail\",\r\n//                                 ...sendEmail\r\n//                             },\r\n//                             redirect: {\r\n//                                 __typename: \"ItemRedirect\",\r\n//                                 ...redirect\r\n//                             },\r\n//                             restful: {\r\n//                                 __typename: \"ItemRestful\",\r\n//                                 ...restful\r\n//                             } \r\n//                         };\r\n//                         console.log(\"definedData: \", definedData);\r\n//                         groupList.push(definedData);\r\n//                         console.log(\"New GroupList: \", groupList);\r\n//                         localStorage.setItem(\"X-GROUPING\", JSON.stringify(groupList));\r\n//                         const {} = groupList;\r\n//                         cache.writeData({\r\n//                             data: {\r\n//                                 groups: {\r\n//                                     __typename: \"Group\",\r\n//                                     groupList: groupList.map(group => group)\r\n//                                 }\r\n//                             }\r\n//                         });\r\n//                         return data;\r\n//                     }\r\n                    \r\n                    \r\n//                     // const groups = JSON.parse(`\"${x_grouping}\"`);\r\n//                     // console.log(\" Current Groups: \", groups);\r\n//                     console.log(\"Create Grouping: \", data);\r\n//                     // cache.writeData({\r\n//                     //     data: {\r\n//                     //         ...data\r\n//                     //     }\r\n//                     // });\r\n                    \r\n//                     return data;\r\n//                 }\r\n//             }\r\n//         }\r\n//     },\r\n//     uri: \"http://localhost:4000/appGraphql\"\r\n// });\r\n\r\n","import { createGlobalStyle, keyframes } from \"./typed-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    html, body {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n    }\r\n    body {\r\n        position: relative;\r\n        font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;\r\n        height: 100%;\r\n        \r\n        background: linear-gradient(0deg,rgba(34,40,195,1) 0%,rgba(56,191,219,1) 0%,rgba(45,98,253,1) 66%,rgba(45,98,253,1) 84%);\r\n        // background: linear-gradient(0deg, rgba(200,135,255,1) 0%, rgba(123,33,196,1) 75%);\r\n        // background: linear-gradient(0deg, rgba(62,26,83,1) 0%, rgba(5,143,204,1) 0%, rgba(4,61,162,1) 100%)\r\n        // background: linear-gradient(90deg, rgba(68,84,111,1) 0%, rgba(40,157,164,1) 53%, rgba(68,84,111,1) 100%);\r\n\r\n    }\r\n    ul, li, a, p {\r\n        list-style: none;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    a {\r\n        color: inherit;\r\n        text-decoration: none;\r\n    }\r\n    .error {\r\n        animation: ${keyframes => Shake} 0.82s cubic-bezier(.36,.07,.19,.97) both;\r\n    }\r\n`;\r\nconst Shake = keyframes`\r\n    10%, 90% {\r\n        transform: translate3d(-1px, 0, 0);\r\n    }\r\n\r\n    20%, 80% {\r\n        transform: translate3d(2px, 0, 0);\r\n    }\r\n\r\n    30%, 50%, 70% {\r\n        transform: translate3d(-4px, 0, 0);\r\n    }\r\n\r\n    40%, 60% {\r\n        transform: translate3d(4px, 0, 0);\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from \"react-apollo\";\nimport App from './App';\nimport { client } from './apollo';\nimport GlobalStyles from './Styles/global-styles';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// export const AppStart = () => {\n//     ReactDOM.render( \n//         <ApolloProvider client={client}>\n//             <App />\n//             <GlobalStyles />\n//             <ToastContainer position={\"bottom-center\"} autoClose={5000}/>\n//         </ApolloProvider>,\n//     document.getElementById('root'));\n// }\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n        <GlobalStyles />\n        <ToastContainer position={\"bottom-center\"} autoClose={5000}/>\n    </ApolloProvider>,\ndocument.getElementById('root'));"],"sourceRoot":""}